

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 29 03:14:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  001E                     _ADRESH	set	30
   457  001F                     _ADCON0bits	set	31
   458  000B                     _INTCONbits	set	11
   459  0008                     _PORTD	set	8
   460  0006                     _PORTB	set	6
   461  001A                     _RCREG	set	26
   462  000C                     _PIR1bits	set	12
   463  0047                     _RD7	set	71
   464  0046                     _RD6	set	70
   465  0045                     _RD5	set	69
   466  009A                     _SPBRGH	set	154
   467  0099                     _SPBRG	set	153
   468  009F                     _ADCON1bits	set	159
   469  008C                     _PIE1bits	set	140
   470  008F                     _OSCCONbits	set	143
   471  0088                     _TRISDbits	set	136
   472  0087                     _TRISCbits	set	135
   473  0086                     _TRISB	set	134
   474  0187                     _BAUDCTLbits	set	391
   475  0188                     _ANSELbits	set	392
   476  0189                     _ANSELH	set	393
   477  0188                     _ANSEL	set	392
   478                           
   479                           	psect	strings
   480  0390                     __pstrings:
   481  0390                     stringtab:
   482  0390                     __stringtab:
   483                           
   484                           ;	String table - string pointers are 1 byte each
   485  0390  1BFF               	btfsc	btemp+1,7
   486  0391  2B9A               	ljmp	stringcode
   487  0392  1383               	bcf	3,7
   488  0393  187F               	btfsc	btemp+1,0
   489  0394  1783               	bsf	3,7
   490  0395  0800               	movf	0,w
   491  0396  0A84               	incf	4,f
   492  0397  1903               	skipnz
   493  0398  0AFF               	incf	btemp+1,f
   494  0399  0008               	return
   495  039A                     stringcode:
   496  039A                     stringdir:
   497  039A  3003               	movlw	high stringdir
   498  039B  008A               	movwf	10
   499  039C  0804               	movf	4,w
   500  039D  0A84               	incf	4,f
   501  039E  0782               	addwf	2,f
   502  039F                     __stringbase:
   503  039F  3400               	retlw	0
   504  03A0                     __end_of__stringtab:
   505  03A0                     STR_1:
   506  03A0  3420               	retlw	32	;' '
   507  03A1  3453               	retlw	83	;'S'
   508  03A2  3431               	retlw	49	;'1'
   509  03A3  3420               	retlw	32	;' '
   510  03A4  3420               	retlw	32	;' '
   511  03A5  3420               	retlw	32	;' '
   512  03A6  3453               	retlw	83	;'S'
   513  03A7  3432               	retlw	50	;'2'
   514  03A8  3420               	retlw	32	;' '
   515  03A9  3420               	retlw	32	;' '
   516  03AA  3420               	retlw	32	;' '
   517  03AB  3453               	retlw	83	;'S'
   518  03AC  3433               	retlw	51	;'3'
   519  03AD  3420               	retlw	32	;' '
   520  03AE  3400               	retlw	0
   521                           
   522                           	psect	cinit
   523  0011                     start_initialization:	
   524                           ; #config settings
   525                           
   526  0011                     __initialization:
   527                           
   528                           ; Clear objects allocated to COMMON
   529  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   530                           
   531                           ; Clear objects allocated to BANK0
   532  0012  1283               	bcf	3,5	;RP0=0, select bank0
   533  0013  1303               	bcf	3,6	;RP1=0, select bank0
   534  0014  01C7               	clrf	__pbssBANK0& (0+127)
   535  0015  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   536  0016  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   537  0017                     end_of_initialization:	
   538                           ;End of C runtime variable initialization code
   539                           
   540  0017                     __end_of__initialization:
   541  0017  0183               	clrf	3
   542  0018  120A  118A  2A02   	ljmp	_main	;jump to C main() function
   543                           
   544                           	psect	bssCOMMON
   545  0077                     __pbssCOMMON:
   546  0077                     _dato_recibido:
   547  0077                     	ds	1
   548                           
   549                           	psect	bssBANK0
   550  0047                     __pbssBANK0:
   551  0047                     _cuenta_uart:
   552  0047                     	ds	1
   553  0048                     _conversion2:
   554  0048                     	ds	1
   555  0049                     _conversion1:
   556  0049                     	ds	1
   557                           
   558                           	psect	cstackCOMMON
   559  0070                     __pcstackCOMMON:
   560  0070                     ?_recepcion_uart:
   561  0070                     ??_recepcion_uart:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_setup:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_lcd_clear:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_lcd_init:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_cmd:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_toggle_adc:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_lcd_ascii:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_adc_config:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_uart_config:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_isr:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_main:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_datos_ascii:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_dat:	
   598                           ; 1 bytes @ 0x0
   599                           
   600                           
   601                           ; 1 bytes @ 0x0
   602  0070                     	ds	2
   603  0072                     ??_isr:
   604                           
   605                           ; 1 bytes @ 0x2
   606  0072                     	ds	4
   607  0076                     ??_cmd:
   608  0076                     ??_adc_config:	
   609                           ; 1 bytes @ 0x6
   610                           
   611  0076                     ??_uart_config:	
   612                           ; 1 bytes @ 0x6
   613                           
   614  0076                     ??_dat:	
   615                           ; 1 bytes @ 0x6
   616                           
   617  0076                     ??___awdiv:	
   618                           ; 1 bytes @ 0x6
   619                           
   620  0076                     datos_ascii@numero:	
   621                           ; 1 bytes @ 0x6
   622                           
   623                           
   624                           ; 1 bytes @ 0x6
   625  0076                     	ds	1
   626  0077                     ??_setup:
   627  0077                     ??_lcd_clear:	
   628                           ; 1 bytes @ 0x7
   629                           
   630  0077                     ??_lcd_init:	
   631                           ; 1 bytes @ 0x7
   632                           
   633                           
   634                           	psect	cstackBANK0
   635  0020                     __pcstackBANK0:	
   636                           ; 1 bytes @ 0x7
   637                           
   638  0020                     ??_toggle_adc:
   639  0020                     ??_datos_ascii:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0020                     ?___awdiv:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0020                     cmd@a:	
   646                           ; 2 bytes @ 0x0
   647                           
   648  0020                     dat@b:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0020                     ___awdiv@divisor:	
   652                           ; 1 bytes @ 0x0
   653                           
   654                           
   655                           ; 2 bytes @ 0x0
   656  0020                     	ds	1
   657  0021                     ?_lcd_linea:
   658  0021                     lcd_linea@b:	
   659                           ; 1 bytes @ 0x1
   660                           
   661                           
   662                           ; 1 bytes @ 0x1
   663  0021                     	ds	1
   664  0022                     ??_lcd_linea:
   665  0022                     ___awdiv@dividend:	
   666                           ; 1 bytes @ 0x2
   667                           
   668                           
   669                           ; 2 bytes @ 0x2
   670  0022                     	ds	1
   671  0023                     lcd_linea@a:
   672                           
   673                           ; 1 bytes @ 0x3
   674  0023                     	ds	1
   675  0024                     lcd_linea@temp:
   676  0024                     ___awdiv@counter:	
   677                           ; 1 bytes @ 0x4
   678                           
   679                           
   680                           ; 1 bytes @ 0x4
   681  0024                     	ds	1
   682  0025                     lcd_linea@z:
   683  0025                     ___awdiv@sign:	
   684                           ; 1 bytes @ 0x5
   685                           
   686                           
   687                           ; 1 bytes @ 0x5
   688  0025                     	ds	1
   689  0026                     ___awdiv@quotient:
   690                           
   691                           ; 2 bytes @ 0x6
   692  0026                     	ds	2
   693  0028                     ?___awmod:
   694  0028                     ___awmod@divisor:	
   695                           ; 2 bytes @ 0x8
   696                           
   697                           
   698                           ; 2 bytes @ 0x8
   699  0028                     	ds	2
   700  002A                     ___awmod@dividend:
   701                           
   702                           ; 2 bytes @ 0xA
   703  002A                     	ds	2
   704  002C                     ??___awmod:
   705                           
   706                           ; 1 bytes @ 0xC
   707  002C                     	ds	1
   708  002D                     ___awmod@counter:
   709                           
   710                           ; 1 bytes @ 0xD
   711  002D                     	ds	1
   712  002E                     ___awmod@sign:
   713                           
   714                           ; 1 bytes @ 0xE
   715  002E                     	ds	1
   716  002F                     ??_lcd_ascii:
   717                           
   718                           ; 1 bytes @ 0xF
   719  002F                     	ds	3
   720  0032                     lcd_ascii@random:
   721                           
   722                           ; 16 bytes @ 0x12
   723  0032                     	ds	16
   724  0042                     ?_show:
   725  0042                     show@s:	
   726                           ; 1 bytes @ 0x22
   727                           
   728                           
   729                           ; 2 bytes @ 0x22
   730  0042                     	ds	2
   731  0044                     ??_show:
   732                           
   733                           ; 1 bytes @ 0x24
   734  0044                     	ds	1
   735  0045                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x25
   738  0045                     	ds	2
   739                           
   740                           	psect	maintext
   741  0202                     __pmaintext:	
   742 ;;
   743 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   744 ;;
   745 ;; *************** function _main *****************
   746 ;; Defined at:
   747 ;;		line 78 in file "main_.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : B00/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       2       0       0       0
   764 ;;      Totals:         0       2       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels required when called:    4
   767 ;; This function calls:
   768 ;;		_cmd
   769 ;;		_lcd_ascii
   770 ;;		_lcd_clear
   771 ;;		_lcd_init
   772 ;;		_lcd_linea
   773 ;;		_setup
   774 ;;		_show
   775 ;;		_toggle_adc
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _main
   783  0202                     _main:
   784  0202                     l1745:	
   785                           ;incstack = 0
   786                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   787                           
   788                           
   789                           ;main_.c: 80:     setup();
   790  0202  120A  118A  2365  120A  118A  	fcall	_setup
   791                           
   792                           ;main_.c: 82:     lcd_clear();
   793  0207  120A  118A  2430  120A  118A  	fcall	_lcd_clear
   794                           
   795                           ;main_.c: 83:     lcd_init();
   796  020C  120A  118A  22D1  120A  118A  	fcall	_lcd_init
   797                           
   798                           ;main_.c: 84:  cmd(0x90);
   799  0211  3090               	movlw	144
   800  0212  120A  118A  240F  120A  118A  	fcall	_cmd
   801  0217                     l1747:
   802                           
   803                           ;main_.c: 87:     {;main_.c: 89:         toggle_adc();
   804  0217  120A  118A  2292  120A  118A  	fcall	_toggle_adc
   805  021C                     l1749:
   806                           
   807                           ;main_.c: 93:         lcd_linea(1,1);
   808  021C  1283               	bcf	3,5	;RP0=0, select bank0
   809  021D  1303               	bcf	3,6	;RP1=0, select bank0
   810  021E  01A1               	clrf	lcd_linea@b
   811  021F  0AA1               	incf	lcd_linea@b,f
   812  0220  3001               	movlw	1
   813  0221  120A  118A  2337  120A  118A  	fcall	_lcd_linea
   814  0226                     l1751:
   815                           
   816                           ;main_.c: 94:         show(" S1   S2   S3 ");
   817  0226  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   818  0227  1283               	bcf	3,5	;RP0=0, select bank0
   819  0228  1303               	bcf	3,6	;RP1=0, select bank0
   820  0229  00C2               	movwf	show@s
   821  022A  3080               	movlw	128
   822  022B  00C3               	movwf	show@s+1
   823  022C  120A  118A  2308  120A  118A  	fcall	_show
   824  0231                     l1753:
   825                           
   826                           ;main_.c: 95:         lcd_linea(2,1);
   827  0231  1283               	bcf	3,5	;RP0=0, select bank0
   828  0232  1303               	bcf	3,6	;RP1=0, select bank0
   829  0233  01A1               	clrf	lcd_linea@b
   830  0234  0AA1               	incf	lcd_linea@b,f
   831  0235  3002               	movlw	2
   832  0236  120A  118A  2337  120A  118A  	fcall	_lcd_linea
   833  023B                     l1755:
   834                           
   835                           ;main_.c: 96:         show(lcd_ascii());
   836  023B  120A  118A  201B  120A  118A  	fcall	_lcd_ascii
   837  0240  1283               	bcf	3,5	;RP0=0, select bank0
   838  0241  1303               	bcf	3,6	;RP1=0, select bank0
   839  0242  00C5               	movwf	??_main
   840  0243  01C6               	clrf	??_main+1
   841  0244  0845               	movf	??_main,w
   842  0245  00C2               	movwf	show@s
   843  0246  0846               	movf	??_main+1,w
   844  0247  00C3               	movwf	show@s+1
   845  0248  120A  118A  2308  120A  118A  	fcall	_show
   846  024D  2A17               	goto	l1747
   847  024E  120A  118A  280E   	ljmp	start
   848  0251                     __end_of_main:
   849                           
   850                           	psect	text1
   851  0292                     __ptext1:	
   852 ;; *************** function _toggle_adc *****************
   853 ;; Defined at:
   854 ;;		line 144 in file "main_.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       3       0       0       0
   871 ;;      Totals:         0       3       0       0       0
   872 ;;Total ram usage:        3 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    2
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _toggle_adc
   884  0292                     _toggle_adc:
   885  0292                     l1369:	
   886                           ;incstack = 0
   887                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   888                           
   889                           
   890                           ;main_.c: 146:     if (ADCON0bits.GO==0)
   891  0292  1283               	bcf	3,5	;RP0=0, select bank0
   892  0293  1303               	bcf	3,6	;RP1=0, select bank0
   893  0294  189F               	btfsc	31,1	;volatile
   894  0295  2A97               	goto	u441
   895  0296  2A98               	goto	u440
   896  0297                     u441:
   897  0297  2AD0               	goto	l87
   898  0298                     u440:
   899  0298  2ABD               	goto	l1389
   900  0299                     l1373:
   901                           
   902                           ;main_.c: 151:                 conversion1=ADRESH;
   903  0299  081E               	movf	30,w	;volatile
   904  029A  00A0               	movwf	??_toggle_adc
   905  029B  0820               	movf	??_toggle_adc,w
   906  029C  00C9               	movwf	_conversion1
   907                           
   908                           ;main_.c: 152:                 _delay((unsigned long)((100)*(4000000/4000000.0)));
   909  029D  3020               	movlw	32
   910  029E  1283               	bcf	3,5	;RP0=0, select bank0
   911  029F  1303               	bcf	3,6	;RP1=0, select bank0
   912  02A0  00A0               	movwf	??_toggle_adc
   913  02A1                     u617:
   914  02A1  0BA0               	decfsz	??_toggle_adc,f
   915  02A2  2AA1               	goto	u617
   916  02A3  0000               	nop
   917  02A4                     l1375:
   918                           
   919                           ;main_.c: 153:                 ADCON0bits.CHS=1;
   920  02A4  1283               	bcf	3,5	;RP0=0, select bank0
   921  02A5  1303               	bcf	3,6	;RP1=0, select bank0
   922  02A6  081F               	movf	31,w	;volatile
   923  02A7  39C3               	andlw	-61
   924  02A8  3804               	iorlw	4
   925  02A9  009F               	movwf	31	;volatile
   926  02AA                     l1377:
   927                           
   928                           ;main_.c: 154:                 ADCON0bits.GO=1;
   929  02AA  149F               	bsf	31,1	;volatile
   930                           
   931                           ;main_.c: 155:                 break;
   932  02AB  2AD0               	goto	l87
   933  02AC                     l1379:
   934                           
   935                           ;main_.c: 158:                 conversion2=ADRESH;
   936  02AC  081E               	movf	30,w	;volatile
   937  02AD  00A0               	movwf	??_toggle_adc
   938  02AE  0820               	movf	??_toggle_adc,w
   939  02AF  00C8               	movwf	_conversion2
   940                           
   941                           ;main_.c: 159:                 _delay((unsigned long)((100)*(4000000/4000000.0)));
   942  02B0  3020               	movlw	32
   943  02B1  1283               	bcf	3,5	;RP0=0, select bank0
   944  02B2  1303               	bcf	3,6	;RP1=0, select bank0
   945  02B3  00A0               	movwf	??_toggle_adc
   946  02B4                     u627:
   947  02B4  0BA0               	decfsz	??_toggle_adc,f
   948  02B5  2AB4               	goto	u627
   949  02B6  0000               	nop
   950  02B7                     l1381:
   951                           
   952                           ;main_.c: 160:                 ADCON0bits.CHS=0;
   953  02B7  30C3               	movlw	-61
   954  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   955  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   956  02BA  059F               	andwf	31,f	;volatile
   957  02BB                     l1383:
   958                           
   959                           ;main_.c: 161:                 ADCON0bits.GO=1;
   960  02BB  149F               	bsf	31,1	;volatile
   961                           
   962                           ;main_.c: 162:                 break;
   963  02BC  2AD0               	goto	l87
   964  02BD                     l1389:
   965  02BD  0C1F               	rrf	31,w	;volatile
   966  02BE  00A0               	movwf	??_toggle_adc
   967  02BF  0C20               	rrf	??_toggle_adc,w
   968  02C0  390F               	andlw	15
   969  02C1  00A1               	movwf	??_toggle_adc+1
   970  02C2  01A2               	clrf	??_toggle_adc+2
   971                           
   972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   973                           ; Switch size 1, requested type "simple"
   974                           ; Number of cases is 1, Range of values is 0 to 0
   975                           ; switch strategies available:
   976                           ; Name         Instructions Cycles
   977                           ; simple_byte            4     3 (average)
   978                           ; direct_byte           11     8 (fixed)
   979                           ; jumptable            260     6 (fixed)
   980                           ;	Chosen strategy is simple_byte
   981  02C3  0822               	movf	??_toggle_adc+2,w
   982  02C4  3A00               	xorlw	0	; case 0
   983  02C5  1903               	skipnz
   984  02C6  2AC8               	goto	l1831
   985  02C7  2AD0               	goto	l87
   986  02C8                     l1831:
   987                           
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 2, Range of values is 0 to 1
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte            7     4 (average)
   993                           ; direct_byte           14     8 (fixed)
   994                           ; jumptable            260     6 (fixed)
   995                           ;	Chosen strategy is simple_byte
   996  02C8  0821               	movf	??_toggle_adc+1,w
   997  02C9  3A00               	xorlw	0	; case 0
   998  02CA  1903               	skipnz
   999  02CB  2A99               	goto	l1373
  1000  02CC  3A01               	xorlw	1	; case 1
  1001  02CD  1903               	skipnz
  1002  02CE  2AAC               	goto	l1379
  1003  02CF  2AD0               	goto	l87
  1004  02D0                     l87:
  1005  02D0  0008               	return
  1006  02D1                     __end_of_toggle_adc:
  1007                           
  1008                           	psect	text2
  1009  0308                     __ptext2:	
  1010 ;; *************** function _show *****************
  1011 ;; Defined at:
  1012 ;;		line 72 in file "LCD.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  s               2   34[BANK0 ] PTR unsigned char 
  1015 ;;		 -> RAM(512), STR_1(15), 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       2       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          0       1       0       0       0
  1030 ;;      Totals:         0       3       0       0       0
  1031 ;;Total ram usage:        3 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    3
  1034 ;; This function calls:
  1035 ;;		_dat
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _show
  1043  0308                     _show:
  1044  0308                     l1703:	
  1045                           ;incstack = 0
  1046                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1047                           
  1048                           
  1049                           ;LCD.c: 72: void show(unsigned char *s);LCD.c: 73: {;LCD.c: 74:  while(*s) {
  1050  0308  2B26               	goto	l1711
  1051  0309                     l1705:
  1052                           
  1053                           ;LCD.c: 75:   dat(*s++);
  1054  0309  0843               	movf	show@s+1,w
  1055  030A  00FF               	movwf	btemp+1
  1056  030B  0842               	movf	show@s,w
  1057  030C  0084               	movwf	4
  1058  030D  120A  118A  2390  120A  118A  	fcall	stringtab
  1059  0312  120A  118A  23FC  120A  118A  	fcall	_dat
  1060  0317                     l1707:
  1061  0317  3001               	movlw	1
  1062  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1064  031A  07C2               	addwf	show@s,f
  1065  031B  1803               	skipnc
  1066  031C  0AC3               	incf	show@s+1,f
  1067  031D  3000               	movlw	0
  1068  031E  07C3               	addwf	show@s+1,f
  1069  031F                     l1709:
  1070                           
  1071                           ;LCD.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1072  031F  300C               	movlw	12
  1073  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0322  00C4               	movwf	??_show
  1076  0323                     u637:
  1077  0323  0BC4               	decfsz	??_show,f
  1078  0324  2B23               	goto	u637
  1079  0325  0000               	nop
  1080  0326                     l1711:
  1081                           
  1082                           ;LCD.c: 74:  while(*s) {
  1083  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0328  0843               	movf	show@s+1,w
  1086  0329  00FF               	movwf	btemp+1
  1087  032A  0842               	movf	show@s,w
  1088  032B  0084               	movwf	4
  1089  032C  120A  118A  2390  120A  118A  	fcall	stringtab
  1090  0331  3A00               	xorlw	0
  1091  0332  1D03               	skipz
  1092  0333  2B35               	goto	u601
  1093  0334  2B36               	goto	u600
  1094  0335                     u601:
  1095  0335  2B09               	goto	l1705
  1096  0336                     u600:
  1097  0336                     l143:
  1098  0336  0008               	return
  1099  0337                     __end_of_show:
  1100                           
  1101                           	psect	text3
  1102  03FC                     __ptext3:	
  1103 ;; *************** function _dat *****************
  1104 ;; Defined at:
  1105 ;;		line 61 in file "LCD.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  b               1    wreg     unsigned char 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  b               1    0[BANK0 ] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0       1       0       0       0
  1121 ;;      Temps:          1       0       0       0       0
  1122 ;;      Totals:         1       1       0       0       0
  1123 ;;Total ram usage:        2 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    2
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_show
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _dat
  1135  03FC                     _dat:
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _dat: [wreg]
  1139                           ;dat@b stored from wreg
  1140  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1141  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1142  03FE  00A0               	movwf	dat@b
  1143  03FF                     l1635:
  1144                           
  1145                           ;LCD.c: 61: void dat(unsigned char b);LCD.c: 62: {;LCD.c: 63:  PORTB=b;
  1146  03FF  0820               	movf	dat@b,w
  1147  0400  0086               	movwf	6	;volatile
  1148  0401                     l1637:
  1149                           
  1150                           ;LCD.c: 64:  RD5=1;
  1151  0401  1688               	bsf	8,5	;volatile
  1152  0402                     l1639:
  1153                           
  1154                           ;LCD.c: 65:  RD6=0;
  1155  0402  1308               	bcf	8,6	;volatile
  1156  0403                     l1641:
  1157                           
  1158                           ;LCD.c: 66:  RD7=1;
  1159  0403  1788               	bsf	8,7	;volatile
  1160                           
  1161                           ;LCD.c: 67:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1162  0404  30C7               	movlw	199
  1163  0405  00F6               	movwf	??_dat
  1164  0406                     u647:
  1165  0406  2C07               	nop2
  1166  0407  0BF6               	decfsz	??_dat,f
  1167  0408  2C06               	goto	u647
  1168  0409  2C0A               	nop2
  1169  040A  2C0B               	nop2
  1170  040B                     l1643:
  1171                           
  1172                           ;LCD.c: 68:  RD7=0;
  1173  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1174  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1175  040D  1388               	bcf	8,7	;volatile
  1176  040E                     l137:
  1177  040E  0008               	return
  1178  040F                     __end_of_dat:
  1179                           
  1180                           	psect	text4
  1181  0365                     __ptext4:	
  1182 ;; *************** function _setup *****************
  1183 ;; Defined at:
  1184 ;;		line 103 in file "main_.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    3
  1205 ;; This function calls:
  1206 ;;		_adc_config
  1207 ;;		_uart_config
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _setup
  1215  0365                     _setup:
  1216  0365                     l979:	
  1217                           ;incstack = 0
  1218                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1219                           
  1220                           
  1221                           ;main_.c: 106:     ANSEL=0;
  1222  0365  1683               	bsf	3,5	;RP0=1, select bank3
  1223  0366  1703               	bsf	3,6	;RP1=1, select bank3
  1224  0367  0188               	clrf	8	;volatile
  1225                           
  1226                           ;main_.c: 107:     ANSELH=0;
  1227  0368  0189               	clrf	9	;volatile
  1228  0369                     l981:
  1229                           
  1230                           ;main_.c: 108:     ANSELbits.ANS0=1;
  1231  0369  1408               	bsf	8,0	;volatile
  1232  036A                     l983:
  1233                           
  1234                           ;main_.c: 109:     ANSELbits.ANS1=1;
  1235  036A  1488               	bsf	8,1	;volatile
  1236                           
  1237                           ;main_.c: 112:     TRISB=0;
  1238  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1239  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1240  036D  0186               	clrf	6	;volatile
  1241  036E                     l985:
  1242                           
  1243                           ;main_.c: 113:     TRISCbits.TRISC6=0;
  1244  036E  1307               	bcf	7,6	;volatile
  1245  036F                     l987:
  1246                           
  1247                           ;main_.c: 114:     TRISCbits.TRISC7=1;
  1248  036F  1787               	bsf	7,7	;volatile
  1249  0370                     l989:
  1250                           
  1251                           ;main_.c: 116:     TRISDbits.TRISD5=0;
  1252  0370  1288               	bcf	8,5	;volatile
  1253  0371                     l991:
  1254                           
  1255                           ;main_.c: 117:     TRISDbits.TRISD6=0;
  1256  0371  1308               	bcf	8,6	;volatile
  1257  0372                     l993:
  1258                           
  1259                           ;main_.c: 118:     TRISDbits.TRISD7=0;
  1260  0372  1388               	bcf	8,7	;volatile
  1261                           
  1262                           ;main_.c: 121:     PORTB=0;
  1263  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0375  0186               	clrf	6	;volatile
  1266                           
  1267                           ;main_.c: 122:     PORTD=0;
  1268  0376  0188               	clrf	8	;volatile
  1269  0377                     l995:
  1270                           
  1271                           ;main_.c: 125:     OSCCONbits.IRCF=0b110;
  1272  0377  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0378  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0379  080F               	movf	15,w	;volatile
  1275  037A  398F               	andlw	-113
  1276  037B  3860               	iorlw	96
  1277  037C  008F               	movwf	15	;volatile
  1278  037D                     l997:
  1279                           
  1280                           ;main_.c: 126:     OSCCONbits.SCS=1;
  1281  037D  140F               	bsf	15,0	;volatile
  1282  037E                     l999:
  1283                           
  1284                           ;main_.c: 129:     adc_config();
  1285  037E  120A  118A  23E6  120A  118A  	fcall	_adc_config
  1286  0383                     l1001:
  1287                           
  1288                           ;main_.c: 132:     uart_config();
  1289  0383  120A  118A  2422  120A  118A  	fcall	_uart_config
  1290  0388                     l1003:
  1291                           
  1292                           ;main_.c: 135:     INTCONbits.GIE=1;
  1293  0388  178B               	bsf	11,7	;volatile
  1294  0389                     l1005:
  1295                           
  1296                           ;main_.c: 136:     PIE1bits.RCIE=1;
  1297  0389  1683               	bsf	3,5	;RP0=1, select bank1
  1298  038A  1303               	bcf	3,6	;RP1=0, select bank1
  1299  038B  168C               	bsf	12,5	;volatile
  1300  038C                     l1007:
  1301                           
  1302                           ;main_.c: 137:     PIR1bits.RCIF=0;
  1303  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1304  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1305  038E  128C               	bcf	12,5	;volatile
  1306  038F                     l79:
  1307  038F  0008               	return
  1308  0390                     __end_of_setup:
  1309                           
  1310                           	psect	text5
  1311  0422                     __ptext5:	
  1312 ;; *************** function _uart_config *****************
  1313 ;; Defined at:
  1314 ;;		line 19 in file "UART_CONFIG.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_setup
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _uart_config
  1344  0422                     _uart_config:
  1345  0422                     l785:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _uart_config: [wreg+status,2]
  1348                           
  1349                           
  1350                           ;UART_CONFIG.c: 23:     BAUDCTLbits.BRG16 = 1;
  1351  0422  1683               	bsf	3,5	;RP0=1, select bank3
  1352  0423  1703               	bsf	3,6	;RP1=1, select bank3
  1353  0424  1587               	bsf	7,3	;volatile
  1354  0425                     l787:
  1355                           
  1356                           ;UART_CONFIG.c: 24:     SPBRG = 25;
  1357  0425  3019               	movlw	25
  1358  0426  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0427  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0428  0099               	movwf	25	;volatile
  1361  0429                     l789:
  1362                           
  1363                           ;UART_CONFIG.c: 25:     SPBRGH = 0;
  1364  0429  019A               	clrf	26	;volatile
  1365  042A                     l791:
  1366                           
  1367                           ;UART_CONFIG.c: 27:     RCSTAbits.SPEN = 1;
  1368  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1369  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1370  042C  1798               	bsf	24,7	;volatile
  1371  042D                     l793:
  1372                           
  1373                           ;UART_CONFIG.c: 28:     RCSTAbits.RX9 = 0;
  1374  042D  1318               	bcf	24,6	;volatile
  1375  042E                     l795:
  1376                           
  1377                           ;UART_CONFIG.c: 30:     RCSTAbits.CREN = 1;
  1378  042E  1618               	bsf	24,4	;volatile
  1379  042F                     l175:
  1380  042F  0008               	return
  1381  0430                     __end_of_uart_config:
  1382                           
  1383                           	psect	text6
  1384  03E6                     __ptext6:	
  1385 ;; *************** function _adc_config *****************
  1386 ;; Defined at:
  1387 ;;		line 22 in file "ADC_CONFIG.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0
  1403 ;;      Temps:          1       0       0       0       0
  1404 ;;      Totals:         1       0       0       0       0
  1405 ;;Total ram usage:        1 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    2
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_setup
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _adc_config
  1417  03E6                     _adc_config:
  1418  03E6                     l777:	
  1419                           ;incstack = 0
  1420                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1421                           
  1422                           
  1423                           ;ADC_CONFIG.c: 25:     ADCON1bits.ADFM = 0 ;
  1424  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1425  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1426  03E8  139F               	bcf	31,7	;volatile
  1427                           
  1428                           ;ADC_CONFIG.c: 26:     ADCON1bits.VCFG0 = 0 ;
  1429  03E9  121F               	bcf	31,4	;volatile
  1430                           
  1431                           ;ADC_CONFIG.c: 27:     ADCON1bits.VCFG1 = 0 ;
  1432  03EA  129F               	bcf	31,5	;volatile
  1433  03EB                     l779:
  1434                           
  1435                           ;ADC_CONFIG.c: 29:     ADCON0bits.ADCS = 0b01;
  1436  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1437  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1438  03ED  081F               	movf	31,w	;volatile
  1439  03EE  393F               	andlw	-193
  1440  03EF  3840               	iorlw	64
  1441  03F0  009F               	movwf	31	;volatile
  1442                           
  1443                           ;ADC_CONFIG.c: 30:     ADCON0bits.CHS = 0;
  1444  03F1  30C3               	movlw	-61
  1445  03F2  059F               	andwf	31,f	;volatile
  1446  03F3                     l781:
  1447                           
  1448                           ;ADC_CONFIG.c: 31:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1449  03F3  3010               	movlw	16
  1450  03F4  00F6               	movwf	??_adc_config
  1451  03F5                     u657:
  1452  03F5  0BF6               	decfsz	??_adc_config,f
  1453  03F6  2BF5               	goto	u657
  1454  03F7  0000               	nop
  1455  03F8                     l783:
  1456                           
  1457                           ;ADC_CONFIG.c: 32:     ADCON0bits.ADON = 1 ;
  1458  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1459  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1460  03FA  141F               	bsf	31,0	;volatile
  1461  03FB                     l164:
  1462  03FB  0008               	return
  1463  03FC                     __end_of_adc_config:
  1464                           
  1465                           	psect	text7
  1466  0337                     __ptext7:	
  1467 ;; *************** function _lcd_linea *****************
  1468 ;; Defined at:
  1469 ;;		line 81 in file "LCD.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  a               1    wreg     unsigned char 
  1472 ;;  b               1    1[BANK0 ] unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  a               1    3[BANK0 ] unsigned char 
  1475 ;;  z               1    5[BANK0 ] unsigned char 
  1476 ;;  temp            1    4[BANK0 ] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       1       0       0       0
  1487 ;;      Locals:         0       3       0       0       0
  1488 ;;      Temps:          0       1       0       0       0
  1489 ;;      Totals:         0       5       0       0       0
  1490 ;;Total ram usage:        5 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    3
  1493 ;; This function calls:
  1494 ;;		_cmd
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _lcd_linea
  1502  0337                     _lcd_linea:
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1506                           ;lcd_linea@a stored from wreg
  1507  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0339  00A3               	movwf	lcd_linea@a
  1510  033A                     l1687:
  1511                           
  1512                           ;LCD.c: 82:     char temp, z;;LCD.c: 83:     if (a == 1)
  1513  033A  0323               	decf	lcd_linea@a,w
  1514  033B  1D03               	btfss	3,2
  1515  033C  2B3E               	goto	u581
  1516  033D  2B3F               	goto	u580
  1517  033E                     u581:
  1518  033E  2B4F               	goto	l1695
  1519  033F                     u580:
  1520  033F                     l1689:
  1521                           
  1522                           ;LCD.c: 84:     {;LCD.c: 85:         temp = 0x80 + b - 1;
  1523  033F  0821               	movf	lcd_linea@b,w
  1524  0340  3E7F               	addlw	127
  1525  0341  00A2               	movwf	??_lcd_linea
  1526  0342  0822               	movf	??_lcd_linea,w
  1527  0343  00A4               	movwf	lcd_linea@temp
  1528  0344                     l1691:
  1529                           
  1530                           ;LCD.c: 86:         z = temp;
  1531  0344  0824               	movf	lcd_linea@temp,w
  1532  0345  00A2               	movwf	??_lcd_linea
  1533  0346  0822               	movf	??_lcd_linea,w
  1534  0347  00A5               	movwf	lcd_linea@z
  1535  0348                     l1693:
  1536                           
  1537                           ;LCD.c: 87:         cmd(z);
  1538  0348  0825               	movf	lcd_linea@z,w
  1539  0349  120A  118A  240F  120A  118A  	fcall	_cmd
  1540                           
  1541                           ;LCD.c: 89:     }
  1542  034E  2B64               	goto	l149
  1543  034F                     l1695:
  1544  034F  3002               	movlw	2
  1545  0350  0623               	xorwf	lcd_linea@a,w
  1546  0351  1D03               	btfss	3,2
  1547  0352  2B54               	goto	u591
  1548  0353  2B55               	goto	u590
  1549  0354                     u591:
  1550  0354  2B64               	goto	l149
  1551  0355                     u590:
  1552  0355                     l1697:
  1553                           
  1554                           ;LCD.c: 91:     {;LCD.c: 92:         temp = 0xC0 + b - 1;
  1555  0355  0821               	movf	lcd_linea@b,w
  1556  0356  3EBF               	addlw	191
  1557  0357  00A2               	movwf	??_lcd_linea
  1558  0358  0822               	movf	??_lcd_linea,w
  1559  0359  00A4               	movwf	lcd_linea@temp
  1560  035A                     l1699:
  1561                           
  1562                           ;LCD.c: 93:         z = temp;
  1563  035A  0824               	movf	lcd_linea@temp,w
  1564  035B  00A2               	movwf	??_lcd_linea
  1565  035C  0822               	movf	??_lcd_linea,w
  1566  035D  00A5               	movwf	lcd_linea@z
  1567  035E                     l1701:
  1568                           
  1569                           ;LCD.c: 94:         cmd(z);
  1570  035E  0825               	movf	lcd_linea@z,w
  1571  035F  120A  118A  240F  120A  118A  	fcall	_cmd
  1572  0364                     l149:
  1573  0364  0008               	return
  1574  0365                     __end_of_lcd_linea:
  1575                           
  1576                           	psect	text8
  1577  02D1                     __ptext8:	
  1578 ;; *************** function _lcd_init *****************
  1579 ;; Defined at:
  1580 ;;		line 36 in file "LCD.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, pclath, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    3
  1601 ;; This function calls:
  1602 ;;		_cmd
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _lcd_init
  1610  02D1                     _lcd_init:
  1611  02D1                     l1685:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1614                           
  1615                           
  1616                           ;LCD.c: 38:     cmd(0x30);
  1617  02D1  3030               	movlw	48
  1618  02D2  120A  118A  240F  120A  118A  	fcall	_cmd
  1619                           
  1620                           ;LCD.c: 39:  cmd(0x0C);
  1621  02D7  300C               	movlw	12
  1622  02D8  120A  118A  240F  120A  118A  	fcall	_cmd
  1623                           
  1624                           ;LCD.c: 40:  cmd(0x01);
  1625  02DD  3001               	movlw	1
  1626  02DE  120A  118A  240F  120A  118A  	fcall	_cmd
  1627                           
  1628                           ;LCD.c: 41:  cmd(0x06);
  1629  02E3  3006               	movlw	6
  1630  02E4  120A  118A  240F  120A  118A  	fcall	_cmd
  1631                           
  1632                           ;LCD.c: 42:  cmd(0x80);
  1633  02E9  3080               	movlw	128
  1634  02EA  120A  118A  240F  120A  118A  	fcall	_cmd
  1635                           
  1636                           ;LCD.c: 43:  cmd(0x38);
  1637  02EF  3038               	movlw	56
  1638  02F0  120A  118A  240F  120A  118A  	fcall	_cmd
  1639                           
  1640                           ;LCD.c: 44:  cmd(0x0c);
  1641  02F5  300C               	movlw	12
  1642  02F6  120A  118A  240F  120A  118A  	fcall	_cmd
  1643                           
  1644                           ;LCD.c: 45:  cmd(0x06);
  1645  02FB  3006               	movlw	6
  1646  02FC  120A  118A  240F  120A  118A  	fcall	_cmd
  1647                           
  1648                           ;LCD.c: 46:  cmd(0x80);
  1649  0301  3080               	movlw	128
  1650  0302  120A  118A  240F  120A  118A  	fcall	_cmd
  1651  0307                     l131:
  1652  0307  0008               	return
  1653  0308                     __end_of_lcd_init:
  1654                           
  1655                           	psect	text9
  1656  0430                     __ptext9:	
  1657 ;; *************** function _lcd_clear *****************
  1658 ;; Defined at:
  1659 ;;		line 29 in file "LCD.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    3
  1680 ;; This function calls:
  1681 ;;		_cmd
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _lcd_clear
  1689  0430                     _lcd_clear:
  1690  0430                     l1683:	
  1691                           ;incstack = 0
  1692                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1693                           
  1694                           
  1695                           ;LCD.c: 31:     cmd(0);
  1696  0430  3000               	movlw	0
  1697  0431  120A  118A  240F  120A  118A  	fcall	_cmd
  1698                           
  1699                           ;LCD.c: 32:     cmd(1);
  1700  0436  3001               	movlw	1
  1701  0437  120A  118A  240F  120A  118A  	fcall	_cmd
  1702  043C                     l128:
  1703  043C  0008               	return
  1704  043D                     __end_of_lcd_clear:
  1705                           
  1706                           	psect	text10
  1707  040F                     __ptext10:	
  1708 ;; *************** function _cmd *****************
  1709 ;; Defined at:
  1710 ;;		line 50 in file "LCD.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  a               1    wreg     unsigned char 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  a               1    0[BANK0 ] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         0       0       0       0       0
  1725 ;;      Locals:         0       1       0       0       0
  1726 ;;      Temps:          1       0       0       0       0
  1727 ;;      Totals:         1       1       0       0       0
  1728 ;;Total ram usage:        2 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    2
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;;		_lcd_clear
  1736 ;;		_lcd_init
  1737 ;;		_lcd_linea
  1738 ;;		_lcd_mov_derecha
  1739 ;;		_lcd_mov_izquierda
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _cmd
  1745  040F                     _cmd:
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _cmd: [wreg]
  1749                           ;cmd@a stored from wreg
  1750  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0411  00A0               	movwf	cmd@a
  1753  0412                     l1547:
  1754                           
  1755                           ;LCD.c: 50: void cmd(unsigned char a);LCD.c: 51: {;LCD.c: 52:  PORTB=a;
  1756  0412  0820               	movf	cmd@a,w
  1757  0413  0086               	movwf	6	;volatile
  1758  0414                     l1549:
  1759                           
  1760                           ;LCD.c: 53:  RD5=0;
  1761  0414  1288               	bcf	8,5	;volatile
  1762  0415                     l1551:
  1763                           
  1764                           ;LCD.c: 54:  RD6=0;
  1765  0415  1308               	bcf	8,6	;volatile
  1766  0416                     l1553:
  1767                           
  1768                           ;LCD.c: 55:  RD7=1;
  1769  0416  1788               	bsf	8,7	;volatile
  1770                           
  1771                           ;LCD.c: 56:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1772  0417  30C7               	movlw	199
  1773  0418  00F6               	movwf	??_cmd
  1774  0419                     u667:
  1775  0419  2C1A               	nop2
  1776  041A  0BF6               	decfsz	??_cmd,f
  1777  041B  2C19               	goto	u667
  1778  041C  2C1D               	nop2
  1779  041D  2C1E               	nop2
  1780  041E                     l1555:
  1781                           
  1782                           ;LCD.c: 57:  RD7=0;
  1783  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1784  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0420  1388               	bcf	8,7	;volatile
  1786  0421                     l134:
  1787  0421  0008               	return
  1788  0422                     __end_of_cmd:
  1789                           
  1790                           	psect	text11
  1791  001B                     __ptext11:	
  1792 ;; *************** function _lcd_ascii *****************
  1793 ;; Defined at:
  1794 ;;		line 222 in file "main_.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  random         16   18[BANK0 ] unsigned char [16]
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      unsigned char 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0      16       0       0       0
  1810 ;;      Temps:          0       3       0       0       0
  1811 ;;      Totals:         0      19       0       0       0
  1812 ;;Total ram usage:       19 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    3
  1815 ;; This function calls:
  1816 ;;		___awdiv
  1817 ;;		___awmod
  1818 ;;		_datos_ascii
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _lcd_ascii
  1826  001B                     _lcd_ascii:
  1827  001B                     l1713:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1830                           
  1831                           
  1832                           ;main_.c: 224:     uint8_t random[16];;main_.c: 225:     random[0]=datos_ascii(((2*(conv
      +                          ersion1)/100)%10));
  1833  001B  300A               	movlw	10
  1834  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1835  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1836  001E  00A8               	movwf	___awmod@divisor
  1837  001F  3000               	movlw	0
  1838  0020  00A9               	movwf	___awmod@divisor+1
  1839  0021  3064               	movlw	100
  1840  0022  00A0               	movwf	___awdiv@divisor
  1841  0023  3000               	movlw	0
  1842  0024  00A1               	movwf	___awdiv@divisor+1
  1843  0025  0849               	movf	_conversion1,w
  1844  0026  00AF               	movwf	??_lcd_ascii
  1845  0027  01B0               	clrf	??_lcd_ascii+1
  1846  0028  1003               	clrc
  1847  0029  0D2F               	rlf	??_lcd_ascii,w
  1848  002A  00A2               	movwf	___awdiv@dividend
  1849  002B  0D30               	rlf	??_lcd_ascii+1,w
  1850  002C  00A3               	movwf	___awdiv@dividend+1
  1851  002D  120A  118A  213E  120A  118A  	fcall	___awdiv
  1852  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0034  0821               	movf	?___awdiv+1,w
  1855  0035  00AB               	movwf	___awmod@dividend+1
  1856  0036  0820               	movf	?___awdiv,w
  1857  0037  00AA               	movwf	___awmod@dividend
  1858  0038  120A  118A  21A7  120A  118A  	fcall	___awmod
  1859  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1860  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1861  003F  0828               	movf	?___awmod,w
  1862  0040  120A  118A  2251  120A  118A  	fcall	_datos_ascii
  1863  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0047  00B1               	movwf	??_lcd_ascii+2
  1866  0048  0831               	movf	??_lcd_ascii+2,w
  1867  0049  00B2               	movwf	lcd_ascii@random
  1868  004A                     l1715:
  1869                           
  1870                           ;main_.c: 226:     random[1]=0x2E;
  1871  004A  302E               	movlw	46
  1872  004B  00AF               	movwf	??_lcd_ascii
  1873  004C  082F               	movf	??_lcd_ascii,w
  1874  004D  00B3               	movwf	lcd_ascii@random+1
  1875  004E                     l1717:
  1876                           
  1877                           ;main_.c: 227:     random[2]=datos_ascii(((2*(conversion1)/100)%10));
  1878  004E  300A               	movlw	10
  1879  004F  00A8               	movwf	___awmod@divisor
  1880  0050  3000               	movlw	0
  1881  0051  00A9               	movwf	___awmod@divisor+1
  1882  0052  3064               	movlw	100
  1883  0053  00A0               	movwf	___awdiv@divisor
  1884  0054  3000               	movlw	0
  1885  0055  00A1               	movwf	___awdiv@divisor+1
  1886  0056  0849               	movf	_conversion1,w
  1887  0057  00AF               	movwf	??_lcd_ascii
  1888  0058  01B0               	clrf	??_lcd_ascii+1
  1889  0059  1003               	clrc
  1890  005A  0D2F               	rlf	??_lcd_ascii,w
  1891  005B  00A2               	movwf	___awdiv@dividend
  1892  005C  0D30               	rlf	??_lcd_ascii+1,w
  1893  005D  00A3               	movwf	___awdiv@dividend+1
  1894  005E  120A  118A  213E  120A  118A  	fcall	___awdiv
  1895  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0065  0821               	movf	?___awdiv+1,w
  1898  0066  00AB               	movwf	___awmod@dividend+1
  1899  0067  0820               	movf	?___awdiv,w
  1900  0068  00AA               	movwf	___awmod@dividend
  1901  0069  120A  118A  21A7  120A  118A  	fcall	___awmod
  1902  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1903  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0070  0828               	movf	?___awmod,w
  1905  0071  120A  118A  2251  120A  118A  	fcall	_datos_ascii
  1906  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0078  00B1               	movwf	??_lcd_ascii+2
  1909  0079  0831               	movf	??_lcd_ascii+2,w
  1910  007A  00B4               	movwf	lcd_ascii@random+2
  1911  007B                     l1719:
  1912                           
  1913                           ;main_.c: 228:     random[3]=datos_ascii((2*conversion1)%10);
  1914  007B  300A               	movlw	10
  1915  007C  00A8               	movwf	___awmod@divisor
  1916  007D  3000               	movlw	0
  1917  007E  00A9               	movwf	___awmod@divisor+1
  1918  007F  0849               	movf	_conversion1,w
  1919  0080  00AF               	movwf	??_lcd_ascii
  1920  0081  01B0               	clrf	??_lcd_ascii+1
  1921  0082  1003               	clrc
  1922  0083  0D2F               	rlf	??_lcd_ascii,w
  1923  0084  00AA               	movwf	___awmod@dividend
  1924  0085  0D30               	rlf	??_lcd_ascii+1,w
  1925  0086  00AB               	movwf	___awmod@dividend+1
  1926  0087  120A  118A  21A7  120A  118A  	fcall	___awmod
  1927  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1928  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1929  008E  0828               	movf	?___awmod,w
  1930  008F  120A  118A  2251  120A  118A  	fcall	_datos_ascii
  1931  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0096  00B1               	movwf	??_lcd_ascii+2
  1934  0097  0831               	movf	??_lcd_ascii+2,w
  1935  0098  00B5               	movwf	lcd_ascii@random+3
  1936  0099                     l1721:
  1937                           
  1938                           ;main_.c: 229:     random[4]=32;
  1939  0099  3020               	movlw	32
  1940  009A  00AF               	movwf	??_lcd_ascii
  1941  009B  082F               	movf	??_lcd_ascii,w
  1942  009C  00B6               	movwf	lcd_ascii@random+4
  1943                           
  1944                           ;main_.c: 230:     random[5]=datos_ascii(((2*(conversion2)/100)%10));
  1945  009D  300A               	movlw	10
  1946  009E  00A8               	movwf	___awmod@divisor
  1947  009F  3000               	movlw	0
  1948  00A0  00A9               	movwf	___awmod@divisor+1
  1949  00A1  3064               	movlw	100
  1950  00A2  00A0               	movwf	___awdiv@divisor
  1951  00A3  3000               	movlw	0
  1952  00A4  00A1               	movwf	___awdiv@divisor+1
  1953  00A5  0848               	movf	_conversion2,w
  1954  00A6  00AF               	movwf	??_lcd_ascii
  1955  00A7  01B0               	clrf	??_lcd_ascii+1
  1956  00A8  1003               	clrc
  1957  00A9  0D2F               	rlf	??_lcd_ascii,w
  1958  00AA  00A2               	movwf	___awdiv@dividend
  1959  00AB  0D30               	rlf	??_lcd_ascii+1,w
  1960  00AC  00A3               	movwf	___awdiv@dividend+1
  1961  00AD  120A  118A  213E  120A  118A  	fcall	___awdiv
  1962  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1963  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1964  00B4  0821               	movf	?___awdiv+1,w
  1965  00B5  00AB               	movwf	___awmod@dividend+1
  1966  00B6  0820               	movf	?___awdiv,w
  1967  00B7  00AA               	movwf	___awmod@dividend
  1968  00B8  120A  118A  21A7  120A  118A  	fcall	___awmod
  1969  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1970  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1971  00BF  0828               	movf	?___awmod,w
  1972  00C0  120A  118A  2251  120A  118A  	fcall	_datos_ascii
  1973  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1974  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1975  00C7  00B1               	movwf	??_lcd_ascii+2
  1976  00C8  0831               	movf	??_lcd_ascii+2,w
  1977  00C9  00B7               	movwf	lcd_ascii@random+5
  1978  00CA                     l1723:
  1979                           
  1980                           ;main_.c: 231:     random[6]=0x2E;
  1981  00CA  302E               	movlw	46
  1982  00CB  00AF               	movwf	??_lcd_ascii
  1983  00CC  082F               	movf	??_lcd_ascii,w
  1984  00CD  00B8               	movwf	lcd_ascii@random+6
  1985  00CE                     l1725:
  1986                           
  1987                           ;main_.c: 232:     random[7]=datos_ascii(((2*(conversion2)/100)%10));
  1988  00CE  300A               	movlw	10
  1989  00CF  00A8               	movwf	___awmod@divisor
  1990  00D0  3000               	movlw	0
  1991  00D1  00A9               	movwf	___awmod@divisor+1
  1992  00D2  3064               	movlw	100
  1993  00D3  00A0               	movwf	___awdiv@divisor
  1994  00D4  3000               	movlw	0
  1995  00D5  00A1               	movwf	___awdiv@divisor+1
  1996  00D6  0848               	movf	_conversion2,w
  1997  00D7  00AF               	movwf	??_lcd_ascii
  1998  00D8  01B0               	clrf	??_lcd_ascii+1
  1999  00D9  1003               	clrc
  2000  00DA  0D2F               	rlf	??_lcd_ascii,w
  2001  00DB  00A2               	movwf	___awdiv@dividend
  2002  00DC  0D30               	rlf	??_lcd_ascii+1,w
  2003  00DD  00A3               	movwf	___awdiv@dividend+1
  2004  00DE  120A  118A  213E  120A  118A  	fcall	___awdiv
  2005  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2006  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  2007  00E5  0821               	movf	?___awdiv+1,w
  2008  00E6  00AB               	movwf	___awmod@dividend+1
  2009  00E7  0820               	movf	?___awdiv,w
  2010  00E8  00AA               	movwf	___awmod@dividend
  2011  00E9  120A  118A  21A7  120A  118A  	fcall	___awmod
  2012  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2013  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2014  00F0  0828               	movf	?___awmod,w
  2015  00F1  120A  118A  2251  120A  118A  	fcall	_datos_ascii
  2016  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2017  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2018  00F8  00B1               	movwf	??_lcd_ascii+2
  2019  00F9  0831               	movf	??_lcd_ascii+2,w
  2020  00FA  00B9               	movwf	lcd_ascii@random+7
  2021  00FB                     l1727:
  2022                           
  2023                           ;main_.c: 233:     random[8]=datos_ascii((2*conversion2)%10);
  2024  00FB  300A               	movlw	10
  2025  00FC  00A8               	movwf	___awmod@divisor
  2026  00FD  3000               	movlw	0
  2027  00FE  00A9               	movwf	___awmod@divisor+1
  2028  00FF  0848               	movf	_conversion2,w
  2029  0100  00AF               	movwf	??_lcd_ascii
  2030  0101  01B0               	clrf	??_lcd_ascii+1
  2031  0102  1003               	clrc
  2032  0103  0D2F               	rlf	??_lcd_ascii,w
  2033  0104  00AA               	movwf	___awmod@dividend
  2034  0105  0D30               	rlf	??_lcd_ascii+1,w
  2035  0106  00AB               	movwf	___awmod@dividend+1
  2036  0107  120A  118A  21A7  120A  118A  	fcall	___awmod
  2037  010C  1283               	bcf	3,5	;RP0=0, select bank0
  2038  010D  1303               	bcf	3,6	;RP1=0, select bank0
  2039  010E  0828               	movf	?___awmod,w
  2040  010F  120A  118A  2251  120A  118A  	fcall	_datos_ascii
  2041  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0116  00B1               	movwf	??_lcd_ascii+2
  2044  0117  0831               	movf	??_lcd_ascii+2,w
  2045  0118  00BA               	movwf	lcd_ascii@random+8
  2046  0119                     l1729:
  2047                           
  2048                           ;main_.c: 234:     random[9]=32;
  2049  0119  3020               	movlw	32
  2050  011A  00AF               	movwf	??_lcd_ascii
  2051  011B  082F               	movf	??_lcd_ascii,w
  2052  011C  00BB               	movwf	lcd_ascii@random+9
  2053                           
  2054                           ;main_.c: 235:     random[10]=datos_ascii(cuenta_uart);
  2055  011D  0847               	movf	_cuenta_uart,w
  2056  011E  120A  118A  2251  120A  118A  	fcall	_datos_ascii
  2057  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0125  00AF               	movwf	??_lcd_ascii
  2060  0126  082F               	movf	??_lcd_ascii,w
  2061  0127  00BC               	movwf	lcd_ascii@random+10
  2062  0128                     l1731:
  2063                           
  2064                           ;main_.c: 236:     random[11]=32;
  2065  0128  3020               	movlw	32
  2066  0129  00AF               	movwf	??_lcd_ascii
  2067  012A  082F               	movf	??_lcd_ascii,w
  2068  012B  00BD               	movwf	lcd_ascii@random+11
  2069  012C                     l1733:
  2070                           
  2071                           ;main_.c: 237:     random[12]=32;
  2072  012C  3020               	movlw	32
  2073  012D  00AF               	movwf	??_lcd_ascii
  2074  012E  082F               	movf	??_lcd_ascii,w
  2075  012F  00BE               	movwf	lcd_ascii@random+12
  2076  0130                     l1735:
  2077                           
  2078                           ;main_.c: 238:     random[13]=32;
  2079  0130  3020               	movlw	32
  2080  0131  00AF               	movwf	??_lcd_ascii
  2081  0132  082F               	movf	??_lcd_ascii,w
  2082  0133  00BF               	movwf	lcd_ascii@random+13
  2083  0134                     l1737:
  2084                           
  2085                           ;main_.c: 239:     random[14]=32;
  2086  0134  3020               	movlw	32
  2087  0135  00AF               	movwf	??_lcd_ascii
  2088  0136  082F               	movf	??_lcd_ascii,w
  2089  0137  00C0               	movwf	lcd_ascii@random+14
  2090  0138                     l1739:
  2091                           
  2092                           ;main_.c: 240:     random[15]=32;
  2093  0138  3020               	movlw	32
  2094  0139  00AF               	movwf	??_lcd_ascii
  2095  013A  082F               	movf	??_lcd_ascii,w
  2096  013B  00C1               	movwf	lcd_ascii@random+15
  2097  013C                     l1741:
  2098                           
  2099                           ;main_.c: 241:     return random;
  2100  013C  3032               	movlw	(low lcd_ascii@random)& (0+255)
  2101  013D                     l106:
  2102  013D  0008               	return
  2103  013E                     __end_of_lcd_ascii:
  2104                           
  2105                           	psect	text12
  2106  0251                     __ptext12:	
  2107 ;; *************** function _datos_ascii *****************
  2108 ;; Defined at:
  2109 ;;		line 172 in file "main_.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  numero          1    wreg     unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  numero          1    6[COMMON] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      unsigned char 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         1       0       0       0       0
  2125 ;;      Temps:          0       2       0       0       0
  2126 ;;      Totals:         1       2       0       0       0
  2127 ;;Total ram usage:        3 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    2
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_lcd_ascii
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _datos_ascii
  2139  0251                     _datos_ascii:
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2143                           ;datos_ascii@numero stored from wreg
  2144  0251  00F6               	movwf	datos_ascii@numero
  2145  0252                     l1557:
  2146                           
  2147                           ;main_.c: 172: unsigned char datos_ascii(uint8_t numero);main_.c: 173: {;main_.c: 174:  
      +                             switch(numero)
  2148  0252  2A67               	goto	l1627
  2149  0253                     l1559:
  2150                           
  2151                           ;main_.c: 177:             return 0x30;
  2152  0253  3030               	movlw	48
  2153  0254  2A91               	goto	l92
  2154  0255                     l1571:
  2155                           
  2156                           ;main_.c: 184:             return 0x31;
  2157  0255  3031               	movlw	49
  2158  0256  2A91               	goto	l92
  2159  0257                     l1577:
  2160                           
  2161                           ;main_.c: 188:             return 0x32;
  2162  0257  3032               	movlw	50
  2163  0258  2A91               	goto	l92
  2164  0259                     l1583:
  2165                           
  2166                           ;main_.c: 192:             return 0x33;
  2167  0259  3033               	movlw	51
  2168  025A  2A91               	goto	l92
  2169  025B                     l1589:
  2170                           
  2171                           ;main_.c: 196:             return 0x34;
  2172  025B  3034               	movlw	52
  2173  025C  2A91               	goto	l92
  2174  025D                     l1595:
  2175                           
  2176                           ;main_.c: 200:             return 0x35;
  2177  025D  3035               	movlw	53
  2178  025E  2A91               	goto	l92
  2179  025F                     l1601:
  2180                           
  2181                           ;main_.c: 204:             return 0x36;
  2182  025F  3036               	movlw	54
  2183  0260  2A91               	goto	l92
  2184  0261                     l1607:
  2185                           
  2186                           ;main_.c: 208:             return 0x37;
  2187  0261  3037               	movlw	55
  2188  0262  2A91               	goto	l92
  2189  0263                     l1613:
  2190                           
  2191                           ;main_.c: 212:             return 0x38;
  2192  0263  3038               	movlw	56
  2193  0264  2A91               	goto	l92
  2194  0265                     l1619:
  2195                           
  2196                           ;main_.c: 216:             return 0x39;
  2197  0265  3039               	movlw	57
  2198  0266  2A91               	goto	l92
  2199  0267                     l1627:
  2200  0267  0876               	movf	datos_ascii@numero,w
  2201  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2203  026A  00A0               	movwf	??_datos_ascii
  2204  026B  01A1               	clrf	??_datos_ascii+1
  2205                           
  2206                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2207                           ; Switch size 1, requested type "simple"
  2208                           ; Number of cases is 1, Range of values is 0 to 0
  2209                           ; switch strategies available:
  2210                           ; Name         Instructions Cycles
  2211                           ; simple_byte            4     3 (average)
  2212                           ; direct_byte           11     8 (fixed)
  2213                           ; jumptable            260     6 (fixed)
  2214                           ;	Chosen strategy is simple_byte
  2215  026C  0821               	movf	??_datos_ascii+1,w
  2216  026D  3A00               	xorlw	0	; case 0
  2217  026E  1903               	skipnz
  2218  026F  2A71               	goto	l1833
  2219  0270  2A53               	goto	l1559
  2220  0271                     l1833:
  2221                           
  2222                           ; Switch size 1, requested type "simple"
  2223                           ; Number of cases is 10, Range of values is 0 to 9
  2224                           ; switch strategies available:
  2225                           ; Name         Instructions Cycles
  2226                           ; simple_byte           31    16 (average)
  2227                           ; direct_byte           38     8 (fixed)
  2228                           ; jumptable            260     6 (fixed)
  2229                           ;	Chosen strategy is simple_byte
  2230  0271  0820               	movf	??_datos_ascii,w
  2231  0272  3A00               	xorlw	0	; case 0
  2232  0273  1903               	skipnz
  2233  0274  2A53               	goto	l1559
  2234  0275  3A01               	xorlw	1	; case 1
  2235  0276  1903               	skipnz
  2236  0277  2A55               	goto	l1571
  2237  0278  3A03               	xorlw	3	; case 2
  2238  0279  1903               	skipnz
  2239  027A  2A57               	goto	l1577
  2240  027B  3A01               	xorlw	1	; case 3
  2241  027C  1903               	skipnz
  2242  027D  2A59               	goto	l1583
  2243  027E  3A07               	xorlw	7	; case 4
  2244  027F  1903               	skipnz
  2245  0280  2A5B               	goto	l1589
  2246  0281  3A01               	xorlw	1	; case 5
  2247  0282  1903               	skipnz
  2248  0283  2A5D               	goto	l1595
  2249  0284  3A03               	xorlw	3	; case 6
  2250  0285  1903               	skipnz
  2251  0286  2A5F               	goto	l1601
  2252  0287  3A01               	xorlw	1	; case 7
  2253  0288  1903               	skipnz
  2254  0289  2A61               	goto	l1607
  2255  028A  3A0F               	xorlw	15	; case 8
  2256  028B  1903               	skipnz
  2257  028C  2A63               	goto	l1613
  2258  028D  3A01               	xorlw	1	; case 9
  2259  028E  1903               	skipnz
  2260  028F  2A65               	goto	l1619
  2261  0290  2A53               	goto	l1559
  2262  0291                     l92:
  2263  0291  0008               	return
  2264  0292                     __end_of_datos_ascii:
  2265                           
  2266                           	psect	text13
  2267  01A7                     __ptext13:	
  2268 ;; *************** function ___awmod *****************
  2269 ;; Defined at:
  2270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  divisor         2    8[BANK0 ] int 
  2273 ;;  dividend        2   10[BANK0 ] int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  sign            1   14[BANK0 ] unsigned char 
  2276 ;;  counter         1   13[BANK0 ] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    8[BANK0 ] int 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2286 ;;      Params:         0       4       0       0       0
  2287 ;;      Locals:         0       2       0       0       0
  2288 ;;      Temps:          0       1       0       0       0
  2289 ;;      Totals:         0       7       0       0       0
  2290 ;;Total ram usage:        7 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_lcd_ascii
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function ___awmod
  2302  01A7                     ___awmod:
  2303  01A7                     l1645:	
  2304                           ;incstack = 0
  2305                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2306                           
  2307  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2308  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2309  01A9  01AE               	clrf	___awmod@sign
  2310  01AA                     l1647:
  2311  01AA  1FAB               	btfss	___awmod@dividend+1,7
  2312  01AB  29AD               	goto	u491
  2313  01AC  29AE               	goto	u490
  2314  01AD                     u491:
  2315  01AD  29B5               	goto	l1653
  2316  01AE                     u490:
  2317  01AE                     l1649:
  2318  01AE  09AA               	comf	___awmod@dividend,f
  2319  01AF  09AB               	comf	___awmod@dividend+1,f
  2320  01B0  0AAA               	incf	___awmod@dividend,f
  2321  01B1  1903               	skipnz
  2322  01B2  0AAB               	incf	___awmod@dividend+1,f
  2323  01B3                     l1651:
  2324  01B3  01AE               	clrf	___awmod@sign
  2325  01B4  0AAE               	incf	___awmod@sign,f
  2326  01B5                     l1653:
  2327  01B5  1FA9               	btfss	___awmod@divisor+1,7
  2328  01B6  29B8               	goto	u501
  2329  01B7  29B9               	goto	u500
  2330  01B8                     u501:
  2331  01B8  29BE               	goto	l1657
  2332  01B9                     u500:
  2333  01B9                     l1655:
  2334  01B9  09A8               	comf	___awmod@divisor,f
  2335  01BA  09A9               	comf	___awmod@divisor+1,f
  2336  01BB  0AA8               	incf	___awmod@divisor,f
  2337  01BC  1903               	skipnz
  2338  01BD  0AA9               	incf	___awmod@divisor+1,f
  2339  01BE                     l1657:
  2340  01BE  0828               	movf	___awmod@divisor,w
  2341  01BF  0429               	iorwf	___awmod@divisor+1,w
  2342  01C0  1903               	btfsc	3,2
  2343  01C1  29C3               	goto	u511
  2344  01C2  29C4               	goto	u510
  2345  01C3                     u511:
  2346  01C3  29F3               	goto	l1675
  2347  01C4                     u510:
  2348  01C4                     l1659:
  2349  01C4  01AD               	clrf	___awmod@counter
  2350  01C5  0AAD               	incf	___awmod@counter,f
  2351  01C6  29D2               	goto	l1665
  2352  01C7                     l1661:
  2353  01C7  3001               	movlw	1
  2354  01C8                     u525:
  2355  01C8  1003               	clrc
  2356  01C9  0DA8               	rlf	___awmod@divisor,f
  2357  01CA  0DA9               	rlf	___awmod@divisor+1,f
  2358  01CB  3EFF               	addlw	-1
  2359  01CC  1D03               	skipz
  2360  01CD  29C8               	goto	u525
  2361  01CE                     l1663:
  2362  01CE  3001               	movlw	1
  2363  01CF  00AC               	movwf	??___awmod
  2364  01D0  082C               	movf	??___awmod,w
  2365  01D1  07AD               	addwf	___awmod@counter,f
  2366  01D2                     l1665:
  2367  01D2  1FA9               	btfss	___awmod@divisor+1,7
  2368  01D3  29D5               	goto	u531
  2369  01D4  29D6               	goto	u530
  2370  01D5                     u531:
  2371  01D5  29C7               	goto	l1661
  2372  01D6                     u530:
  2373  01D6                     l1667:
  2374  01D6  0829               	movf	___awmod@divisor+1,w
  2375  01D7  022B               	subwf	___awmod@dividend+1,w
  2376  01D8  1D03               	skipz
  2377  01D9  29DC               	goto	u545
  2378  01DA  0828               	movf	___awmod@divisor,w
  2379  01DB  022A               	subwf	___awmod@dividend,w
  2380  01DC                     u545:
  2381  01DC  1C03               	skipc
  2382  01DD  29DF               	goto	u541
  2383  01DE  29E0               	goto	u540
  2384  01DF                     u541:
  2385  01DF  29E6               	goto	l1671
  2386  01E0                     u540:
  2387  01E0                     l1669:
  2388  01E0  0828               	movf	___awmod@divisor,w
  2389  01E1  02AA               	subwf	___awmod@dividend,f
  2390  01E2  0829               	movf	___awmod@divisor+1,w
  2391  01E3  1C03               	skipc
  2392  01E4  03AB               	decf	___awmod@dividend+1,f
  2393  01E5  02AB               	subwf	___awmod@dividend+1,f
  2394  01E6                     l1671:
  2395  01E6  3001               	movlw	1
  2396  01E7                     u555:
  2397  01E7  1003               	clrc
  2398  01E8  0CA9               	rrf	___awmod@divisor+1,f
  2399  01E9  0CA8               	rrf	___awmod@divisor,f
  2400  01EA  3EFF               	addlw	-1
  2401  01EB  1D03               	skipz
  2402  01EC  29E7               	goto	u555
  2403  01ED                     l1673:
  2404  01ED  3001               	movlw	1
  2405  01EE  02AD               	subwf	___awmod@counter,f
  2406  01EF  1D03               	btfss	3,2
  2407  01F0  29F2               	goto	u561
  2408  01F1  29F3               	goto	u560
  2409  01F2                     u561:
  2410  01F2  29D6               	goto	l1667
  2411  01F3                     u560:
  2412  01F3                     l1675:
  2413  01F3  082E               	movf	___awmod@sign,w
  2414  01F4  1903               	btfsc	3,2
  2415  01F5  29F7               	goto	u571
  2416  01F6  29F8               	goto	u570
  2417  01F7                     u571:
  2418  01F7  29FD               	goto	l1679
  2419  01F8                     u570:
  2420  01F8                     l1677:
  2421  01F8  09AA               	comf	___awmod@dividend,f
  2422  01F9  09AB               	comf	___awmod@dividend+1,f
  2423  01FA  0AAA               	incf	___awmod@dividend,f
  2424  01FB  1903               	skipnz
  2425  01FC  0AAB               	incf	___awmod@dividend+1,f
  2426  01FD                     l1679:
  2427  01FD  082B               	movf	___awmod@dividend+1,w
  2428  01FE  00A9               	movwf	?___awmod+1
  2429  01FF  082A               	movf	___awmod@dividend,w
  2430  0200  00A8               	movwf	?___awmod
  2431  0201                     l427:
  2432  0201  0008               	return
  2433  0202                     __end_of___awmod:
  2434                           
  2435                           	psect	text14
  2436  013E                     __ptext14:	
  2437 ;; *************** function ___awdiv *****************
  2438 ;; Defined at:
  2439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  divisor         2    0[BANK0 ] int 
  2442 ;;  dividend        2    2[BANK0 ] int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  quotient        2    6[BANK0 ] int 
  2445 ;;  sign            1    5[BANK0 ] unsigned char 
  2446 ;;  counter         1    4[BANK0 ] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    0[BANK0 ] int 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         0       4       0       0       0
  2457 ;;      Locals:         0       4       0       0       0
  2458 ;;      Temps:          1       0       0       0       0
  2459 ;;      Totals:         1       8       0       0       0
  2460 ;;Total ram usage:        9 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    2
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_lcd_ascii
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function ___awdiv
  2472  013E                     ___awdiv:
  2473  013E                     l1269:	
  2474                           ;incstack = 0
  2475                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2476                           
  2477  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2478  013F  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0140  01A5               	clrf	___awdiv@sign
  2480  0141                     l1271:
  2481  0141  1FA1               	btfss	___awdiv@divisor+1,7
  2482  0142  2944               	goto	u251
  2483  0143  2945               	goto	u250
  2484  0144                     u251:
  2485  0144  294C               	goto	l1277
  2486  0145                     u250:
  2487  0145                     l1273:
  2488  0145  09A0               	comf	___awdiv@divisor,f
  2489  0146  09A1               	comf	___awdiv@divisor+1,f
  2490  0147  0AA0               	incf	___awdiv@divisor,f
  2491  0148  1903               	skipnz
  2492  0149  0AA1               	incf	___awdiv@divisor+1,f
  2493  014A                     l1275:
  2494  014A  01A5               	clrf	___awdiv@sign
  2495  014B  0AA5               	incf	___awdiv@sign,f
  2496  014C                     l1277:
  2497  014C  1FA3               	btfss	___awdiv@dividend+1,7
  2498  014D  294F               	goto	u261
  2499  014E  2950               	goto	u260
  2500  014F                     u261:
  2501  014F  2959               	goto	l1283
  2502  0150                     u260:
  2503  0150                     l1279:
  2504  0150  09A2               	comf	___awdiv@dividend,f
  2505  0151  09A3               	comf	___awdiv@dividend+1,f
  2506  0152  0AA2               	incf	___awdiv@dividend,f
  2507  0153  1903               	skipnz
  2508  0154  0AA3               	incf	___awdiv@dividend+1,f
  2509  0155                     l1281:
  2510  0155  3001               	movlw	1
  2511  0156  00F6               	movwf	??___awdiv
  2512  0157  0876               	movf	??___awdiv,w
  2513  0158  06A5               	xorwf	___awdiv@sign,f
  2514  0159                     l1283:
  2515  0159  01A6               	clrf	___awdiv@quotient
  2516  015A  01A7               	clrf	___awdiv@quotient+1
  2517  015B                     l1285:
  2518  015B  0820               	movf	___awdiv@divisor,w
  2519  015C  0421               	iorwf	___awdiv@divisor+1,w
  2520  015D  1903               	btfsc	3,2
  2521  015E  2960               	goto	u271
  2522  015F  2961               	goto	u270
  2523  0160                     u271:
  2524  0160  2998               	goto	l1305
  2525  0161                     u270:
  2526  0161                     l1287:
  2527  0161  01A4               	clrf	___awdiv@counter
  2528  0162  0AA4               	incf	___awdiv@counter,f
  2529  0163  296F               	goto	l1293
  2530  0164                     l1289:
  2531  0164  3001               	movlw	1
  2532  0165                     u285:
  2533  0165  1003               	clrc
  2534  0166  0DA0               	rlf	___awdiv@divisor,f
  2535  0167  0DA1               	rlf	___awdiv@divisor+1,f
  2536  0168  3EFF               	addlw	-1
  2537  0169  1D03               	skipz
  2538  016A  2965               	goto	u285
  2539  016B                     l1291:
  2540  016B  3001               	movlw	1
  2541  016C  00F6               	movwf	??___awdiv
  2542  016D  0876               	movf	??___awdiv,w
  2543  016E  07A4               	addwf	___awdiv@counter,f
  2544  016F                     l1293:
  2545  016F  1FA1               	btfss	___awdiv@divisor+1,7
  2546  0170  2972               	goto	u291
  2547  0171  2973               	goto	u290
  2548  0172                     u291:
  2549  0172  2964               	goto	l1289
  2550  0173                     u290:
  2551  0173                     l1295:
  2552  0173  3001               	movlw	1
  2553  0174                     u305:
  2554  0174  1003               	clrc
  2555  0175  0DA6               	rlf	___awdiv@quotient,f
  2556  0176  0DA7               	rlf	___awdiv@quotient+1,f
  2557  0177  3EFF               	addlw	-1
  2558  0178  1D03               	skipz
  2559  0179  2974               	goto	u305
  2560  017A  0821               	movf	___awdiv@divisor+1,w
  2561  017B  0223               	subwf	___awdiv@dividend+1,w
  2562  017C  1D03               	skipz
  2563  017D  2980               	goto	u315
  2564  017E  0820               	movf	___awdiv@divisor,w
  2565  017F  0222               	subwf	___awdiv@dividend,w
  2566  0180                     u315:
  2567  0180  1C03               	skipc
  2568  0181  2983               	goto	u311
  2569  0182  2984               	goto	u310
  2570  0183                     u311:
  2571  0183  298B               	goto	l1301
  2572  0184                     u310:
  2573  0184                     l1297:
  2574  0184  0820               	movf	___awdiv@divisor,w
  2575  0185  02A2               	subwf	___awdiv@dividend,f
  2576  0186  0821               	movf	___awdiv@divisor+1,w
  2577  0187  1C03               	skipc
  2578  0188  03A3               	decf	___awdiv@dividend+1,f
  2579  0189  02A3               	subwf	___awdiv@dividend+1,f
  2580  018A                     l1299:
  2581  018A  1426               	bsf	___awdiv@quotient,0
  2582  018B                     l1301:
  2583  018B  3001               	movlw	1
  2584  018C                     u325:
  2585  018C  1003               	clrc
  2586  018D  0CA1               	rrf	___awdiv@divisor+1,f
  2587  018E  0CA0               	rrf	___awdiv@divisor,f
  2588  018F  3EFF               	addlw	-1
  2589  0190  1D03               	skipz
  2590  0191  298C               	goto	u325
  2591  0192                     l1303:
  2592  0192  3001               	movlw	1
  2593  0193  02A4               	subwf	___awdiv@counter,f
  2594  0194  1D03               	btfss	3,2
  2595  0195  2997               	goto	u331
  2596  0196  2998               	goto	u330
  2597  0197                     u331:
  2598  0197  2973               	goto	l1295
  2599  0198                     u330:
  2600  0198                     l1305:
  2601  0198  0825               	movf	___awdiv@sign,w
  2602  0199  1903               	btfsc	3,2
  2603  019A  299C               	goto	u341
  2604  019B  299D               	goto	u340
  2605  019C                     u341:
  2606  019C  29A2               	goto	l1309
  2607  019D                     u340:
  2608  019D                     l1307:
  2609  019D  09A6               	comf	___awdiv@quotient,f
  2610  019E  09A7               	comf	___awdiv@quotient+1,f
  2611  019F  0AA6               	incf	___awdiv@quotient,f
  2612  01A0  1903               	skipnz
  2613  01A1  0AA7               	incf	___awdiv@quotient+1,f
  2614  01A2                     l1309:
  2615  01A2  0827               	movf	___awdiv@quotient+1,w
  2616  01A3  00A1               	movwf	?___awdiv+1
  2617  01A4  0826               	movf	___awdiv@quotient,w
  2618  01A5  00A0               	movwf	?___awdiv
  2619  01A6                     l414:
  2620  01A6  0008               	return
  2621  01A7                     __end_of___awdiv:
  2622                           
  2623                           	psect	text15
  2624  03CD                     __ptext15:	
  2625 ;; *************** function _isr *****************
  2626 ;; Defined at:
  2627 ;;		line 64 in file "main_.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0
  2643 ;;      Temps:          4       0       0       0       0
  2644 ;;      Totals:         4       0       0       0       0
  2645 ;;Total ram usage:        4 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    1
  2648 ;; This function calls:
  2649 ;;		_recepcion_uart
  2650 ;; This function is called by:
  2651 ;;		Interrupt level 1
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function _isr
  2657  03CD                     _isr:
  2658  03CD                     i1l1453:
  2659                           
  2660                           ;main_.c: 67:      if(PIR1bits.RCIF)
  2661  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2662  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2663  03CF  1E8C               	btfss	12,5	;volatile
  2664  03D0  2BD2               	goto	u48_21
  2665  03D1  2BD3               	goto	u48_20
  2666  03D2                     u48_21:
  2667  03D2  2BDD               	goto	i1l68
  2668  03D3                     u48_20:
  2669  03D3                     i1l1455:
  2670                           
  2671                           ;main_.c: 68:     {;main_.c: 69:         dato_recibido=RCREG;
  2672  03D3  081A               	movf	26,w	;volatile
  2673  03D4  00F2               	movwf	??_isr
  2674  03D5  0872               	movf	??_isr,w
  2675  03D6  00F7               	movwf	_dato_recibido
  2676  03D7                     i1l1457:
  2677                           
  2678                           ;main_.c: 70:         PIR1bits.RCIF=0;
  2679  03D7  128C               	bcf	12,5	;volatile
  2680  03D8                     i1l1459:
  2681                           
  2682                           ;main_.c: 71:         recepcion_uart();
  2683  03D8  120A  118A  23AF  120A  118A  	fcall	_recepcion_uart
  2684  03DD                     i1l68:
  2685  03DD  0875               	movf	??_isr+3,w
  2686  03DE  008A               	movwf	10
  2687  03DF  0874               	movf	??_isr+2,w
  2688  03E0  0084               	movwf	4
  2689  03E1  0E73               	swapf	??_isr+1,w
  2690  03E2  0083               	movwf	3
  2691  03E3  0EFE               	swapf	btemp,f
  2692  03E4  0E7E               	swapf	btemp,w
  2693  03E5  0009               	retfie
  2694  03E6                     __end_of_isr:
  2695                           
  2696                           	psect	intentry
  2697  0004                     __pintentry:	
  2698                           ;incstack = 0
  2699                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2700                           
  2701  0004                     interrupt_function:
  2702  007E                     saved_w	set	btemp
  2703  0004  00FE               	movwf	btemp
  2704  0005  0E03               	swapf	3,w
  2705  0006  00F3               	movwf	??_isr+1
  2706  0007  0804               	movf	4,w
  2707  0008  00F4               	movwf	??_isr+2
  2708  0009  080A               	movf	10,w
  2709  000A  00F5               	movwf	??_isr+3
  2710  000B  120A  118A  2BCD   	ljmp	_isr
  2711                           
  2712                           	psect	text16
  2713  03AF                     __ptext16:	
  2714 ;; *************** function _recepcion_uart *****************
  2715 ;; Defined at:
  2716 ;;		line 245 in file "main_.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         0       0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0
  2732 ;;      Temps:          2       0       0       0       0
  2733 ;;      Totals:         2       0       0       0       0
  2734 ;;Total ram usage:        2 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_isr
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function _recepcion_uart
  2745  03AF                     _recepcion_uart:
  2746  03AF                     i1l1351:	
  2747                           ;incstack = 0
  2748                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  2749                           
  2750                           
  2751                           ;main_.c: 247:     switch(dato_recibido)
  2752  03AF  2BBC               	goto	i1l1359
  2753  03B0                     i1l1353:
  2754                           
  2755                           ;main_.c: 250:             cuenta_uart++;
  2756  03B0  3001               	movlw	1
  2757  03B1  00F0               	movwf	??_recepcion_uart
  2758  03B2  0870               	movf	??_recepcion_uart,w
  2759  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2760  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2761  03B5  07C7               	addwf	_cuenta_uart,f
  2762                           
  2763                           ;main_.c: 251:             break;
  2764  03B6  2BCC               	goto	i1l113
  2765  03B7                     i1l1355:
  2766                           
  2767                           ;main_.c: 254:             cuenta_uart--;
  2768  03B7  3001               	movlw	1
  2769  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2770  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2771  03BA  02C7               	subwf	_cuenta_uart,f
  2772                           
  2773                           ;main_.c: 255:             break;
  2774  03BB  2BCC               	goto	i1l113
  2775  03BC                     i1l1359:
  2776  03BC  0877               	movf	_dato_recibido,w
  2777  03BD  00F0               	movwf	??_recepcion_uart
  2778  03BE  01F1               	clrf	??_recepcion_uart+1
  2779                           
  2780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2781                           ; Switch size 1, requested type "simple"
  2782                           ; Number of cases is 1, Range of values is 0 to 0
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte            4     3 (average)
  2786                           ; direct_byte           11     8 (fixed)
  2787                           ; jumptable            260     6 (fixed)
  2788                           ;	Chosen strategy is simple_byte
  2789  03BF  0871               	movf	??_recepcion_uart+1,w
  2790  03C0  3A00               	xorlw	0	; case 0
  2791  03C1  1903               	skipnz
  2792  03C2  2BC4               	goto	i1l1835
  2793  03C3  2BCC               	goto	i1l113
  2794  03C4                     i1l1835:
  2795                           
  2796                           ; Switch size 1, requested type "simple"
  2797                           ; Number of cases is 2, Range of values is 1 to 2
  2798                           ; switch strategies available:
  2799                           ; Name         Instructions Cycles
  2800                           ; simple_byte            7     4 (average)
  2801                           ; direct_byte           17    11 (fixed)
  2802                           ; jumptable            263     9 (fixed)
  2803                           ;	Chosen strategy is simple_byte
  2804  03C4  0870               	movf	??_recepcion_uart,w
  2805  03C5  3A01               	xorlw	1	; case 1
  2806  03C6  1903               	skipnz
  2807  03C7  2BB0               	goto	i1l1353
  2808  03C8  3A03               	xorlw	3	; case 2
  2809  03C9  1903               	skipnz
  2810  03CA  2BB7               	goto	i1l1355
  2811  03CB  2BCC               	goto	i1l113
  2812  03CC                     i1l113:
  2813  03CC  0008               	return
  2814  03CD                     __end_of_recepcion_uart:
  2815  007E                     btemp	set	126	;btemp
  2816  007E                     wtemp0	set	126
  2817                           
  2818                           	psect	config
  2819                           
  2820                           ;Config register CONFIG1 @ 0x2007
  2821                           ;	Oscillator Selection bits
  2822                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2823                           ;	Watchdog Timer Enable bit
  2824                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2825                           ;	Power-up Timer Enable bit
  2826                           ;	PWRTE = OFF, PWRT disabled
  2827                           ;	RE3/MCLR pin function select bit
  2828                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2829                           ;	Code Protection bit
  2830                           ;	CP = OFF, Program memory code protection is disabled
  2831                           ;	Data Code Protection bit
  2832                           ;	CPD = OFF, Data memory code protection is disabled
  2833                           ;	Brown Out Reset Selection bits
  2834                           ;	BOREN = OFF, BOR disabled
  2835                           ;	Internal External Switchover bit
  2836                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2837                           ;	Fail-Safe Clock Monitor Enabled bit
  2838                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2839                           ;	Low Voltage Programming Enable bit
  2840                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2841                           ;	In-Circuit Debugger Mode bit
  2842                           ;	DEBUG = 0x1, unprogrammed default
  2843  2007                     	org	8199
  2844  2007  20D4               	dw	8404
  2845                           
  2846                           ;Config register CONFIG2 @ 0x2008
  2847                           ;	Brown-out Reset Selection bit
  2848                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2849                           ;	Flash Program Memory Self Write Enable bits
  2850                           ;	WRT = OFF, Write protection off
  2851  2008                     	org	8200
  2852  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     39      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_cmd
    _show->_dat
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_clear->_cmd
    _lcd_ascii->___awdiv
    _lcd_ascii->_datos_ascii
    ___awmod->___awdiv

Critical Paths under _isr in COMMON

    _isr->_recepcion_uart

Critical Paths under _main in BANK0

    _main->_show
    _show->_lcd_ascii
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_clear->_cmd
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3872
                                             37 BANK0      2     2      0
                                _cmd
                          _lcd_ascii
                          _lcd_clear
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 3     1      2     267
                                             34 BANK0      3     1      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  2     2      0      22
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     471
                                              1 BANK0      5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      31
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      31
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0      31
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           19    19      0    3041
                                             15 BANK0     19    19      0
                            ___awdiv
                            ___awmod
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      31
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              8 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              6 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                     _recepcion_uart
 ---------------------------------------------------------------------------------
 (4) _recepcion_uart                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_ascii
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _datos_ascii
   _lcd_clear
     _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _adc_config
     _uart_config
   _show
     _dat
     _lcd_ascii (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)
   _recepcion_uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 29 03:14:28 2021

                      pc 0002                       l92 0291                       l79 038F  
                     l87 02D0             ___awdiv@sign 0025          ?_recepcion_uart 0070  
                     fsr 0004                      l106 013D                      l131 0307  
                    l134 0421                      l143 0336                      l128 043C  
                    l137 040E                      l164 03FB                      l149 0364  
                    l414 01A6                      l175 042F                      l427 0201  
                    l781 03F3                      l783 03F8                      l791 042A  
                    l777 03E6                      l793 042D                      l785 0422  
                    l779 03EB                      l795 042E                      l787 0425  
                    l789 0429                      l981 0369                      l991 0371  
                    l983 036A                      l993 0372                      l985 036E  
                    l995 0377                      l987 036F                      l979 0365  
                    l997 037D                      l989 0370                      l999 037E  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u310 0184                      u311 0183                      u305 0174  
                    u330 0198                      u250 0145                      u331 0197  
                    u315 0180                      u251 0144                      u340 019D  
                    u260 0150                      u500 01B9                      u341 019C  
                    u325 018C                      u261 014F                      u501 01B8  
                    u270 0161                      u510 01C4                      u271 0160  
                    u511 01C3                      u600 0336                      u440 0298  
                    u601 0335                      u441 0297                      u290 0173  
                    u530 01D6                      u291 0172                      u531 01D5  
                    u540 01E0                      u285 0165                      u541 01DF  
                    u525 01C8                      u560 01F3                      u561 01F2  
                    u545 01DC                      u617 02A1                      u570 01F8  
                    u490 01AE                      u571 01F7                      u555 01E7  
                    u491 01AD                      u627 02B4                      u580 033F  
                    u581 033E                      u637 0323                      u590 0355  
                    u591 0354                      u647 0406                      u657 03F5  
                    u667 0419                      _dat 03FC                      _cmd 040F  
                    _isr 03CD                      fsr0 0004                      indf 0000  
           ___awmod@sign 002E                     l1001 0383                     l1003 0388  
                   l1005 0389                     l1007 038C                     l1301 018B  
                   l1303 0192                     l1305 0198                     l1307 019D  
                   l1309 01A2                     ?_dat 0070                     l1271 0141  
                   l1281 0155                     l1273 0145                     l1601 025F  
                   ?_cmd 0070                     l1291 016B                     l1283 0159  
                   l1275 014A                     l1293 016F                     l1285 015B  
                   l1277 014C                     l1269 013E                     l1613 0263  
                   l1701 035E                     l1381 02B7                     l1373 0299  
                   l1295 0173                     l1287 0161                     l1279 0150  
                   l1607 0261                     l1551 0415                     l1711 0326  
                   l1703 0308                     l1383 02BB                     l1375 02A4  
                   l1297 0184                     l1289 0164                     l1721 0099  
                   l1713 001B                     l1553 0416                     l1641 0403  
                   l1705 0309                     l1377 02AA                     l1369 0292  
                   l1299 018A                     l1651 01B3                     l1619 0265  
                   l1571 0255                     l1627 0267                     l1731 0128  
                   l1723 00CA                     l1715 004A                     l1555 041E  
                   l1547 0412                     l1643 040B                     l1635 03FF  
                   l1707 0317                     l1379 02AC                     l1661 01C7  
                   l1653 01B5                     l1645 01A7                     l1557 0252  
                   l1741 013C                     l1733 012C                     l1725 00CE  
                   l1717 004E                     l1549 0414                     l1637 0401  
                   l1709 031F                     l1389 02BD                     l1671 01E6  
                   l1663 01CE                     l1655 01B9                     l1647 01AA  
                   l1583 0259                     l1559 0253                     l1735 0130  
                   l1727 00FB                     l1719 007B                     l1639 0402  
                   l1831 02C8                     l1751 0226                     l1673 01ED  
                   l1665 01D2                     l1657 01BE                     l1649 01AE  
                   l1833 0271                     l1577 0257                     l1737 0134  
                   l1729 0119                     l1753 0231                     l1745 0202  
                   l1667 01D6                     l1659 01C4                     l1675 01F3  
                   l1595 025D                     l1739 0138                     l1683 0430  
                   l1691 0344                     l1755 023B                     l1747 0217  
                   l1677 01F8                     l1669 01E0                     l1589 025B  
                   l1685 02D1                     l1693 0348                     l1749 021C  
                   l1679 01FD                     l1695 034F                     l1687 033A  
                   l1697 0355                     l1689 033F                     l1699 035A  
                   ?_isr 0070                     STR_1 03A0                     i1l68 03DD  
                   dat@b 0020                     cmd@a 0020                     _main 0202  
                   _show 0308                     btemp 007E                     start 000E  
                  ??_dat 0076                    ??_cmd 0076                    ??_isr 0072  
                  ?_main 0070          __end_of___awdiv 01A7          __end_of___awmod 0202  
                  ?_show 0042                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l113 03CC          ___awdiv@counter 0024                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  u48_20 03D3                    u48_21 03D2                    _TRISB 0086  
                  _setup 0365                    pclath 000A                    show@s 0042  
          lcd_linea@temp 0024                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0251             __end_of_show 0337  
                 ??_main 0045                   ??_show 0044     __size_of_datos_ascii 0041  
                 _ADRESH 001E         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l1351 03AF                   i1l1353 03B0  
                 i1l1355 03B7                   i1l1453 03CD                   i1l1359 03BC  
                 i1l1455 03D3                   i1l1457 03D7                   i1l1459 03D8  
                 i1l1835 03C4                   _SPBRGH 009A         __end_of_lcd_init 0308  
        lcd_ascii@random 0032                ??___awdiv 0076                ??___awmod 002C  
       ___awdiv@quotient 0026          ___awmod@divisor 0028          ___awmod@counter 002D  
           ?_uart_config 0070                   saved_w 007E  __end_of__initialization 0017  
       ??_recepcion_uart 0070           __pcstackCOMMON 0070               _adc_config 03E6  
          __end_of_setup 0390       __size_of_lcd_clear 000D       __size_of_lcd_ascii 0123  
     __size_of_lcd_linea 002E                  ??_setup 0077               __pbssBANK0 0047  
             __pmaintext 0202               __pintentry 0004                ?_lcd_init 0070  
             __stringtab 0390        __end_of_lcd_clear 043D        __end_of_lcd_ascii 013E  
      __end_of_lcd_linea 0365              ?_adc_config 0070                  ___awdiv 013E  
                ___awmod 01A7                _ANSELbits 0188                  __ptext1 0292  
                __ptext2 0308                  __ptext3 03FC                  __ptext4 0365  
                __ptext5 0422                  __ptext6 03E6                  __ptext7 0337  
                __ptext8 02D1                  __ptext9 0430             __size_of_dat 0013  
           __size_of_cmd 0013             __size_of_isr 0019         ___awmod@dividend 002A  
   __size_of_uart_config 000E               ??_lcd_init 0077     end_of_initialization 0017  
              _RCSTAbits 0018            ??_datos_ascii 0020               _toggle_adc 0292  
              _TRISCbits 0087                _TRISDbits 0088      __size_of_adc_config 0016  
             lcd_linea@a 0023               lcd_linea@b 0021               lcd_linea@z 0025  
            _BAUDCTLbits 0187      start_initialization 0011      __end_of_datos_ascii 0292  
            __end_of_dat 040F              __end_of_cmd 0422              __end_of_isr 03E6  
      datos_ascii@numero 0076              ?_toggle_adc 0070              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0037  
           ??_adc_config 0076                 ?___awdiv 0020                 ?___awmod 0028  
          _dato_recibido 0077                _lcd_clear 0430                _lcd_ascii 001B  
            _datos_ascii 0251                _lcd_linea 0337                __pstrings 0390  
__size_of_recepcion_uart 001E           __size_of_setup 002B       __end_of_adc_config 03FC  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
    __size_of_toggle_adc 003F               ?_lcd_clear 0070               ?_lcd_ascii 0070  
             ?_lcd_linea 0021               _ADCON0bits 001F              __stringbase 039F  
             _ADCON1bits 009F            ??_uart_config 0076              _cuenta_uart 0047  
            _conversion1 0049              _conversion2 0048         __size_of___awdiv 0069  
       __size_of___awmod 005B       __end_of__stringtab 03A0                 __ptext10 040F  
               __ptext11 001B                 __ptext12 0251                 __ptext13 01A7  
               __ptext14 013E                 __ptext15 03CD                 __ptext16 03AF  
    __end_of_uart_config 0430                 _lcd_init 02D1            __size_of_main 004F  
          __size_of_show 002F              ??_lcd_clear 0077              ??_lcd_ascii 002F  
            ??_lcd_linea 0022           _recepcion_uart 03AF               _INTCONbits 000B  
           ??_toggle_adc 0020                 intlevel1 0000                stringcode 039A  
             _OSCCONbits 008F       __end_of_toggle_adc 02D1   __end_of_recepcion_uart 03CD  
           ?_datos_ascii 0070              _uart_config 0422                 stringdir 039A  
               stringtab 0390  
