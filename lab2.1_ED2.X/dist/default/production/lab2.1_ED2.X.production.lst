

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 29 04:17:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  001E                     _ADRESH	set	30
   457  000B                     _INTCONbits	set	11
   458  0001                     _TMR0	set	1
   459  0008                     _PORTD	set	8
   460  0006                     _PORTB	set	6
   461  001F                     _ADCON0bits	set	31
   462  001A                     _RCREG	set	26
   463  000C                     _PIR1bits	set	12
   464  0047                     _RD7	set	71
   465  0046                     _RD6	set	70
   466  0045                     _RD5	set	69
   467  009A                     _SPBRGH	set	154
   468  0099                     _SPBRG	set	153
   469  009F                     _ADCON1bits	set	159
   470  008C                     _PIE1bits	set	140
   471  0081                     _OPTION_REGbits	set	129
   472  008F                     _OSCCONbits	set	143
   473  0088                     _TRISDbits	set	136
   474  0087                     _TRISCbits	set	135
   475  0086                     _TRISB	set	134
   476  0187                     _BAUDCTLbits	set	391
   477  0188                     _ANSELbits	set	392
   478  0189                     _ANSELH	set	393
   479  0188                     _ANSEL	set	392
   480                           
   481                           	psect	strings
   482  03C4                     __pstrings:
   483  03C4                     stringtab:
   484  03C4                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  03C4  1BFF               	btfsc	btemp+1,7
   488  03C5  2BCE               	ljmp	stringcode
   489  03C6  1383               	bcf	3,7
   490  03C7  187F               	btfsc	btemp+1,0
   491  03C8  1783               	bsf	3,7
   492  03C9  0800               	movf	0,w
   493  03CA  0A84               	incf	4,f
   494  03CB  1903               	skipnz
   495  03CC  0AFF               	incf	btemp+1,f
   496  03CD  0008               	return
   497  03CE                     stringcode:
   498  03CE                     stringdir:
   499  03CE  3003               	movlw	high stringdir
   500  03CF  008A               	movwf	10
   501  03D0  0804               	movf	4,w
   502  03D1  0A84               	incf	4,f
   503  03D2  0782               	addwf	2,f
   504  03D3                     __stringbase:
   505  03D3  3400               	retlw	0
   506  03D4                     __end_of__stringtab:
   507  03D4                     STR_1:
   508  03D4  3420               	retlw	32	;' '
   509  03D5  3453               	retlw	83	;'S'
   510  03D6  3431               	retlw	49	;'1'
   511  03D7  3420               	retlw	32	;' '
   512  03D8  3420               	retlw	32	;' '
   513  03D9  3420               	retlw	32	;' '
   514  03DA  3453               	retlw	83	;'S'
   515  03DB  3432               	retlw	50	;'2'
   516  03DC  3420               	retlw	32	;' '
   517  03DD  3420               	retlw	32	;' '
   518  03DE  3420               	retlw	32	;' '
   519  03DF  3453               	retlw	83	;'S'
   520  03E0  3433               	retlw	51	;'3'
   521  03E1  3420               	retlw	32	;' '
   522  03E2  3400               	retlw	0
   523                           
   524                           	psect	cinit
   525  0011                     start_initialization:	
   526                           ; #config settings
   527                           
   528  0011                     __initialization:
   529                           
   530                           ; Clear objects allocated to COMMON
   531  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   532  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   533                           
   534                           ; Clear objects allocated to BANK0
   535  0013  1283               	bcf	3,5	;RP0=0, select bank0
   536  0014  1303               	bcf	3,6	;RP1=0, select bank0
   537  0015  01C8               	clrf	__pbssBANK0& (0+127)
   538  0016  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   539  0017                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  0017                     __end_of__initialization:
   543  0017  0183               	clrf	3
   544  0018  120A  118A  2A23   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  0076                     __pbssCOMMON:
   548  0076                     _dato_recibido:
   549  0076                     	ds	1
   550  0077                     _cuenta_uart:
   551  0077                     	ds	1
   552                           
   553                           	psect	bssBANK0
   554  0048                     __pbssBANK0:
   555  0048                     _conversion2:
   556  0048                     	ds	1
   557  0049                     _conversion1:
   558  0049                     	ds	1
   559                           
   560                           	psect	cstackCOMMON
   561  0070                     __pcstackCOMMON:
   562  0070                     ?_recepcion_uart:
   563  0070                     ??_recepcion_uart:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_setup:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_lcd_clear:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_lcd_init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_cmd:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_toggle_adc:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_lcd_ascii:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_adc_config:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_uart_config:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_isr:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_main:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_datos_ascii:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_dat:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604  0070                     	ds	2
   605  0072                     ??_isr:
   606                           
   607                           ; 1 bytes @ 0x2
   608  0072                     	ds	4
   609  0076                     ??_setup:
   610  0076                     ??_lcd_clear:	
   611                           ; 1 bytes @ 0x6
   612                           
   613  0076                     ??_lcd_init:	
   614                           ; 1 bytes @ 0x6
   615                           
   616  0076                     ??_uart_config:	
   617                           ; 1 bytes @ 0x6
   618                           
   619                           
   620                           	psect	cstackBANK0
   621  0020                     __pcstackBANK0:	
   622                           ; 1 bytes @ 0x6
   623                           
   624  0020                     ??_cmd:
   625  0020                     ??_toggle_adc:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0020                     ??_adc_config:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0020                     ??_datos_ascii:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0020                     ??_dat:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0020                     ?___awdiv:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0020                     ___awdiv@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0020                     	ds	1
   646  0021                     cmd@a:
   647  0021                     dat@b:	
   648                           ; 1 bytes @ 0x1
   649                           
   650                           
   651                           ; 1 bytes @ 0x1
   652  0021                     	ds	1
   653  0022                     ?_lcd_linea:
   654  0022                     datos_ascii@numero:	
   655                           ; 1 bytes @ 0x2
   656                           
   657  0022                     lcd_linea@b:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0022                     ___awdiv@dividend:	
   661                           ; 1 bytes @ 0x2
   662                           
   663                           
   664                           ; 2 bytes @ 0x2
   665  0022                     	ds	1
   666  0023                     ??_lcd_linea:
   667                           
   668                           ; 1 bytes @ 0x3
   669  0023                     	ds	1
   670  0024                     ??___awdiv:
   671  0024                     lcd_linea@a:	
   672                           ; 1 bytes @ 0x4
   673                           
   674                           
   675                           ; 1 bytes @ 0x4
   676  0024                     	ds	1
   677  0025                     lcd_linea@temp:
   678  0025                     ___awdiv@counter:	
   679                           ; 1 bytes @ 0x5
   680                           
   681                           
   682                           ; 1 bytes @ 0x5
   683  0025                     	ds	1
   684  0026                     lcd_linea@z:
   685  0026                     ___awdiv@sign:	
   686                           ; 1 bytes @ 0x6
   687                           
   688                           
   689                           ; 1 bytes @ 0x6
   690  0026                     	ds	1
   691  0027                     ___awdiv@quotient:
   692                           
   693                           ; 2 bytes @ 0x7
   694  0027                     	ds	2
   695  0029                     ?___awmod:
   696  0029                     ___awmod@divisor:	
   697                           ; 2 bytes @ 0x9
   698                           
   699                           
   700                           ; 2 bytes @ 0x9
   701  0029                     	ds	2
   702  002B                     ___awmod@dividend:
   703                           
   704                           ; 2 bytes @ 0xB
   705  002B                     	ds	2
   706  002D                     ??___awmod:
   707                           
   708                           ; 1 bytes @ 0xD
   709  002D                     	ds	1
   710  002E                     ___awmod@counter:
   711                           
   712                           ; 1 bytes @ 0xE
   713  002E                     	ds	1
   714  002F                     ___awmod@sign:
   715                           
   716                           ; 1 bytes @ 0xF
   717  002F                     	ds	1
   718  0030                     ??_lcd_ascii:
   719                           
   720                           ; 1 bytes @ 0x10
   721  0030                     	ds	3
   722  0033                     lcd_ascii@random:
   723                           
   724                           ; 16 bytes @ 0x13
   725  0033                     	ds	16
   726  0043                     ?_show:
   727  0043                     show@s:	
   728                           ; 1 bytes @ 0x23
   729                           
   730                           
   731                           ; 2 bytes @ 0x23
   732  0043                     	ds	2
   733  0045                     ??_show:
   734                           
   735                           ; 1 bytes @ 0x25
   736  0045                     	ds	1
   737  0046                     ??_main:
   738                           
   739                           ; 1 bytes @ 0x26
   740  0046                     	ds	2
   741                           
   742                           	psect	maintext
   743  0223                     __pmaintext:	
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 82 in file "main_.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B00/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       2       0       0       0
   766 ;;      Totals:         0       2       0       0       0
   767 ;;Total ram usage:        2 bytes
   768 ;; Hardware stack levels required when called:    4
   769 ;; This function calls:
   770 ;;		_cmd
   771 ;;		_lcd_ascii
   772 ;;		_lcd_clear
   773 ;;		_lcd_init
   774 ;;		_lcd_linea
   775 ;;		_setup
   776 ;;		_show
   777 ;;		_toggle_adc
   778 ;; This function is called by:
   779 ;;		Startup code after reset
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           
   784                           ;psect for function _main
   785  0223                     _main:
   786  0223                     l1832:	
   787                           ;incstack = 0
   788                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   789                           
   790                           
   791                           ;main_.c: 84:     setup();
   792  0223  120A  118A  2334  120A  118A  	fcall	_setup
   793                           
   794                           ;main_.c: 86:     lcd_clear();
   795  0228  120A  118A  2467  120A  118A  	fcall	_lcd_clear
   796                           
   797                           ;main_.c: 87:     lcd_init();
   798  022D  120A  118A  22FD  120A  118A  	fcall	_lcd_init
   799                           
   800                           ;main_.c: 88:  cmd(0x90);
   801  0232  3090               	movlw	144
   802  0233  120A  118A  2445  120A  118A  	fcall	_cmd
   803  0238                     l1834:
   804                           
   805                           ;main_.c: 89:     _delay((unsigned long)((1)*(4000000/4000.0)));
   806  0238  30C7               	movlw	199
   807  0239  1283               	bcf	3,5	;RP0=0, select bank0
   808  023A  1303               	bcf	3,6	;RP1=0, select bank0
   809  023B  00C6               	movwf	??_main
   810  023C                     u707:
   811  023C  2A3D               	nop2
   812  023D  0BC6               	decfsz	??_main,f
   813  023E  2A3C               	goto	u707
   814  023F  2A40               	nop2
   815  0240                     l1836:
   816                           
   817                           ;main_.c: 90:     ADCON0bits.GO=1;
   818  0240  1283               	bcf	3,5	;RP0=0, select bank0
   819  0241  1303               	bcf	3,6	;RP1=0, select bank0
   820  0242  149F               	bsf	31,1	;volatile
   821  0243                     l1838:
   822                           
   823                           ;main_.c: 92:     {;main_.c: 94:         toggle_adc();
   824  0243  120A  118A  22BE  120A  118A  	fcall	_toggle_adc
   825  0248                     l1840:
   826                           
   827                           ;main_.c: 98:         lcd_linea(1,1);
   828  0248  1283               	bcf	3,5	;RP0=0, select bank0
   829  0249  1303               	bcf	3,6	;RP1=0, select bank0
   830  024A  01A2               	clrf	lcd_linea@b
   831  024B  0AA2               	incf	lcd_linea@b,f
   832  024C  3001               	movlw	1
   833  024D  120A  118A  2396  120A  118A  	fcall	_lcd_linea
   834  0252                     l1842:
   835                           
   836                           ;main_.c: 99:         show(" S1   S2   S3 ");
   837  0252  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   838  0253  1283               	bcf	3,5	;RP0=0, select bank0
   839  0254  1303               	bcf	3,6	;RP1=0, select bank0
   840  0255  00C3               	movwf	show@s
   841  0256  3080               	movlw	128
   842  0257  00C4               	movwf	show@s+1
   843  0258  120A  118A  2367  120A  118A  	fcall	_show
   844  025D                     l1844:
   845                           
   846                           ;main_.c: 100:         lcd_linea(2,1);
   847  025D  1283               	bcf	3,5	;RP0=0, select bank0
   848  025E  1303               	bcf	3,6	;RP1=0, select bank0
   849  025F  01A2               	clrf	lcd_linea@b
   850  0260  0AA2               	incf	lcd_linea@b,f
   851  0261  3002               	movlw	2
   852  0262  120A  118A  2396  120A  118A  	fcall	_lcd_linea
   853  0267                     l1846:
   854                           
   855                           ;main_.c: 101:         show(lcd_ascii());
   856  0267  120A  118A  201B  120A  118A  	fcall	_lcd_ascii
   857  026C  1283               	bcf	3,5	;RP0=0, select bank0
   858  026D  1303               	bcf	3,6	;RP1=0, select bank0
   859  026E  00C6               	movwf	??_main
   860  026F  01C7               	clrf	??_main+1
   861  0270  0846               	movf	??_main,w
   862  0271  00C3               	movwf	show@s
   863  0272  0847               	movf	??_main+1,w
   864  0273  00C4               	movwf	show@s+1
   865  0274  120A  118A  2367  120A  118A  	fcall	_show
   866  0279  2A43               	goto	l1838
   867  027A  120A  118A  280E   	ljmp	start
   868  027D                     __end_of_main:
   869                           
   870                           	psect	text1
   871  02BE                     __ptext1:	
   872 ;; *************** function _toggle_adc *****************
   873 ;; Defined at:
   874 ;;		line 154 in file "main_.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       3       0       0       0
   891 ;;      Totals:         0       3       0       0       0
   892 ;;Total ram usage:        3 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    2
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _toggle_adc
   904  02BE                     _toggle_adc:
   905  02BE                     l1372:	
   906                           ;incstack = 0
   907                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   908                           
   909                           
   910                           ;main_.c: 156:     if (ADCON0bits.GO==0)
   911  02BE  1283               	bcf	3,5	;RP0=0, select bank0
   912  02BF  1303               	bcf	3,6	;RP1=0, select bank0
   913  02C0  189F               	btfsc	31,1	;volatile
   914  02C1  2AC3               	goto	u441
   915  02C2  2AC4               	goto	u440
   916  02C3                     u441:
   917  02C3  2AFC               	goto	l92
   918  02C4                     u440:
   919  02C4  2AE9               	goto	l1390
   920  02C5                     l1376:
   921                           
   922                           ;main_.c: 161:                 conversion1=ADRESH;
   923  02C5  081E               	movf	30,w	;volatile
   924  02C6  00A0               	movwf	??_toggle_adc
   925  02C7  0820               	movf	??_toggle_adc,w
   926  02C8  00C9               	movwf	_conversion1
   927                           
   928                           ;main_.c: 162:                 _delay((unsigned long)((500)*(4000000/4000000.0)));
   929  02C9  30A5               	movlw	165
   930  02CA  1283               	bcf	3,5	;RP0=0, select bank0
   931  02CB  1303               	bcf	3,6	;RP1=0, select bank0
   932  02CC  00A0               	movwf	??_toggle_adc
   933  02CD                     u717:
   934  02CD  0BA0               	decfsz	??_toggle_adc,f
   935  02CE  2ACD               	goto	u717
   936  02CF  2AD0               	nop2
   937  02D0                     l1378:
   938                           
   939                           ;main_.c: 163:                 ADCON0bits.CHS=1;
   940  02D0  1283               	bcf	3,5	;RP0=0, select bank0
   941  02D1  1303               	bcf	3,6	;RP1=0, select bank0
   942  02D2  081F               	movf	31,w	;volatile
   943  02D3  39C3               	andlw	-61
   944  02D4  3804               	iorlw	4
   945  02D5  009F               	movwf	31	;volatile
   946  02D6                     l1380:
   947                           
   948                           ;main_.c: 164:                 ADCON0bits.GO=1;
   949  02D6  149F               	bsf	31,1	;volatile
   950                           
   951                           ;main_.c: 165:                 break;
   952  02D7  2AFC               	goto	l92
   953  02D8                     l1382:
   954                           
   955                           ;main_.c: 168:                 conversion2=ADRESH;
   956  02D8  081E               	movf	30,w	;volatile
   957  02D9  00A0               	movwf	??_toggle_adc
   958  02DA  0820               	movf	??_toggle_adc,w
   959  02DB  00C8               	movwf	_conversion2
   960                           
   961                           ;main_.c: 169:                 _delay((unsigned long)((500)*(4000000/4000000.0)));
   962  02DC  30A5               	movlw	165
   963  02DD  1283               	bcf	3,5	;RP0=0, select bank0
   964  02DE  1303               	bcf	3,6	;RP1=0, select bank0
   965  02DF  00A0               	movwf	??_toggle_adc
   966  02E0                     u727:
   967  02E0  0BA0               	decfsz	??_toggle_adc,f
   968  02E1  2AE0               	goto	u727
   969  02E2  2AE3               	nop2
   970  02E3                     l1384:
   971                           
   972                           ;main_.c: 170:                 ADCON0bits.CHS=0;
   973  02E3  30C3               	movlw	-61
   974  02E4  1283               	bcf	3,5	;RP0=0, select bank0
   975  02E5  1303               	bcf	3,6	;RP1=0, select bank0
   976  02E6  059F               	andwf	31,f	;volatile
   977  02E7                     l1386:
   978                           
   979                           ;main_.c: 171:                 ADCON0bits.GO=1;
   980  02E7  149F               	bsf	31,1	;volatile
   981                           
   982                           ;main_.c: 172:                 break;
   983  02E8  2AFC               	goto	l92
   984  02E9                     l1390:
   985  02E9  0C1F               	rrf	31,w	;volatile
   986  02EA  00A0               	movwf	??_toggle_adc
   987  02EB  0C20               	rrf	??_toggle_adc,w
   988  02EC  390F               	andlw	15
   989  02ED  00A1               	movwf	??_toggle_adc+1
   990  02EE  01A2               	clrf	??_toggle_adc+2
   991                           
   992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   993                           ; Switch size 1, requested type "simple"
   994                           ; Number of cases is 1, Range of values is 0 to 0
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte            4     3 (average)
   998                           ; direct_byte           11     8 (fixed)
   999                           ; jumptable            260     6 (fixed)
  1000                           ;	Chosen strategy is simple_byte
  1001  02EF  0822               	movf	??_toggle_adc+2,w
  1002  02F0  3A00               	xorlw	0	; case 0
  1003  02F1  1903               	skipnz
  1004  02F2  2AF4               	goto	l1922
  1005  02F3  2AFC               	goto	l92
  1006  02F4                     l1922:
  1007                           
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 2, Range of values is 0 to 1
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            7     4 (average)
  1013                           ; direct_byte           14     8 (fixed)
  1014                           ; jumptable            260     6 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016  02F4  0821               	movf	??_toggle_adc+1,w
  1017  02F5  3A00               	xorlw	0	; case 0
  1018  02F6  1903               	skipnz
  1019  02F7  2AC5               	goto	l1376
  1020  02F8  3A01               	xorlw	1	; case 1
  1021  02F9  1903               	skipnz
  1022  02FA  2AD8               	goto	l1382
  1023  02FB  2AFC               	goto	l92
  1024  02FC                     l92:
  1025  02FC  0008               	return
  1026  02FD                     __end_of_toggle_adc:
  1027                           
  1028                           	psect	text2
  1029  0367                     __ptext2:	
  1030 ;; *************** function _show *****************
  1031 ;; Defined at:
  1032 ;;		line 72 in file "LCD.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  s               2   35[BANK0 ] PTR unsigned char 
  1035 ;;		 -> RAM(512), STR_1(15), 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       2       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          0       1       0       0       0
  1050 ;;      Totals:         0       3       0       0       0
  1051 ;;Total ram usage:        3 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    3
  1054 ;; This function calls:
  1055 ;;		_dat
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _show
  1063  0367                     _show:
  1064  0367                     l1790:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1067                           
  1068                           
  1069                           ;LCD.c: 72: void show(unsigned char *s);LCD.c: 73: {;LCD.c: 74:  while(*s) {
  1070  0367  2B85               	goto	l1798
  1071  0368                     l1792:
  1072                           
  1073                           ;LCD.c: 75:   dat(*s++);
  1074  0368  0844               	movf	show@s+1,w
  1075  0369  00FF               	movwf	btemp+1
  1076  036A  0843               	movf	show@s,w
  1077  036B  0084               	movwf	4
  1078  036C  120A  118A  23C4  120A  118A  	fcall	stringtab
  1079  0371  120A  118A  2431  120A  118A  	fcall	_dat
  1080  0376                     l1794:
  1081  0376  3001               	movlw	1
  1082  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0379  07C3               	addwf	show@s,f
  1085  037A  1803               	skipnc
  1086  037B  0AC4               	incf	show@s+1,f
  1087  037C  3000               	movlw	0
  1088  037D  07C4               	addwf	show@s+1,f
  1089  037E                     l1796:
  1090                           
  1091                           ;LCD.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1092  037E  300C               	movlw	12
  1093  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0381  00C5               	movwf	??_show
  1096  0382                     u737:
  1097  0382  0BC5               	decfsz	??_show,f
  1098  0383  2B82               	goto	u737
  1099  0384  0000               	nop
  1100  0385                     l1798:
  1101                           
  1102                           ;LCD.c: 74:  while(*s) {
  1103  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0387  0844               	movf	show@s+1,w
  1106  0388  00FF               	movwf	btemp+1
  1107  0389  0843               	movf	show@s,w
  1108  038A  0084               	movwf	4
  1109  038B  120A  118A  23C4  120A  118A  	fcall	stringtab
  1110  0390  3A00               	xorlw	0
  1111  0391  1D03               	skipz
  1112  0392  2B94               	goto	u691
  1113  0393  2B95               	goto	u690
  1114  0394                     u691:
  1115  0394  2B68               	goto	l1792
  1116  0395                     u690:
  1117  0395                     l148:
  1118  0395  0008               	return
  1119  0396                     __end_of_show:
  1120                           
  1121                           	psect	text3
  1122  0431                     __ptext3:	
  1123 ;; *************** function _dat *****************
  1124 ;; Defined at:
  1125 ;;		line 61 in file "LCD.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  b               1    wreg     unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  b               1    1[BANK0 ] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       1       0       0       0
  1141 ;;      Temps:          0       1       0       0       0
  1142 ;;      Totals:         0       2       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    2
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_show
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _dat
  1155  0431                     _dat:
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _dat: [wreg]
  1159                           ;dat@b stored from wreg
  1160  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0433  00A1               	movwf	dat@b
  1163  0434                     l1640:
  1164                           
  1165                           ;LCD.c: 61: void dat(unsigned char b);LCD.c: 62: {;LCD.c: 63:  PORTB=b;
  1166  0434  0821               	movf	dat@b,w
  1167  0435  0086               	movwf	6	;volatile
  1168  0436                     l1642:
  1169                           
  1170                           ;LCD.c: 64:  RD5=1;
  1171  0436  1688               	bsf	8,5	;volatile
  1172  0437                     l1644:
  1173                           
  1174                           ;LCD.c: 65:  RD6=0;
  1175  0437  1308               	bcf	8,6	;volatile
  1176  0438                     l1646:
  1177                           
  1178                           ;LCD.c: 66:  RD7=1;
  1179  0438  1788               	bsf	8,7	;volatile
  1180                           
  1181                           ;LCD.c: 67:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1182  0439  30C7               	movlw	199
  1183  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1184  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1185  043C  00A0               	movwf	??_dat
  1186  043D                     u747:
  1187  043D  2C3E               	nop2
  1188  043E  0BA0               	decfsz	??_dat,f
  1189  043F  2C3D               	goto	u747
  1190  0440  2C41               	nop2
  1191  0441                     l1648:
  1192                           
  1193                           ;LCD.c: 68:  RD7=0;
  1194  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0443  1388               	bcf	8,7	;volatile
  1197  0444                     l142:
  1198  0444  0008               	return
  1199  0445                     __end_of_dat:
  1200                           
  1201                           	psect	text4
  1202  0334                     __ptext4:	
  1203 ;; *************** function _setup *****************
  1204 ;; Defined at:
  1205 ;;		line 108 in file "main_.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    3
  1226 ;; This function calls:
  1227 ;;		_adc_config
  1228 ;;		_uart_config
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _setup
  1236  0334                     _setup:
  1237  0334                     l1732:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1240                           
  1241                           
  1242                           ;main_.c: 111:     ANSEL=0;
  1243  0334  1683               	bsf	3,5	;RP0=1, select bank3
  1244  0335  1703               	bsf	3,6	;RP1=1, select bank3
  1245  0336  0188               	clrf	8	;volatile
  1246                           
  1247                           ;main_.c: 112:     ANSELH=0;
  1248  0337  0189               	clrf	9	;volatile
  1249  0338                     l1734:
  1250                           
  1251                           ;main_.c: 113:     ANSELbits.ANS0=1;
  1252  0338  1408               	bsf	8,0	;volatile
  1253  0339                     l1736:
  1254                           
  1255                           ;main_.c: 114:     ANSELbits.ANS1=1;
  1256  0339  1488               	bsf	8,1	;volatile
  1257                           
  1258                           ;main_.c: 117:     TRISB=0;
  1259  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1260  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1261  033C  0186               	clrf	6	;volatile
  1262  033D                     l1738:
  1263                           
  1264                           ;main_.c: 118:     TRISCbits.TRISC6=0;
  1265  033D  1307               	bcf	7,6	;volatile
  1266  033E                     l1740:
  1267                           
  1268                           ;main_.c: 119:     TRISCbits.TRISC7=1;
  1269  033E  1787               	bsf	7,7	;volatile
  1270  033F                     l1742:
  1271                           
  1272                           ;main_.c: 121:     TRISDbits.TRISD5=0;
  1273  033F  1288               	bcf	8,5	;volatile
  1274  0340                     l1744:
  1275                           
  1276                           ;main_.c: 122:     TRISDbits.TRISD6=0;
  1277  0340  1308               	bcf	8,6	;volatile
  1278  0341                     l1746:
  1279                           
  1280                           ;main_.c: 123:     TRISDbits.TRISD7=0;
  1281  0341  1388               	bcf	8,7	;volatile
  1282                           
  1283                           ;main_.c: 126:     PORTB=0;
  1284  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0344  0186               	clrf	6	;volatile
  1287                           
  1288                           ;main_.c: 127:     PORTD=0;
  1289  0345  0188               	clrf	8	;volatile
  1290  0346                     l1748:
  1291                           
  1292                           ;main_.c: 130:     OSCCONbits.IRCF=0b110;
  1293  0346  1683               	bsf	3,5	;RP0=1, select bank1
  1294  0347  1303               	bcf	3,6	;RP1=0, select bank1
  1295  0348  080F               	movf	15,w	;volatile
  1296  0349  398F               	andlw	-113
  1297  034A  3860               	iorlw	96
  1298  034B  008F               	movwf	15	;volatile
  1299  034C                     l1750:
  1300                           
  1301                           ;main_.c: 131:     OSCCONbits.SCS=1;
  1302  034C  140F               	bsf	15,0	;volatile
  1303  034D                     l1752:
  1304                           
  1305                           ;main_.c: 134:     OPTION_REGbits.T0CS = 0;
  1306  034D  1281               	bcf	1,5	;volatile
  1307  034E                     l1754:
  1308                           
  1309                           ;main_.c: 135:     OPTION_REGbits.PSA = 0;
  1310  034E  1181               	bcf	1,3	;volatile
  1311  034F                     l1756:
  1312                           
  1313                           ;main_.c: 136:     OPTION_REGbits.PS = 0b111;
  1314  034F  3007               	movlw	7
  1315  0350  0481               	iorwf	1,f	;volatile
  1316  0351                     l1758:
  1317                           
  1318                           ;main_.c: 137:     TMR0 = 25;
  1319  0351  3019               	movlw	25
  1320  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0354  0081               	movwf	1	;volatile
  1323  0355                     l1760:
  1324                           
  1325                           ;main_.c: 139:     adc_config();
  1326  0355  120A  118A  2419  120A  118A  	fcall	_adc_config
  1327  035A                     l1762:
  1328                           
  1329                           ;main_.c: 142:     uart_config();
  1330  035A  120A  118A  2459  120A  118A  	fcall	_uart_config
  1331  035F                     l1764:
  1332                           
  1333                           ;main_.c: 145:     INTCONbits.GIE=1;
  1334  035F  178B               	bsf	11,7	;volatile
  1335  0360                     l1766:
  1336                           
  1337                           ;main_.c: 146:     PIE1bits.RCIE=1;
  1338  0360  1683               	bsf	3,5	;RP0=1, select bank1
  1339  0361  1303               	bcf	3,6	;RP1=0, select bank1
  1340  0362  168C               	bsf	12,5	;volatile
  1341  0363                     l1768:
  1342                           
  1343                           ;main_.c: 147:     PIR1bits.RCIF=0;
  1344  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0365  128C               	bcf	12,5	;volatile
  1347  0366                     l84:
  1348  0366  0008               	return
  1349  0367                     __end_of_setup:
  1350                           
  1351                           	psect	text5
  1352  0459                     __ptext5:	
  1353 ;; *************** function _uart_config *****************
  1354 ;; Defined at:
  1355 ;;		line 19 in file "UART_CONFIG.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    2
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_setup
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _uart_config
  1385  0459                     _uart_config:
  1386  0459                     l790:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _uart_config: [wreg+status,2]
  1389                           
  1390                           
  1391                           ;UART_CONFIG.c: 23:     BAUDCTLbits.BRG16 = 1;
  1392  0459  1683               	bsf	3,5	;RP0=1, select bank3
  1393  045A  1703               	bsf	3,6	;RP1=1, select bank3
  1394  045B  1587               	bsf	7,3	;volatile
  1395  045C                     l792:
  1396                           
  1397                           ;UART_CONFIG.c: 24:     SPBRG = 103;
  1398  045C  3067               	movlw	103
  1399  045D  1683               	bsf	3,5	;RP0=1, select bank1
  1400  045E  1303               	bcf	3,6	;RP1=0, select bank1
  1401  045F  0099               	movwf	25	;volatile
  1402  0460                     l794:
  1403                           
  1404                           ;UART_CONFIG.c: 25:     SPBRGH = 0;
  1405  0460  019A               	clrf	26	;volatile
  1406  0461                     l796:
  1407                           
  1408                           ;UART_CONFIG.c: 27:     RCSTAbits.SPEN = 1;
  1409  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0463  1798               	bsf	24,7	;volatile
  1412  0464                     l798:
  1413                           
  1414                           ;UART_CONFIG.c: 28:     RCSTAbits.RX9 = 0;
  1415  0464  1318               	bcf	24,6	;volatile
  1416  0465                     l800:
  1417                           
  1418                           ;UART_CONFIG.c: 30:     RCSTAbits.CREN = 1;
  1419  0465  1618               	bsf	24,4	;volatile
  1420  0466                     l180:
  1421  0466  0008               	return
  1422  0467                     __end_of_uart_config:
  1423                           
  1424                           	psect	text6
  1425  0419                     __ptext6:	
  1426 ;; *************** function _adc_config *****************
  1427 ;; Defined at:
  1428 ;;		line 22 in file "ADC_CONFIG.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0
  1444 ;;      Temps:          0       1       0       0       0
  1445 ;;      Totals:         0       1       0       0       0
  1446 ;;Total ram usage:        1 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    2
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_setup
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _adc_config
  1458  0419                     _adc_config:
  1459  0419                     l1554:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1462                           
  1463                           
  1464                           ;ADC_CONFIG.c: 25:     ADCON1bits.ADFM = 0 ;
  1465  0419  1683               	bsf	3,5	;RP0=1, select bank1
  1466  041A  1303               	bcf	3,6	;RP1=0, select bank1
  1467  041B  139F               	bcf	31,7	;volatile
  1468                           
  1469                           ;ADC_CONFIG.c: 26:     ADCON1bits.VCFG0 = 0 ;
  1470  041C  121F               	bcf	31,4	;volatile
  1471                           
  1472                           ;ADC_CONFIG.c: 27:     ADCON1bits.VCFG1 = 0 ;
  1473  041D  129F               	bcf	31,5	;volatile
  1474  041E                     l1556:
  1475                           
  1476                           ;ADC_CONFIG.c: 29:     ADCON0bits.ADCS = 0b01;
  1477  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1478  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0420  081F               	movf	31,w	;volatile
  1480  0421  393F               	andlw	-193
  1481  0422  3840               	iorlw	64
  1482  0423  009F               	movwf	31	;volatile
  1483                           
  1484                           ;ADC_CONFIG.c: 30:     ADCON0bits.CHS = 0;
  1485  0424  30C3               	movlw	-61
  1486  0425  059F               	andwf	31,f	;volatile
  1487  0426                     l1558:
  1488                           
  1489                           ;ADC_CONFIG.c: 31:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1490  0426  300F               	movlw	15
  1491  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0429  00A0               	movwf	??_adc_config
  1494  042A                     u757:
  1495  042A  0BA0               	decfsz	??_adc_config,f
  1496  042B  2C2A               	goto	u757
  1497  042C  2C2D               	nop2
  1498  042D                     l1560:
  1499                           
  1500                           ;ADC_CONFIG.c: 32:     ADCON0bits.ADON = 1 ;
  1501  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1502  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1503  042F  141F               	bsf	31,0	;volatile
  1504  0430                     l169:
  1505  0430  0008               	return
  1506  0431                     __end_of_adc_config:
  1507                           
  1508                           	psect	text7
  1509  0396                     __ptext7:	
  1510 ;; *************** function _lcd_linea *****************
  1511 ;; Defined at:
  1512 ;;		line 81 in file "LCD.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  a               1    wreg     unsigned char 
  1515 ;;  b               1    2[BANK0 ] unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  a               1    4[BANK0 ] unsigned char 
  1518 ;;  z               1    6[BANK0 ] unsigned char 
  1519 ;;  temp            1    5[BANK0 ] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, pclath, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         0       1       0       0       0
  1530 ;;      Locals:         0       3       0       0       0
  1531 ;;      Temps:          0       1       0       0       0
  1532 ;;      Totals:         0       5       0       0       0
  1533 ;;Total ram usage:        5 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    3
  1536 ;; This function calls:
  1537 ;;		_cmd
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function _lcd_linea
  1545  0396                     _lcd_linea:
  1546                           
  1547                           ;incstack = 0
  1548                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1549                           ;lcd_linea@a stored from wreg
  1550  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0398  00A4               	movwf	lcd_linea@a
  1553  0399                     l1774:
  1554                           
  1555                           ;LCD.c: 82:     char temp, z;;LCD.c: 83:     if (a == 1)
  1556  0399  0324               	decf	lcd_linea@a,w
  1557  039A  1D03               	btfss	3,2
  1558  039B  2B9D               	goto	u671
  1559  039C  2B9E               	goto	u670
  1560  039D                     u671:
  1561  039D  2BAE               	goto	l1782
  1562  039E                     u670:
  1563  039E                     l1776:
  1564                           
  1565                           ;LCD.c: 84:     {;LCD.c: 85:         temp = 0x80 + b - 1;
  1566  039E  0822               	movf	lcd_linea@b,w
  1567  039F  3E7F               	addlw	127
  1568  03A0  00A3               	movwf	??_lcd_linea
  1569  03A1  0823               	movf	??_lcd_linea,w
  1570  03A2  00A5               	movwf	lcd_linea@temp
  1571  03A3                     l1778:
  1572                           
  1573                           ;LCD.c: 86:         z = temp;
  1574  03A3  0825               	movf	lcd_linea@temp,w
  1575  03A4  00A3               	movwf	??_lcd_linea
  1576  03A5  0823               	movf	??_lcd_linea,w
  1577  03A6  00A6               	movwf	lcd_linea@z
  1578  03A7                     l1780:
  1579                           
  1580                           ;LCD.c: 87:         cmd(z);
  1581  03A7  0826               	movf	lcd_linea@z,w
  1582  03A8  120A  118A  2445  120A  118A  	fcall	_cmd
  1583                           
  1584                           ;LCD.c: 89:     }
  1585  03AD  2BC3               	goto	l154
  1586  03AE                     l1782:
  1587  03AE  3002               	movlw	2
  1588  03AF  0624               	xorwf	lcd_linea@a,w
  1589  03B0  1D03               	btfss	3,2
  1590  03B1  2BB3               	goto	u681
  1591  03B2  2BB4               	goto	u680
  1592  03B3                     u681:
  1593  03B3  2BC3               	goto	l154
  1594  03B4                     u680:
  1595  03B4                     l1784:
  1596                           
  1597                           ;LCD.c: 91:     {;LCD.c: 92:         temp = 0xC0 + b - 1;
  1598  03B4  0822               	movf	lcd_linea@b,w
  1599  03B5  3EBF               	addlw	191
  1600  03B6  00A3               	movwf	??_lcd_linea
  1601  03B7  0823               	movf	??_lcd_linea,w
  1602  03B8  00A5               	movwf	lcd_linea@temp
  1603  03B9                     l1786:
  1604                           
  1605                           ;LCD.c: 93:         z = temp;
  1606  03B9  0825               	movf	lcd_linea@temp,w
  1607  03BA  00A3               	movwf	??_lcd_linea
  1608  03BB  0823               	movf	??_lcd_linea,w
  1609  03BC  00A6               	movwf	lcd_linea@z
  1610  03BD                     l1788:
  1611                           
  1612                           ;LCD.c: 94:         cmd(z);
  1613  03BD  0826               	movf	lcd_linea@z,w
  1614  03BE  120A  118A  2445  120A  118A  	fcall	_cmd
  1615  03C3                     l154:
  1616  03C3  0008               	return
  1617  03C4                     __end_of_lcd_linea:
  1618                           
  1619                           	psect	text8
  1620  02FD                     __ptext8:	
  1621 ;; *************** function _lcd_init *****************
  1622 ;; Defined at:
  1623 ;;		line 36 in file "LCD.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    3
  1644 ;; This function calls:
  1645 ;;		_cmd
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _lcd_init
  1653  02FD                     _lcd_init:
  1654  02FD                     l1772:	
  1655                           ;incstack = 0
  1656                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1657                           
  1658                           
  1659                           ;LCD.c: 38:     cmd(0x30);
  1660  02FD  3030               	movlw	48
  1661  02FE  120A  118A  2445  120A  118A  	fcall	_cmd
  1662                           
  1663                           ;LCD.c: 39:  cmd(0x0C);
  1664  0303  300C               	movlw	12
  1665  0304  120A  118A  2445  120A  118A  	fcall	_cmd
  1666                           
  1667                           ;LCD.c: 40:  cmd(0x01);
  1668  0309  3001               	movlw	1
  1669  030A  120A  118A  2445  120A  118A  	fcall	_cmd
  1670                           
  1671                           ;LCD.c: 41:  cmd(0x06);
  1672  030F  3006               	movlw	6
  1673  0310  120A  118A  2445  120A  118A  	fcall	_cmd
  1674                           
  1675                           ;LCD.c: 42:  cmd(0x80);
  1676  0315  3080               	movlw	128
  1677  0316  120A  118A  2445  120A  118A  	fcall	_cmd
  1678                           
  1679                           ;LCD.c: 43:  cmd(0x38);
  1680  031B  3038               	movlw	56
  1681  031C  120A  118A  2445  120A  118A  	fcall	_cmd
  1682                           
  1683                           ;LCD.c: 44:  cmd(0x0c);
  1684  0321  300C               	movlw	12
  1685  0322  120A  118A  2445  120A  118A  	fcall	_cmd
  1686                           
  1687                           ;LCD.c: 45:  cmd(0x06);
  1688  0327  3006               	movlw	6
  1689  0328  120A  118A  2445  120A  118A  	fcall	_cmd
  1690                           
  1691                           ;LCD.c: 46:  cmd(0x80);
  1692  032D  3080               	movlw	128
  1693  032E  120A  118A  2445  120A  118A  	fcall	_cmd
  1694  0333                     l136:
  1695  0333  0008               	return
  1696  0334                     __end_of_lcd_init:
  1697                           
  1698                           	psect	text9
  1699  0467                     __ptext9:	
  1700 ;; *************** function _lcd_clear *****************
  1701 ;; Defined at:
  1702 ;;		line 29 in file "LCD.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		_cmd
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _lcd_clear
  1732  0467                     _lcd_clear:
  1733  0467                     l1770:	
  1734                           ;incstack = 0
  1735                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1736                           
  1737                           
  1738                           ;LCD.c: 31:     cmd(0);
  1739  0467  3000               	movlw	0
  1740  0468  120A  118A  2445  120A  118A  	fcall	_cmd
  1741                           
  1742                           ;LCD.c: 32:     cmd(1);
  1743  046D  3001               	movlw	1
  1744  046E  120A  118A  2445  120A  118A  	fcall	_cmd
  1745  0473                     l133:
  1746  0473  0008               	return
  1747  0474                     __end_of_lcd_clear:
  1748                           
  1749                           	psect	text10
  1750  0445                     __ptext10:	
  1751 ;; *************** function _cmd *****************
  1752 ;; Defined at:
  1753 ;;		line 50 in file "LCD.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  a               1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  a               1    1[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         0       1       0       0       0
  1769 ;;      Temps:          0       1       0       0       0
  1770 ;;      Totals:         0       2       0       0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    2
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;;		_lcd_clear
  1779 ;;		_lcd_init
  1780 ;;		_lcd_linea
  1781 ;;		_lcd_mov_derecha
  1782 ;;		_lcd_mov_izquierda
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _cmd
  1788  0445                     _cmd:
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _cmd: [wreg]
  1792                           ;cmd@a stored from wreg
  1793  0445  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0446  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0447  00A1               	movwf	cmd@a
  1796  0448                     l1544:
  1797                           
  1798                           ;LCD.c: 50: void cmd(unsigned char a);LCD.c: 51: {;LCD.c: 52:  PORTB=a;
  1799  0448  0821               	movf	cmd@a,w
  1800  0449  0086               	movwf	6	;volatile
  1801  044A                     l1546:
  1802                           
  1803                           ;LCD.c: 53:  RD5=0;
  1804  044A  1288               	bcf	8,5	;volatile
  1805  044B                     l1548:
  1806                           
  1807                           ;LCD.c: 54:  RD6=0;
  1808  044B  1308               	bcf	8,6	;volatile
  1809  044C                     l1550:
  1810                           
  1811                           ;LCD.c: 55:  RD7=1;
  1812  044C  1788               	bsf	8,7	;volatile
  1813                           
  1814                           ;LCD.c: 56:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1815  044D  30C7               	movlw	199
  1816  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1817  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0450  00A0               	movwf	??_cmd
  1819  0451                     u767:
  1820  0451  2C52               	nop2
  1821  0452  0BA0               	decfsz	??_cmd,f
  1822  0453  2C51               	goto	u767
  1823  0454  2C55               	nop2
  1824  0455                     l1552:
  1825                           
  1826                           ;LCD.c: 57:  RD7=0;
  1827  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0457  1388               	bcf	8,7	;volatile
  1830  0458                     l139:
  1831  0458  0008               	return
  1832  0459                     __end_of_cmd:
  1833                           
  1834                           	psect	text11
  1835  001B                     __ptext11:	
  1836 ;; *************** function _lcd_ascii *****************
  1837 ;; Defined at:
  1838 ;;		line 232 in file "main_.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  random         16   19[BANK0 ] unsigned char [16]
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      unsigned char 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       0       0       0       0
  1853 ;;      Locals:         0      16       0       0       0
  1854 ;;      Temps:          0       3       0       0       0
  1855 ;;      Totals:         0      19       0       0       0
  1856 ;;Total ram usage:       19 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    3
  1859 ;; This function calls:
  1860 ;;		___awdiv
  1861 ;;		___awmod
  1862 ;;		_datos_ascii
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _lcd_ascii
  1870  001B                     _lcd_ascii:
  1871  001B                     l1800:	
  1872                           ;incstack = 0
  1873                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1874                           
  1875                           
  1876                           ;main_.c: 234:     uint8_t random[16];;main_.c: 235:     random[0]=datos_ascii(((2*(conv
      +                          ersion1)/100)%10));
  1877  001B  300A               	movlw	10
  1878  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1879  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1880  001E  00A9               	movwf	___awmod@divisor
  1881  001F  3000               	movlw	0
  1882  0020  00AA               	movwf	___awmod@divisor+1
  1883  0021  3064               	movlw	100
  1884  0022  00A0               	movwf	___awdiv@divisor
  1885  0023  3000               	movlw	0
  1886  0024  00A1               	movwf	___awdiv@divisor+1
  1887  0025  0849               	movf	_conversion1,w
  1888  0026  00B0               	movwf	??_lcd_ascii
  1889  0027  01B1               	clrf	??_lcd_ascii+1
  1890  0028  1003               	clrc
  1891  0029  0D30               	rlf	??_lcd_ascii,w
  1892  002A  00A2               	movwf	___awdiv@dividend
  1893  002B  0D31               	rlf	??_lcd_ascii+1,w
  1894  002C  00A3               	movwf	___awdiv@dividend+1
  1895  002D  120A  118A  215F  120A  118A  	fcall	___awdiv
  1896  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0034  0821               	movf	?___awdiv+1,w
  1899  0035  00AC               	movwf	___awmod@dividend+1
  1900  0036  0820               	movf	?___awdiv,w
  1901  0037  00AB               	movwf	___awmod@dividend
  1902  0038  120A  118A  21C8  120A  118A  	fcall	___awmod
  1903  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1904  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1905  003F  0829               	movf	?___awmod,w
  1906  0040  120A  118A  227D  120A  118A  	fcall	_datos_ascii
  1907  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0047  00B2               	movwf	??_lcd_ascii+2
  1910  0048  0832               	movf	??_lcd_ascii+2,w
  1911  0049  00B3               	movwf	lcd_ascii@random
  1912  004A                     l1802:
  1913                           
  1914                           ;main_.c: 236:     random[1]=0x2E;
  1915  004A  302E               	movlw	46
  1916  004B  00B0               	movwf	??_lcd_ascii
  1917  004C  0830               	movf	??_lcd_ascii,w
  1918  004D  00B4               	movwf	lcd_ascii@random+1
  1919  004E                     l1804:
  1920                           
  1921                           ;main_.c: 237:     random[2]=datos_ascii(((2*(conversion1)/100)%10));
  1922  004E  300A               	movlw	10
  1923  004F  00A9               	movwf	___awmod@divisor
  1924  0050  3000               	movlw	0
  1925  0051  00AA               	movwf	___awmod@divisor+1
  1926  0052  3064               	movlw	100
  1927  0053  00A0               	movwf	___awdiv@divisor
  1928  0054  3000               	movlw	0
  1929  0055  00A1               	movwf	___awdiv@divisor+1
  1930  0056  0849               	movf	_conversion1,w
  1931  0057  00B0               	movwf	??_lcd_ascii
  1932  0058  01B1               	clrf	??_lcd_ascii+1
  1933  0059  1003               	clrc
  1934  005A  0D30               	rlf	??_lcd_ascii,w
  1935  005B  00A2               	movwf	___awdiv@dividend
  1936  005C  0D31               	rlf	??_lcd_ascii+1,w
  1937  005D  00A3               	movwf	___awdiv@dividend+1
  1938  005E  120A  118A  215F  120A  118A  	fcall	___awdiv
  1939  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0065  0821               	movf	?___awdiv+1,w
  1942  0066  00AC               	movwf	___awmod@dividend+1
  1943  0067  0820               	movf	?___awdiv,w
  1944  0068  00AB               	movwf	___awmod@dividend
  1945  0069  120A  118A  21C8  120A  118A  	fcall	___awmod
  1946  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1947  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0070  0829               	movf	?___awmod,w
  1949  0071  120A  118A  227D  120A  118A  	fcall	_datos_ascii
  1950  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0078  00B2               	movwf	??_lcd_ascii+2
  1953  0079  0832               	movf	??_lcd_ascii+2,w
  1954  007A  00B5               	movwf	lcd_ascii@random+2
  1955  007B                     l1806:
  1956                           
  1957                           ;main_.c: 238:     random[3]=datos_ascii((2*conversion1)%10);
  1958  007B  300A               	movlw	10
  1959  007C  00A9               	movwf	___awmod@divisor
  1960  007D  3000               	movlw	0
  1961  007E  00AA               	movwf	___awmod@divisor+1
  1962  007F  0849               	movf	_conversion1,w
  1963  0080  00B0               	movwf	??_lcd_ascii
  1964  0081  01B1               	clrf	??_lcd_ascii+1
  1965  0082  1003               	clrc
  1966  0083  0D30               	rlf	??_lcd_ascii,w
  1967  0084  00AB               	movwf	___awmod@dividend
  1968  0085  0D31               	rlf	??_lcd_ascii+1,w
  1969  0086  00AC               	movwf	___awmod@dividend+1
  1970  0087  120A  118A  21C8  120A  118A  	fcall	___awmod
  1971  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1972  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1973  008E  0829               	movf	?___awmod,w
  1974  008F  120A  118A  227D  120A  118A  	fcall	_datos_ascii
  1975  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0096  00B2               	movwf	??_lcd_ascii+2
  1978  0097  0832               	movf	??_lcd_ascii+2,w
  1979  0098  00B6               	movwf	lcd_ascii@random+3
  1980  0099                     l1808:
  1981                           
  1982                           ;main_.c: 239:     random[4]=32;
  1983  0099  3020               	movlw	32
  1984  009A  00B0               	movwf	??_lcd_ascii
  1985  009B  0830               	movf	??_lcd_ascii,w
  1986  009C  00B7               	movwf	lcd_ascii@random+4
  1987                           
  1988                           ;main_.c: 240:     random[5]=datos_ascii(((2*(conversion2)/100)%10));
  1989  009D  300A               	movlw	10
  1990  009E  00A9               	movwf	___awmod@divisor
  1991  009F  3000               	movlw	0
  1992  00A0  00AA               	movwf	___awmod@divisor+1
  1993  00A1  3064               	movlw	100
  1994  00A2  00A0               	movwf	___awdiv@divisor
  1995  00A3  3000               	movlw	0
  1996  00A4  00A1               	movwf	___awdiv@divisor+1
  1997  00A5  0848               	movf	_conversion2,w
  1998  00A6  00B0               	movwf	??_lcd_ascii
  1999  00A7  01B1               	clrf	??_lcd_ascii+1
  2000  00A8  1003               	clrc
  2001  00A9  0D30               	rlf	??_lcd_ascii,w
  2002  00AA  00A2               	movwf	___awdiv@dividend
  2003  00AB  0D31               	rlf	??_lcd_ascii+1,w
  2004  00AC  00A3               	movwf	___awdiv@dividend+1
  2005  00AD  120A  118A  215F  120A  118A  	fcall	___awdiv
  2006  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2007  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2008  00B4  0821               	movf	?___awdiv+1,w
  2009  00B5  00AC               	movwf	___awmod@dividend+1
  2010  00B6  0820               	movf	?___awdiv,w
  2011  00B7  00AB               	movwf	___awmod@dividend
  2012  00B8  120A  118A  21C8  120A  118A  	fcall	___awmod
  2013  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2014  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2015  00BF  0829               	movf	?___awmod,w
  2016  00C0  120A  118A  227D  120A  118A  	fcall	_datos_ascii
  2017  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2018  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2019  00C7  00B2               	movwf	??_lcd_ascii+2
  2020  00C8  0832               	movf	??_lcd_ascii+2,w
  2021  00C9  00B8               	movwf	lcd_ascii@random+5
  2022  00CA                     l1810:
  2023                           
  2024                           ;main_.c: 241:     random[6]=0x2E;
  2025  00CA  302E               	movlw	46
  2026  00CB  00B0               	movwf	??_lcd_ascii
  2027  00CC  0830               	movf	??_lcd_ascii,w
  2028  00CD  00B9               	movwf	lcd_ascii@random+6
  2029  00CE                     l1812:
  2030                           
  2031                           ;main_.c: 242:     random[7]=datos_ascii(((2*(conversion2)/100)%10));
  2032  00CE  300A               	movlw	10
  2033  00CF  00A9               	movwf	___awmod@divisor
  2034  00D0  3000               	movlw	0
  2035  00D1  00AA               	movwf	___awmod@divisor+1
  2036  00D2  3064               	movlw	100
  2037  00D3  00A0               	movwf	___awdiv@divisor
  2038  00D4  3000               	movlw	0
  2039  00D5  00A1               	movwf	___awdiv@divisor+1
  2040  00D6  0848               	movf	_conversion2,w
  2041  00D7  00B0               	movwf	??_lcd_ascii
  2042  00D8  01B1               	clrf	??_lcd_ascii+1
  2043  00D9  1003               	clrc
  2044  00DA  0D30               	rlf	??_lcd_ascii,w
  2045  00DB  00A2               	movwf	___awdiv@dividend
  2046  00DC  0D31               	rlf	??_lcd_ascii+1,w
  2047  00DD  00A3               	movwf	___awdiv@dividend+1
  2048  00DE  120A  118A  215F  120A  118A  	fcall	___awdiv
  2049  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2050  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  2051  00E5  0821               	movf	?___awdiv+1,w
  2052  00E6  00AC               	movwf	___awmod@dividend+1
  2053  00E7  0820               	movf	?___awdiv,w
  2054  00E8  00AB               	movwf	___awmod@dividend
  2055  00E9  120A  118A  21C8  120A  118A  	fcall	___awmod
  2056  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2057  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2058  00F0  0829               	movf	?___awmod,w
  2059  00F1  120A  118A  227D  120A  118A  	fcall	_datos_ascii
  2060  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2061  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2062  00F8  00B2               	movwf	??_lcd_ascii+2
  2063  00F9  0832               	movf	??_lcd_ascii+2,w
  2064  00FA  00BA               	movwf	lcd_ascii@random+7
  2065  00FB                     l1814:
  2066                           
  2067                           ;main_.c: 243:     random[8]=datos_ascii((2*conversion2)%10);
  2068  00FB  300A               	movlw	10
  2069  00FC  00A9               	movwf	___awmod@divisor
  2070  00FD  3000               	movlw	0
  2071  00FE  00AA               	movwf	___awmod@divisor+1
  2072  00FF  0848               	movf	_conversion2,w
  2073  0100  00B0               	movwf	??_lcd_ascii
  2074  0101  01B1               	clrf	??_lcd_ascii+1
  2075  0102  1003               	clrc
  2076  0103  0D30               	rlf	??_lcd_ascii,w
  2077  0104  00AB               	movwf	___awmod@dividend
  2078  0105  0D31               	rlf	??_lcd_ascii+1,w
  2079  0106  00AC               	movwf	___awmod@dividend+1
  2080  0107  120A  118A  21C8  120A  118A  	fcall	___awmod
  2081  010C  1283               	bcf	3,5	;RP0=0, select bank0
  2082  010D  1303               	bcf	3,6	;RP1=0, select bank0
  2083  010E  0829               	movf	?___awmod,w
  2084  010F  120A  118A  227D  120A  118A  	fcall	_datos_ascii
  2085  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0116  00B2               	movwf	??_lcd_ascii+2
  2088  0117  0832               	movf	??_lcd_ascii+2,w
  2089  0118  00BB               	movwf	lcd_ascii@random+8
  2090  0119                     l1816:
  2091                           
  2092                           ;main_.c: 244:     random[9]=32;
  2093  0119  3020               	movlw	32
  2094  011A  00B0               	movwf	??_lcd_ascii
  2095  011B  0830               	movf	??_lcd_ascii,w
  2096  011C  00BC               	movwf	lcd_ascii@random+9
  2097                           
  2098                           ;main_.c: 245:     random[10]=datos_ascii(((conversion1/100)%10));
  2099  011D  300A               	movlw	10
  2100  011E  00A9               	movwf	___awmod@divisor
  2101  011F  3000               	movlw	0
  2102  0120  00AA               	movwf	___awmod@divisor+1
  2103  0121  3064               	movlw	100
  2104  0122  00A0               	movwf	___awdiv@divisor
  2105  0123  3000               	movlw	0
  2106  0124  00A1               	movwf	___awdiv@divisor+1
  2107  0125  0849               	movf	_conversion1,w
  2108  0126  00B0               	movwf	??_lcd_ascii
  2109  0127  01B1               	clrf	??_lcd_ascii+1
  2110  0128  0830               	movf	??_lcd_ascii,w
  2111  0129  00A2               	movwf	___awdiv@dividend
  2112  012A  0831               	movf	??_lcd_ascii+1,w
  2113  012B  00A3               	movwf	___awdiv@dividend+1
  2114  012C  120A  118A  215F  120A  118A  	fcall	___awdiv
  2115  0131  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0132  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0133  0821               	movf	?___awdiv+1,w
  2118  0134  00AC               	movwf	___awmod@dividend+1
  2119  0135  0820               	movf	?___awdiv,w
  2120  0136  00AB               	movwf	___awmod@dividend
  2121  0137  120A  118A  21C8  120A  118A  	fcall	___awmod
  2122  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2123  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2124  013E  0829               	movf	?___awmod,w
  2125  013F  120A  118A  227D  120A  118A  	fcall	_datos_ascii
  2126  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0146  00B2               	movwf	??_lcd_ascii+2
  2129  0147  0832               	movf	??_lcd_ascii+2,w
  2130  0148  00BD               	movwf	lcd_ascii@random+10
  2131  0149                     l1818:
  2132                           
  2133                           ;main_.c: 246:     random[11]=32;
  2134  0149  3020               	movlw	32
  2135  014A  00B0               	movwf	??_lcd_ascii
  2136  014B  0830               	movf	??_lcd_ascii,w
  2137  014C  00BE               	movwf	lcd_ascii@random+11
  2138  014D                     l1820:
  2139                           
  2140                           ;main_.c: 247:     random[12]=32;
  2141  014D  3020               	movlw	32
  2142  014E  00B0               	movwf	??_lcd_ascii
  2143  014F  0830               	movf	??_lcd_ascii,w
  2144  0150  00BF               	movwf	lcd_ascii@random+12
  2145  0151                     l1822:
  2146                           
  2147                           ;main_.c: 248:     random[13]=32;
  2148  0151  3020               	movlw	32
  2149  0152  00B0               	movwf	??_lcd_ascii
  2150  0153  0830               	movf	??_lcd_ascii,w
  2151  0154  00C0               	movwf	lcd_ascii@random+13
  2152  0155                     l1824:
  2153                           
  2154                           ;main_.c: 249:     random[14]=32;
  2155  0155  3020               	movlw	32
  2156  0156  00B0               	movwf	??_lcd_ascii
  2157  0157  0830               	movf	??_lcd_ascii,w
  2158  0158  00C1               	movwf	lcd_ascii@random+14
  2159  0159                     l1826:
  2160                           
  2161                           ;main_.c: 250:     random[15]=32;
  2162  0159  3020               	movlw	32
  2163  015A  00B0               	movwf	??_lcd_ascii
  2164  015B  0830               	movf	??_lcd_ascii,w
  2165  015C  00C2               	movwf	lcd_ascii@random+15
  2166  015D                     l1828:
  2167                           
  2168                           ;main_.c: 251:     return random;
  2169  015D  3033               	movlw	(low lcd_ascii@random)& (0+255)
  2170  015E                     l111:
  2171  015E  0008               	return
  2172  015F                     __end_of_lcd_ascii:
  2173                           
  2174                           	psect	text12
  2175  027D                     __ptext12:	
  2176 ;; *************** function _datos_ascii *****************
  2177 ;; Defined at:
  2178 ;;		line 182 in file "main_.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  numero          1    wreg     unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  numero          1    2[BANK0 ] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       0       0       0       0
  2193 ;;      Locals:         0       1       0       0       0
  2194 ;;      Temps:          0       2       0       0       0
  2195 ;;      Totals:         0       3       0       0       0
  2196 ;;Total ram usage:        3 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    2
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_lcd_ascii
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _datos_ascii
  2208  027D                     _datos_ascii:
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2212                           ;datos_ascii@numero stored from wreg
  2213  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2214  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2215  027F  00A2               	movwf	datos_ascii@numero
  2216  0280                     l1562:
  2217                           
  2218                           ;main_.c: 182: unsigned char datos_ascii(uint8_t numero);main_.c: 183: {;main_.c: 184:  
      +                             switch(numero)
  2219  0280  2A95               	goto	l1632
  2220  0281                     l1564:
  2221                           
  2222                           ;main_.c: 187:             return 0x30;
  2223  0281  3030               	movlw	48
  2224  0282  2ABD               	goto	l97
  2225  0283                     l1576:
  2226                           
  2227                           ;main_.c: 194:             return 0x31;
  2228  0283  3031               	movlw	49
  2229  0284  2ABD               	goto	l97
  2230  0285                     l1582:
  2231                           
  2232                           ;main_.c: 198:             return 0x32;
  2233  0285  3032               	movlw	50
  2234  0286  2ABD               	goto	l97
  2235  0287                     l1588:
  2236                           
  2237                           ;main_.c: 202:             return 0x33;
  2238  0287  3033               	movlw	51
  2239  0288  2ABD               	goto	l97
  2240  0289                     l1594:
  2241                           
  2242                           ;main_.c: 206:             return 0x34;
  2243  0289  3034               	movlw	52
  2244  028A  2ABD               	goto	l97
  2245  028B                     l1600:
  2246                           
  2247                           ;main_.c: 210:             return 0x35;
  2248  028B  3035               	movlw	53
  2249  028C  2ABD               	goto	l97
  2250  028D                     l1606:
  2251                           
  2252                           ;main_.c: 214:             return 0x36;
  2253  028D  3036               	movlw	54
  2254  028E  2ABD               	goto	l97
  2255  028F                     l1612:
  2256                           
  2257                           ;main_.c: 218:             return 0x37;
  2258  028F  3037               	movlw	55
  2259  0290  2ABD               	goto	l97
  2260  0291                     l1618:
  2261                           
  2262                           ;main_.c: 222:             return 0x38;
  2263  0291  3038               	movlw	56
  2264  0292  2ABD               	goto	l97
  2265  0293                     l1624:
  2266                           
  2267                           ;main_.c: 226:             return 0x39;
  2268  0293  3039               	movlw	57
  2269  0294  2ABD               	goto	l97
  2270  0295                     l1632:
  2271  0295  0822               	movf	datos_ascii@numero,w
  2272  0296  00A0               	movwf	??_datos_ascii
  2273  0297  01A1               	clrf	??_datos_ascii+1
  2274                           
  2275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2276                           ; Switch size 1, requested type "simple"
  2277                           ; Number of cases is 1, Range of values is 0 to 0
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte            4     3 (average)
  2281                           ; direct_byte           11     8 (fixed)
  2282                           ; jumptable            260     6 (fixed)
  2283                           ;	Chosen strategy is simple_byte
  2284  0298  0821               	movf	??_datos_ascii+1,w
  2285  0299  3A00               	xorlw	0	; case 0
  2286  029A  1903               	skipnz
  2287  029B  2A9D               	goto	l1924
  2288  029C  2A81               	goto	l1564
  2289  029D                     l1924:
  2290                           
  2291                           ; Switch size 1, requested type "simple"
  2292                           ; Number of cases is 10, Range of values is 0 to 9
  2293                           ; switch strategies available:
  2294                           ; Name         Instructions Cycles
  2295                           ; simple_byte           31    16 (average)
  2296                           ; direct_byte           38     8 (fixed)
  2297                           ; jumptable            260     6 (fixed)
  2298                           ;	Chosen strategy is simple_byte
  2299  029D  0820               	movf	??_datos_ascii,w
  2300  029E  3A00               	xorlw	0	; case 0
  2301  029F  1903               	skipnz
  2302  02A0  2A81               	goto	l1564
  2303  02A1  3A01               	xorlw	1	; case 1
  2304  02A2  1903               	skipnz
  2305  02A3  2A83               	goto	l1576
  2306  02A4  3A03               	xorlw	3	; case 2
  2307  02A5  1903               	skipnz
  2308  02A6  2A85               	goto	l1582
  2309  02A7  3A01               	xorlw	1	; case 3
  2310  02A8  1903               	skipnz
  2311  02A9  2A87               	goto	l1588
  2312  02AA  3A07               	xorlw	7	; case 4
  2313  02AB  1903               	skipnz
  2314  02AC  2A89               	goto	l1594
  2315  02AD  3A01               	xorlw	1	; case 5
  2316  02AE  1903               	skipnz
  2317  02AF  2A8B               	goto	l1600
  2318  02B0  3A03               	xorlw	3	; case 6
  2319  02B1  1903               	skipnz
  2320  02B2  2A8D               	goto	l1606
  2321  02B3  3A01               	xorlw	1	; case 7
  2322  02B4  1903               	skipnz
  2323  02B5  2A8F               	goto	l1612
  2324  02B6  3A0F               	xorlw	15	; case 8
  2325  02B7  1903               	skipnz
  2326  02B8  2A91               	goto	l1618
  2327  02B9  3A01               	xorlw	1	; case 9
  2328  02BA  1903               	skipnz
  2329  02BB  2A93               	goto	l1624
  2330  02BC  2A81               	goto	l1564
  2331  02BD                     l97:
  2332  02BD  0008               	return
  2333  02BE                     __end_of_datos_ascii:
  2334                           
  2335                           	psect	text13
  2336  01C8                     __ptext13:	
  2337 ;; *************** function ___awmod *****************
  2338 ;; Defined at:
  2339 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  divisor         2    9[BANK0 ] int 
  2342 ;;  dividend        2   11[BANK0 ] int 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  sign            1   15[BANK0 ] unsigned char 
  2345 ;;  counter         1   14[BANK0 ] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  2    9[BANK0 ] int 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         0       4       0       0       0
  2356 ;;      Locals:         0       2       0       0       0
  2357 ;;      Temps:          0       1       0       0       0
  2358 ;;      Totals:         0       7       0       0       0
  2359 ;;Total ram usage:        7 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_lcd_ascii
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function ___awmod
  2371  01C8                     ___awmod:
  2372  01C8                     l1694:	
  2373                           ;incstack = 0
  2374                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2375                           
  2376  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2377  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2378  01CA  01AF               	clrf	___awmod@sign
  2379  01CB                     l1696:
  2380  01CB  1FAC               	btfss	___awmod@dividend+1,7
  2381  01CC  29CE               	goto	u581
  2382  01CD  29CF               	goto	u580
  2383  01CE                     u581:
  2384  01CE  29D6               	goto	l1702
  2385  01CF                     u580:
  2386  01CF                     l1698:
  2387  01CF  09AB               	comf	___awmod@dividend,f
  2388  01D0  09AC               	comf	___awmod@dividend+1,f
  2389  01D1  0AAB               	incf	___awmod@dividend,f
  2390  01D2  1903               	skipnz
  2391  01D3  0AAC               	incf	___awmod@dividend+1,f
  2392  01D4                     l1700:
  2393  01D4  01AF               	clrf	___awmod@sign
  2394  01D5  0AAF               	incf	___awmod@sign,f
  2395  01D6                     l1702:
  2396  01D6  1FAA               	btfss	___awmod@divisor+1,7
  2397  01D7  29D9               	goto	u591
  2398  01D8  29DA               	goto	u590
  2399  01D9                     u591:
  2400  01D9  29DF               	goto	l1706
  2401  01DA                     u590:
  2402  01DA                     l1704:
  2403  01DA  09A9               	comf	___awmod@divisor,f
  2404  01DB  09AA               	comf	___awmod@divisor+1,f
  2405  01DC  0AA9               	incf	___awmod@divisor,f
  2406  01DD  1903               	skipnz
  2407  01DE  0AAA               	incf	___awmod@divisor+1,f
  2408  01DF                     l1706:
  2409  01DF  0829               	movf	___awmod@divisor,w
  2410  01E0  042A               	iorwf	___awmod@divisor+1,w
  2411  01E1  1903               	btfsc	3,2
  2412  01E2  29E4               	goto	u601
  2413  01E3  29E5               	goto	u600
  2414  01E4                     u601:
  2415  01E4  2A14               	goto	l1724
  2416  01E5                     u600:
  2417  01E5                     l1708:
  2418  01E5  01AE               	clrf	___awmod@counter
  2419  01E6  0AAE               	incf	___awmod@counter,f
  2420  01E7  29F3               	goto	l1714
  2421  01E8                     l1710:
  2422  01E8  3001               	movlw	1
  2423  01E9                     u615:
  2424  01E9  1003               	clrc
  2425  01EA  0DA9               	rlf	___awmod@divisor,f
  2426  01EB  0DAA               	rlf	___awmod@divisor+1,f
  2427  01EC  3EFF               	addlw	-1
  2428  01ED  1D03               	skipz
  2429  01EE  29E9               	goto	u615
  2430  01EF                     l1712:
  2431  01EF  3001               	movlw	1
  2432  01F0  00AD               	movwf	??___awmod
  2433  01F1  082D               	movf	??___awmod,w
  2434  01F2  07AE               	addwf	___awmod@counter,f
  2435  01F3                     l1714:
  2436  01F3  1FAA               	btfss	___awmod@divisor+1,7
  2437  01F4  29F6               	goto	u621
  2438  01F5  29F7               	goto	u620
  2439  01F6                     u621:
  2440  01F6  29E8               	goto	l1710
  2441  01F7                     u620:
  2442  01F7                     l1716:
  2443  01F7  082A               	movf	___awmod@divisor+1,w
  2444  01F8  022C               	subwf	___awmod@dividend+1,w
  2445  01F9  1D03               	skipz
  2446  01FA  29FD               	goto	u635
  2447  01FB  0829               	movf	___awmod@divisor,w
  2448  01FC  022B               	subwf	___awmod@dividend,w
  2449  01FD                     u635:
  2450  01FD  1C03               	skipc
  2451  01FE  2A00               	goto	u631
  2452  01FF  2A01               	goto	u630
  2453  0200                     u631:
  2454  0200  2A07               	goto	l1720
  2455  0201                     u630:
  2456  0201                     l1718:
  2457  0201  0829               	movf	___awmod@divisor,w
  2458  0202  02AB               	subwf	___awmod@dividend,f
  2459  0203  082A               	movf	___awmod@divisor+1,w
  2460  0204  1C03               	skipc
  2461  0205  03AC               	decf	___awmod@dividend+1,f
  2462  0206  02AC               	subwf	___awmod@dividend+1,f
  2463  0207                     l1720:
  2464  0207  3001               	movlw	1
  2465  0208                     u645:
  2466  0208  1003               	clrc
  2467  0209  0CAA               	rrf	___awmod@divisor+1,f
  2468  020A  0CA9               	rrf	___awmod@divisor,f
  2469  020B  3EFF               	addlw	-1
  2470  020C  1D03               	skipz
  2471  020D  2A08               	goto	u645
  2472  020E                     l1722:
  2473  020E  3001               	movlw	1
  2474  020F  02AE               	subwf	___awmod@counter,f
  2475  0210  1D03               	btfss	3,2
  2476  0211  2A13               	goto	u651
  2477  0212  2A14               	goto	u650
  2478  0213                     u651:
  2479  0213  29F7               	goto	l1716
  2480  0214                     u650:
  2481  0214                     l1724:
  2482  0214  082F               	movf	___awmod@sign,w
  2483  0215  1903               	btfsc	3,2
  2484  0216  2A18               	goto	u661
  2485  0217  2A19               	goto	u660
  2486  0218                     u661:
  2487  0218  2A1E               	goto	l1728
  2488  0219                     u660:
  2489  0219                     l1726:
  2490  0219  09AB               	comf	___awmod@dividend,f
  2491  021A  09AC               	comf	___awmod@dividend+1,f
  2492  021B  0AAB               	incf	___awmod@dividend,f
  2493  021C  1903               	skipnz
  2494  021D  0AAC               	incf	___awmod@dividend+1,f
  2495  021E                     l1728:
  2496  021E  082C               	movf	___awmod@dividend+1,w
  2497  021F  00AA               	movwf	?___awmod+1
  2498  0220  082B               	movf	___awmod@dividend,w
  2499  0221  00A9               	movwf	?___awmod
  2500  0222                     l432:
  2501  0222  0008               	return
  2502  0223                     __end_of___awmod:
  2503                           
  2504                           	psect	text14
  2505  015F                     __ptext14:	
  2506 ;; *************** function ___awdiv *****************
  2507 ;; Defined at:
  2508 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  divisor         2    0[BANK0 ] int 
  2511 ;;  dividend        2    2[BANK0 ] int 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  quotient        2    7[BANK0 ] int 
  2514 ;;  sign            1    6[BANK0 ] unsigned char 
  2515 ;;  counter         1    5[BANK0 ] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2    0[BANK0 ] int 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       4       0       0       0
  2526 ;;      Locals:         0       4       0       0       0
  2527 ;;      Temps:          0       1       0       0       0
  2528 ;;      Totals:         0       9       0       0       0
  2529 ;;Total ram usage:        9 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    2
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_lcd_ascii
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function ___awdiv
  2541  015F                     ___awdiv:
  2542  015F                     l1650:	
  2543                           ;incstack = 0
  2544                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2545                           
  2546  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0161  01A6               	clrf	___awdiv@sign
  2549  0162                     l1652:
  2550  0162  1FA1               	btfss	___awdiv@divisor+1,7
  2551  0163  2965               	goto	u481
  2552  0164  2966               	goto	u480
  2553  0165                     u481:
  2554  0165  296D               	goto	l1658
  2555  0166                     u480:
  2556  0166                     l1654:
  2557  0166  09A0               	comf	___awdiv@divisor,f
  2558  0167  09A1               	comf	___awdiv@divisor+1,f
  2559  0168  0AA0               	incf	___awdiv@divisor,f
  2560  0169  1903               	skipnz
  2561  016A  0AA1               	incf	___awdiv@divisor+1,f
  2562  016B                     l1656:
  2563  016B  01A6               	clrf	___awdiv@sign
  2564  016C  0AA6               	incf	___awdiv@sign,f
  2565  016D                     l1658:
  2566  016D  1FA3               	btfss	___awdiv@dividend+1,7
  2567  016E  2970               	goto	u491
  2568  016F  2971               	goto	u490
  2569  0170                     u491:
  2570  0170  297A               	goto	l1664
  2571  0171                     u490:
  2572  0171                     l1660:
  2573  0171  09A2               	comf	___awdiv@dividend,f
  2574  0172  09A3               	comf	___awdiv@dividend+1,f
  2575  0173  0AA2               	incf	___awdiv@dividend,f
  2576  0174  1903               	skipnz
  2577  0175  0AA3               	incf	___awdiv@dividend+1,f
  2578  0176                     l1662:
  2579  0176  3001               	movlw	1
  2580  0177  00A4               	movwf	??___awdiv
  2581  0178  0824               	movf	??___awdiv,w
  2582  0179  06A6               	xorwf	___awdiv@sign,f
  2583  017A                     l1664:
  2584  017A  01A7               	clrf	___awdiv@quotient
  2585  017B  01A8               	clrf	___awdiv@quotient+1
  2586  017C                     l1666:
  2587  017C  0820               	movf	___awdiv@divisor,w
  2588  017D  0421               	iorwf	___awdiv@divisor+1,w
  2589  017E  1903               	btfsc	3,2
  2590  017F  2981               	goto	u501
  2591  0180  2982               	goto	u500
  2592  0181                     u501:
  2593  0181  29B9               	goto	l1686
  2594  0182                     u500:
  2595  0182                     l1668:
  2596  0182  01A5               	clrf	___awdiv@counter
  2597  0183  0AA5               	incf	___awdiv@counter,f
  2598  0184  2990               	goto	l1674
  2599  0185                     l1670:
  2600  0185  3001               	movlw	1
  2601  0186                     u515:
  2602  0186  1003               	clrc
  2603  0187  0DA0               	rlf	___awdiv@divisor,f
  2604  0188  0DA1               	rlf	___awdiv@divisor+1,f
  2605  0189  3EFF               	addlw	-1
  2606  018A  1D03               	skipz
  2607  018B  2986               	goto	u515
  2608  018C                     l1672:
  2609  018C  3001               	movlw	1
  2610  018D  00A4               	movwf	??___awdiv
  2611  018E  0824               	movf	??___awdiv,w
  2612  018F  07A5               	addwf	___awdiv@counter,f
  2613  0190                     l1674:
  2614  0190  1FA1               	btfss	___awdiv@divisor+1,7
  2615  0191  2993               	goto	u521
  2616  0192  2994               	goto	u520
  2617  0193                     u521:
  2618  0193  2985               	goto	l1670
  2619  0194                     u520:
  2620  0194                     l1676:
  2621  0194  3001               	movlw	1
  2622  0195                     u535:
  2623  0195  1003               	clrc
  2624  0196  0DA7               	rlf	___awdiv@quotient,f
  2625  0197  0DA8               	rlf	___awdiv@quotient+1,f
  2626  0198  3EFF               	addlw	-1
  2627  0199  1D03               	skipz
  2628  019A  2995               	goto	u535
  2629  019B  0821               	movf	___awdiv@divisor+1,w
  2630  019C  0223               	subwf	___awdiv@dividend+1,w
  2631  019D  1D03               	skipz
  2632  019E  29A1               	goto	u545
  2633  019F  0820               	movf	___awdiv@divisor,w
  2634  01A0  0222               	subwf	___awdiv@dividend,w
  2635  01A1                     u545:
  2636  01A1  1C03               	skipc
  2637  01A2  29A4               	goto	u541
  2638  01A3  29A5               	goto	u540
  2639  01A4                     u541:
  2640  01A4  29AC               	goto	l1682
  2641  01A5                     u540:
  2642  01A5                     l1678:
  2643  01A5  0820               	movf	___awdiv@divisor,w
  2644  01A6  02A2               	subwf	___awdiv@dividend,f
  2645  01A7  0821               	movf	___awdiv@divisor+1,w
  2646  01A8  1C03               	skipc
  2647  01A9  03A3               	decf	___awdiv@dividend+1,f
  2648  01AA  02A3               	subwf	___awdiv@dividend+1,f
  2649  01AB                     l1680:
  2650  01AB  1427               	bsf	___awdiv@quotient,0
  2651  01AC                     l1682:
  2652  01AC  3001               	movlw	1
  2653  01AD                     u555:
  2654  01AD  1003               	clrc
  2655  01AE  0CA1               	rrf	___awdiv@divisor+1,f
  2656  01AF  0CA0               	rrf	___awdiv@divisor,f
  2657  01B0  3EFF               	addlw	-1
  2658  01B1  1D03               	skipz
  2659  01B2  29AD               	goto	u555
  2660  01B3                     l1684:
  2661  01B3  3001               	movlw	1
  2662  01B4  02A5               	subwf	___awdiv@counter,f
  2663  01B5  1D03               	btfss	3,2
  2664  01B6  29B8               	goto	u561
  2665  01B7  29B9               	goto	u560
  2666  01B8                     u561:
  2667  01B8  2994               	goto	l1676
  2668  01B9                     u560:
  2669  01B9                     l1686:
  2670  01B9  0826               	movf	___awdiv@sign,w
  2671  01BA  1903               	btfsc	3,2
  2672  01BB  29BD               	goto	u571
  2673  01BC  29BE               	goto	u570
  2674  01BD                     u571:
  2675  01BD  29C3               	goto	l1690
  2676  01BE                     u570:
  2677  01BE                     l1688:
  2678  01BE  09A7               	comf	___awdiv@quotient,f
  2679  01BF  09A8               	comf	___awdiv@quotient+1,f
  2680  01C0  0AA7               	incf	___awdiv@quotient,f
  2681  01C1  1903               	skipnz
  2682  01C2  0AA8               	incf	___awdiv@quotient+1,f
  2683  01C3                     l1690:
  2684  01C3  0828               	movf	___awdiv@quotient+1,w
  2685  01C4  00A1               	movwf	?___awdiv+1
  2686  01C5  0827               	movf	___awdiv@quotient,w
  2687  01C6  00A0               	movwf	?___awdiv
  2688  01C7                     l419:
  2689  01C7  0008               	return
  2690  01C8                     __end_of___awdiv:
  2691                           
  2692                           	psect	text15
  2693  03E3                     __ptext15:	
  2694 ;; *************** function _isr *****************
  2695 ;; Defined at:
  2696 ;;		line 64 in file "main_.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          4       0       0       0       0
  2713 ;;      Totals:         4       0       0       0       0
  2714 ;;Total ram usage:        4 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    1
  2717 ;; This function calls:
  2718 ;;		_recepcion_uart
  2719 ;; This function is called by:
  2720 ;;		Interrupt level 1
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _isr
  2726  03E3                     _isr:
  2727  03E3                     i1l1108:
  2728                           
  2729                           ;main_.c: 67:     if(PIR1bits.RCIF)
  2730  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2731  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2732  03E5  1E8C               	btfss	12,5	;volatile
  2733  03E6  2BE8               	goto	u24_21
  2734  03E7  2BE9               	goto	u24_20
  2735  03E8                     u24_21:
  2736  03E8  2BF3               	goto	i1l1116
  2737  03E9                     u24_20:
  2738  03E9                     i1l1110:
  2739                           
  2740                           ;main_.c: 68:     {;main_.c: 69:         dato_recibido=RCREG;
  2741  03E9  081A               	movf	26,w	;volatile
  2742  03EA  00F2               	movwf	??_isr
  2743  03EB  0872               	movf	??_isr,w
  2744  03EC  00F6               	movwf	_dato_recibido
  2745  03ED                     i1l1112:
  2746                           
  2747                           ;main_.c: 70:         PIR1bits.RCIF=0;
  2748  03ED  128C               	bcf	12,5	;volatile
  2749  03EE                     i1l1114:
  2750                           
  2751                           ;main_.c: 71:         recepcion_uart();
  2752  03EE  120A  118A  23FF  120A  118A  	fcall	_recepcion_uart
  2753  03F3                     i1l1116:
  2754                           
  2755                           ;main_.c: 73:     if (PIR1bits.ADIF)
  2756  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2757  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2758  03F5  080C               	movf	12,w	;volatile
  2759  03F6                     i1l73:
  2760  03F6  0875               	movf	??_isr+3,w
  2761  03F7  008A               	movwf	10
  2762  03F8  0874               	movf	??_isr+2,w
  2763  03F9  0084               	movwf	4
  2764  03FA  0E73               	swapf	??_isr+1,w
  2765  03FB  0083               	movwf	3
  2766  03FC  0EFE               	swapf	btemp,f
  2767  03FD  0E7E               	swapf	btemp,w
  2768  03FE  0009               	retfie
  2769  03FF                     __end_of_isr:
  2770                           
  2771                           	psect	intentry
  2772  0004                     __pintentry:	
  2773                           ;incstack = 0
  2774                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2775                           
  2776  0004                     interrupt_function:
  2777  007E                     saved_w	set	btemp
  2778  0004  00FE               	movwf	btemp
  2779  0005  0E03               	swapf	3,w
  2780  0006  00F3               	movwf	??_isr+1
  2781  0007  0804               	movf	4,w
  2782  0008  00F4               	movwf	??_isr+2
  2783  0009  080A               	movf	10,w
  2784  000A  00F5               	movwf	??_isr+3
  2785  000B  120A  118A  2BE3   	ljmp	_isr
  2786                           
  2787                           	psect	text16
  2788  03FF                     __ptext16:	
  2789 ;; *************** function _recepcion_uart *****************
  2790 ;; Defined at:
  2791 ;;		line 255 in file "main_.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0
  2807 ;;      Temps:          2       0       0       0       0
  2808 ;;      Totals:         2       0       0       0       0
  2809 ;;Total ram usage:        2 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_isr
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _recepcion_uart
  2820  03FF                     _recepcion_uart:
  2821  03FF                     i1l970:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  2824                           
  2825                           
  2826                           ;main_.c: 257:     switch(dato_recibido)
  2827  03FF  2C08               	goto	i1l978
  2828  0400                     i1l972:
  2829                           
  2830                           ;main_.c: 260:             cuenta_uart++;
  2831  0400  3001               	movlw	1
  2832  0401  00F0               	movwf	??_recepcion_uart
  2833  0402  0870               	movf	??_recepcion_uart,w
  2834  0403  07F7               	addwf	_cuenta_uart,f
  2835                           
  2836                           ;main_.c: 261:             break;
  2837  0404  2C18               	goto	i1l118
  2838  0405                     i1l974:
  2839                           
  2840                           ;main_.c: 264:             cuenta_uart--;
  2841  0405  3001               	movlw	1
  2842  0406  02F7               	subwf	_cuenta_uart,f
  2843                           
  2844                           ;main_.c: 265:             break;
  2845  0407  2C18               	goto	i1l118
  2846  0408                     i1l978:
  2847  0408  0876               	movf	_dato_recibido,w
  2848  0409  00F0               	movwf	??_recepcion_uart
  2849  040A  01F1               	clrf	??_recepcion_uart+1
  2850                           
  2851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2852                           ; Switch size 1, requested type "simple"
  2853                           ; Number of cases is 1, Range of values is 0 to 0
  2854                           ; switch strategies available:
  2855                           ; Name         Instructions Cycles
  2856                           ; simple_byte            4     3 (average)
  2857                           ; direct_byte           11     8 (fixed)
  2858                           ; jumptable            260     6 (fixed)
  2859                           ;	Chosen strategy is simple_byte
  2860  040B  0871               	movf	??_recepcion_uart+1,w
  2861  040C  3A00               	xorlw	0	; case 0
  2862  040D  1903               	skipnz
  2863  040E  2C10               	goto	i1l1926
  2864  040F  2C18               	goto	i1l118
  2865  0410                     i1l1926:
  2866                           
  2867                           ; Switch size 1, requested type "simple"
  2868                           ; Number of cases is 2, Range of values is 49 to 50
  2869                           ; switch strategies available:
  2870                           ; Name         Instructions Cycles
  2871                           ; simple_byte            7     4 (average)
  2872                           ; direct_byte           17    11 (fixed)
  2873                           ; jumptable            263     9 (fixed)
  2874                           ;	Chosen strategy is simple_byte
  2875  0410  0870               	movf	??_recepcion_uart,w
  2876  0411  3A31               	xorlw	49	; case 49
  2877  0412  1903               	skipnz
  2878  0413  2C00               	goto	i1l972
  2879  0414  3A03               	xorlw	3	; case 50
  2880  0415  1903               	skipnz
  2881  0416  2C05               	goto	i1l974
  2882  0417  2C18               	goto	i1l118
  2883  0418                     i1l118:
  2884  0418  0008               	return
  2885  0419                     __end_of_recepcion_uart:
  2886  007E                     btemp	set	126	;btemp
  2887  007E                     wtemp0	set	126
  2888                           
  2889                           	psect	config
  2890                           
  2891                           ;Config register CONFIG1 @ 0x2007
  2892                           ;	Oscillator Selection bits
  2893                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2894                           ;	Watchdog Timer Enable bit
  2895                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2896                           ;	Power-up Timer Enable bit
  2897                           ;	PWRTE = OFF, PWRT disabled
  2898                           ;	RE3/MCLR pin function select bit
  2899                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2900                           ;	Code Protection bit
  2901                           ;	CP = OFF, Program memory code protection is disabled
  2902                           ;	Data Code Protection bit
  2903                           ;	CPD = OFF, Data memory code protection is disabled
  2904                           ;	Brown Out Reset Selection bits
  2905                           ;	BOREN = OFF, BOR disabled
  2906                           ;	Internal External Switchover bit
  2907                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2908                           ;	Fail-Safe Clock Monitor Enabled bit
  2909                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2910                           ;	Low Voltage Programming Enable bit
  2911                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2912                           ;	In-Circuit Debugger Mode bit
  2913                           ;	DEBUG = 0x1, unprogrammed default
  2914  2007                     	org	8199
  2915  2007  20D4               	dw	8404
  2916                           
  2917                           ;Config register CONFIG2 @ 0x2008
  2918                           ;	Brown-out Reset Selection bit
  2919                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2920                           ;	Flash Program Memory Self Write Enable bits
  2921                           ;	WRT = OFF, Write protection off
  2922  2008                     	org	8200
  2923  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     40      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_recepcion_uart

Critical Paths under _main in BANK0

    _main->_show
    _show->_lcd_ascii
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_clear->_cmd
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4489
                                             38 BANK0      2     2      0
                                _cmd
                          _lcd_ascii
                          _lcd_clear
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 3     1      2     267
                                             35 BANK0      3     1      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     471
                                              2 BANK0      5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      31
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      31
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           19    19      0    3658
                                             16 BANK0     19    19      0
                            ___awdiv
                            ___awmod
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1693
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                     _recepcion_uart
 ---------------------------------------------------------------------------------
 (4) _recepcion_uart                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_ascii
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _datos_ascii
   _lcd_clear
     _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _adc_config
     _uart_config
   _show
     _dat
     _lcd_ascii (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)
   _recepcion_uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 29 04:17:47 2021

                      pc 0002                       l84 0366                       l92 02FC  
                     l97 02BD             ___awdiv@sign 0026          ?_recepcion_uart 0070  
                     fsr 0004                      l111 015E                      l133 0473  
                    l142 0444                      l136 0333                      l154 03C3  
                    l139 0458                      l180 0466                      l148 0395  
                    l432 0222                      l169 0430                      l419 01C7  
                    l800 0465                      l790 0459                      l792 045C  
                    l794 0460                      l796 0461                      l798 0464  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u500 0182                      u501 0181                      u520 0194  
                    u600 01E5                      u440 02C4                      u521 0193  
                    u601 01E4                      u441 02C3                      u515 0186  
                    u540 01A5                      u620 01F7                      u541 01A4  
                    u621 01F6                      u630 0201                      u535 0195  
                    u631 0200                      u615 01E9                      u560 01B9  
                    u480 0166                      u561 01B8                      u545 01A1  
                    u481 0165                      u570 01BE                      u490 0171  
                    u650 0214                      u571 01BD                      u555 01AD  
                    u491 0170                      u651 0213                      u635 01FD  
                    u707 023C                      u660 0219                      u580 01CF  
                    u661 0218                      u645 0208                      u581 01CE  
                    u717 02CD                      u590 01DA                      u670 039E  
                    u591 01D9                      u671 039D                      u727 02E0  
                    u680 03B4                      u681 03B3                      u737 0382  
                    u690 0395                      u747 043D                      u691 0394  
                    u757 042A                      u767 0451                      _dat 0431  
                    _cmd 0445                      _isr 03E3                      fsr0 0004  
                    indf 0000             ___awmod@sign 002F                     ?_dat 0070  
                   l1600 028B                     ?_cmd 0070                     l1700 01D4  
                   l1612 028F                     l1380 02D6                     l1372 02BE  
                   l1710 01E8                     l1702 01D6                     l1606 028D  
                   l1550 044C                     l1382 02D8                     l1390 02E9  
                   l1720 0207                     l1712 01EF                     l1704 01DA  
                   l1624 0293                     l1632 0295                     l1800 001B  
                   l1552 0455                     l1544 0448                     l1560 042D  
                   l1640 0434                     l1384 02E3                     l1376 02C5  
                   l1650 015F                     l1722 020E                     l1714 01F3  
                   l1706 01DF                     l1618 0291                     l1562 0280  
                   l1810 00CA                     l1802 004A                     l1546 044A  
                   l1554 0419                     l1642 0436                     l1386 02E7  
                   l1378 02D0                     l1660 0171                     l1652 0162  
                   l1716 01F7                     l1708 01E5                     l1724 0214  
                   l1564 0281                     l1820 014D                     l1812 00CE  
                   l1804 004E                     l1548 044B                     l1556 041E  
                   l1740 033E                     l1732 0334                     l1644 0437  
                   l1670 0185                     l1662 0176                     l1654 0166  
                   l1726 0219                     l1718 0201                     l1582 0285  
                   l1822 0151                     l1814 00FB                     l1806 007B  
                   l1558 0426                     l1750 034C                     l1742 033F  
                   l1734 0338                     l1646 0438                     l1680 01AB  
                   l1672 018C                     l1664 017A                     l1656 016B  
                   l1728 021E                     l1576 0283                     l1824 0155  
                   l1816 0119                     l1808 0099                     l1760 0355  
                   l1752 034D                     l1744 0340                     l1736 0339  
                   l1648 0441                     l1840 0248                     l1832 0223  
                   l1690 01C3                     l1682 01AC                     l1674 0190  
                   l1666 017C                     l1658 016D                     l1594 0289  
                   l1826 0159                     l1818 0149                     l1770 0467  
                   l1762 035A                     l1754 034E                     l1746 0341  
                   l1738 033D                     l1922 02F4                     l1842 0252  
                   l1834 0238                     l1684 01B3                     l1676 0194  
                   l1668 0182                     l1924 029D                     l1588 0287  
                   l1828 015D                     l1772 02FD                     l1780 03A7  
                   l1764 035F                     l1756 034F                     l1748 0346  
                   l1844 025D                     l1836 0240                     l1678 01A5  
                   l1686 01B9                     l1694 01C8                     l1782 03AE  
                   l1774 0399                     l1766 0360                     l1758 0351  
                   l1790 0367                     l1846 0267                     l1838 0243  
                   l1688 01BE                     l1696 01CB                     l1784 03B4  
                   l1776 039E                     l1768 0363                     l1792 0368  
                   l1698 01CF                     l1786 03B9                     l1778 03A3  
                   l1794 0376                     l1788 03BD                     l1796 037E  
                   l1798 0385                     ?_isr 0070                     STR_1 03D4  
                   i1l73 03F6                     _TMR0 0001                     dat@b 0021  
                   cmd@a 0021                     _main 0223                     _show 0367  
                   btemp 007E                     start 000E                    ??_dat 0020  
                  ??_cmd 0020                    ??_isr 0072                    ?_main 0070  
        __end_of___awdiv 01C8          __end_of___awmod 0223                    ?_show 0043  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l118 0418  
                  i1l970 03FF                    i1l972 0400                    i1l974 0405  
                  i1l978 0408          ___awdiv@counter 0025                    _RCREG 001A  
                  u24_20 03E9                    u24_21 03E8                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _setup 0334                    pclath 000A                    show@s 0043  
          lcd_linea@temp 0025                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 027D             __end_of_show 0396  
                 ??_main 0046                   ??_show 0045     __size_of_datos_ascii 0041  
                 _ADRESH 001E         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l1110 03E9                   i1l1112 03ED  
                 i1l1114 03EE                   i1l1116 03F3                   i1l1108 03E3  
                 i1l1926 0410                   _SPBRGH 009A         __end_of_lcd_init 0334  
        lcd_ascii@random 0033                ??___awdiv 0024                ??___awmod 002D  
       ___awdiv@quotient 0027          ___awmod@divisor 0029          ___awmod@counter 002E  
           ?_uart_config 0070                   saved_w 007E  __end_of__initialization 0017  
       ??_recepcion_uart 0070           __pcstackCOMMON 0070               _adc_config 0419  
          __end_of_setup 0367           _OPTION_REGbits 0081       __size_of_lcd_clear 000D  
     __size_of_lcd_ascii 0144       __size_of_lcd_linea 002E                  ??_setup 0076  
             __pbssBANK0 0048               __pmaintext 0223               __pintentry 0004  
              ?_lcd_init 0070               __stringtab 03C4        __end_of_lcd_clear 0474  
      __end_of_lcd_ascii 015F        __end_of_lcd_linea 03C4              ?_adc_config 0070  
                ___awdiv 015F                  ___awmod 01C8                _ANSELbits 0188  
                __ptext1 02BE                  __ptext2 0367                  __ptext3 0431  
                __ptext4 0334                  __ptext5 0459                  __ptext6 0419  
                __ptext7 0396                  __ptext8 02FD                  __ptext9 0467  
           __size_of_dat 0014             __size_of_cmd 0014             __size_of_isr 001C  
       ___awmod@dividend 002B     __size_of_uart_config 000E               ??_lcd_init 0076  
   end_of_initialization 0017                _RCSTAbits 0018            ??_datos_ascii 0020  
             _toggle_adc 02BE                _TRISCbits 0087                _TRISDbits 0088  
    __size_of_adc_config 0018               lcd_linea@a 0024               lcd_linea@b 0022  
             lcd_linea@z 0026              _BAUDCTLbits 0187      start_initialization 0011  
    __end_of_datos_ascii 02BE              __end_of_dat 0445              __end_of_cmd 0459  
            __end_of_isr 03FF        datos_ascii@numero 0022              ?_toggle_adc 0070  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_init 0037             ??_adc_config 0020                 ?___awdiv 0020  
               ?___awmod 0029            _dato_recibido 0076                _lcd_clear 0467  
              _lcd_ascii 001B              _datos_ascii 027D                _lcd_linea 0396  
              __pstrings 03C4  __size_of_recepcion_uart 001A           __size_of_setup 0033  
     __end_of_adc_config 0431        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C      __size_of_toggle_adc 003F               ?_lcd_clear 0070  
             ?_lcd_ascii 0070               ?_lcd_linea 0022               _ADCON0bits 001F  
            __stringbase 03D3               _ADCON1bits 009F            ??_uart_config 0076  
            _cuenta_uart 0077              _conversion1 0049              _conversion2 0048  
       __size_of___awdiv 0069         __size_of___awmod 005B       __end_of__stringtab 03D4  
               __ptext10 0445                 __ptext11 001B                 __ptext12 027D  
               __ptext13 01C8                 __ptext14 015F                 __ptext15 03E3  
               __ptext16 03FF      __end_of_uart_config 0467                 _lcd_init 02FD  
          __size_of_main 005A            __size_of_show 002F              ??_lcd_clear 0076  
            ??_lcd_ascii 0030              ??_lcd_linea 0023           _recepcion_uart 03FF  
             _INTCONbits 000B             ??_toggle_adc 0020                 intlevel1 0000  
              stringcode 03CE               _OSCCONbits 008F       __end_of_toggle_adc 02FD  
 __end_of_recepcion_uart 0419             ?_datos_ascii 0070              _uart_config 0459  
               stringdir 03CE                 stringtab 03C4  
