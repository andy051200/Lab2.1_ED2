

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 29 04:30:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  001E                     _ADRESH	set	30
   457  000B                     _INTCONbits	set	11
   458  0001                     _TMR0	set	1
   459  0008                     _PORTD	set	8
   460  0006                     _PORTB	set	6
   461  001F                     _ADCON0bits	set	31
   462  001A                     _RCREG	set	26
   463  000C                     _PIR1bits	set	12
   464  0047                     _RD7	set	71
   465  0046                     _RD6	set	70
   466  0045                     _RD5	set	69
   467  009A                     _SPBRGH	set	154
   468  0099                     _SPBRG	set	153
   469  009F                     _ADCON1bits	set	159
   470  008C                     _PIE1bits	set	140
   471  0081                     _OPTION_REGbits	set	129
   472  008F                     _OSCCONbits	set	143
   473  0088                     _TRISDbits	set	136
   474  0087                     _TRISCbits	set	135
   475  0086                     _TRISB	set	134
   476  0187                     _BAUDCTLbits	set	391
   477  0188                     _ANSELbits	set	392
   478  0189                     _ANSELH	set	393
   479  0188                     _ANSEL	set	392
   480                           
   481                           	psect	strings
   482  03A3                     __pstrings:
   483  03A3                     stringtab:
   484  03A3                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  03A3  1BFF               	btfsc	btemp+1,7
   488  03A4  2BAD               	ljmp	stringcode
   489  03A5  1383               	bcf	3,7
   490  03A6  187F               	btfsc	btemp+1,0
   491  03A7  1783               	bsf	3,7
   492  03A8  0800               	movf	0,w
   493  03A9  0A84               	incf	4,f
   494  03AA  1903               	skipnz
   495  03AB  0AFF               	incf	btemp+1,f
   496  03AC  0008               	return
   497  03AD                     stringcode:
   498  03AD                     stringdir:
   499  03AD  3003               	movlw	high stringdir
   500  03AE  008A               	movwf	10
   501  03AF  0804               	movf	4,w
   502  03B0  0A84               	incf	4,f
   503  03B1  0782               	addwf	2,f
   504  03B2                     __stringbase:
   505  03B2  3400               	retlw	0
   506  03B3                     __end_of__stringtab:
   507  03B3                     STR_1:
   508  03B3  3420               	retlw	32	;' '
   509  03B4  3453               	retlw	83	;'S'
   510  03B5  3431               	retlw	49	;'1'
   511  03B6  3420               	retlw	32	;' '
   512  03B7  3420               	retlw	32	;' '
   513  03B8  3420               	retlw	32	;' '
   514  03B9  3453               	retlw	83	;'S'
   515  03BA  3432               	retlw	50	;'2'
   516  03BB  3420               	retlw	32	;' '
   517  03BC  3420               	retlw	32	;' '
   518  03BD  3420               	retlw	32	;' '
   519  03BE  3453               	retlw	83	;'S'
   520  03BF  3433               	retlw	51	;'3'
   521  03C0  3420               	retlw	32	;' '
   522  03C1  3400               	retlw	0
   523                           
   524                           	psect	cinit
   525  0011                     start_initialization:	
   526                           ; #config settings
   527                           
   528  0011                     __initialization:
   529                           
   530                           ; Clear objects allocated to COMMON
   531  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK0
   534  0012  1283               	bcf	3,5	;RP0=0, select bank0
   535  0013  1303               	bcf	3,6	;RP1=0, select bank0
   536  0014  01C7               	clrf	__pbssBANK0& (0+127)
   537  0015  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   538  0016  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   539  0017                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  0017                     __end_of__initialization:
   543  0017  0183               	clrf	3
   544  0018  120A  118A  2A02   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  0077                     __pbssCOMMON:
   548  0077                     _dato_recibido:
   549  0077                     	ds	1
   550                           
   551                           	psect	bssBANK0
   552  0047                     __pbssBANK0:
   553  0047                     _cuenta_uart:
   554  0047                     	ds	1
   555  0048                     _conversion2:
   556  0048                     	ds	1
   557  0049                     _conversion1:
   558  0049                     	ds	1
   559                           
   560                           	psect	cstackCOMMON
   561  0070                     __pcstackCOMMON:
   562  0070                     ?_recepcion_uart:
   563  0070                     ??_recepcion_uart:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_setup:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_lcd_clear:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_lcd_init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_cmd:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_toggle_adc:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_lcd_ascii:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_adc_config:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_uart_config:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_isr:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_main:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_datos_ascii:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_dat:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604  0070                     	ds	2
   605  0072                     ??_isr:
   606                           
   607                           ; 1 bytes @ 0x2
   608  0072                     	ds	4
   609  0076                     ??_cmd:
   610  0076                     ??_adc_config:	
   611                           ; 1 bytes @ 0x6
   612                           
   613  0076                     ??_uart_config:	
   614                           ; 1 bytes @ 0x6
   615                           
   616  0076                     ??_dat:	
   617                           ; 1 bytes @ 0x6
   618                           
   619  0076                     ??___awdiv:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  0076                     datos_ascii@numero:	
   623                           ; 1 bytes @ 0x6
   624                           
   625                           
   626                           ; 1 bytes @ 0x6
   627  0076                     	ds	1
   628  0077                     ??_setup:
   629  0077                     ??_lcd_clear:	
   630                           ; 1 bytes @ 0x7
   631                           
   632  0077                     ??_lcd_init:	
   633                           ; 1 bytes @ 0x7
   634                           
   635                           
   636                           	psect	cstackBANK0
   637  0020                     __pcstackBANK0:	
   638                           ; 1 bytes @ 0x7
   639                           
   640  0020                     ??_toggle_adc:
   641  0020                     ??_datos_ascii:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0020                     ?___awdiv:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0020                     cmd@a:	
   648                           ; 2 bytes @ 0x0
   649                           
   650  0020                     dat@b:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0020                     ___awdiv@divisor:	
   654                           ; 1 bytes @ 0x0
   655                           
   656                           
   657                           ; 2 bytes @ 0x0
   658  0020                     	ds	1
   659  0021                     ?_lcd_linea:
   660  0021                     lcd_linea@b:	
   661                           ; 1 bytes @ 0x1
   662                           
   663                           
   664                           ; 1 bytes @ 0x1
   665  0021                     	ds	1
   666  0022                     ??_lcd_linea:
   667  0022                     ___awdiv@dividend:	
   668                           ; 1 bytes @ 0x2
   669                           
   670                           
   671                           ; 2 bytes @ 0x2
   672  0022                     	ds	1
   673  0023                     lcd_linea@a:
   674                           
   675                           ; 1 bytes @ 0x3
   676  0023                     	ds	1
   677  0024                     lcd_linea@temp:
   678  0024                     ___awdiv@counter:	
   679                           ; 1 bytes @ 0x4
   680                           
   681                           
   682                           ; 1 bytes @ 0x4
   683  0024                     	ds	1
   684  0025                     lcd_linea@z:
   685  0025                     ___awdiv@sign:	
   686                           ; 1 bytes @ 0x5
   687                           
   688                           
   689                           ; 1 bytes @ 0x5
   690  0025                     	ds	1
   691  0026                     ___awdiv@quotient:
   692                           
   693                           ; 2 bytes @ 0x6
   694  0026                     	ds	2
   695  0028                     ?___awmod:
   696  0028                     ___awmod@divisor:	
   697                           ; 2 bytes @ 0x8
   698                           
   699                           
   700                           ; 2 bytes @ 0x8
   701  0028                     	ds	2
   702  002A                     ___awmod@dividend:
   703                           
   704                           ; 2 bytes @ 0xA
   705  002A                     	ds	2
   706  002C                     ??___awmod:
   707                           
   708                           ; 1 bytes @ 0xC
   709  002C                     	ds	1
   710  002D                     ___awmod@counter:
   711                           
   712                           ; 1 bytes @ 0xD
   713  002D                     	ds	1
   714  002E                     ___awmod@sign:
   715                           
   716                           ; 1 bytes @ 0xE
   717  002E                     	ds	1
   718  002F                     ??_lcd_ascii:
   719                           
   720                           ; 1 bytes @ 0xF
   721  002F                     	ds	3
   722  0032                     lcd_ascii@random:
   723                           
   724                           ; 16 bytes @ 0x12
   725  0032                     	ds	16
   726  0042                     ?_show:
   727  0042                     show@s:	
   728                           ; 1 bytes @ 0x22
   729                           
   730                           
   731                           ; 2 bytes @ 0x22
   732  0042                     	ds	2
   733  0044                     ??_show:
   734                           
   735                           ; 1 bytes @ 0x24
   736  0044                     	ds	1
   737  0045                     ??_main:
   738                           
   739                           ; 1 bytes @ 0x25
   740  0045                     	ds	2
   741                           
   742                           	psect	maintext
   743  0202                     __pmaintext:	
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 79 in file "main_.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B00/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       2       0       0       0
   766 ;;      Totals:         0       2       0       0       0
   767 ;;Total ram usage:        2 bytes
   768 ;; Hardware stack levels required when called:    4
   769 ;; This function calls:
   770 ;;		_cmd
   771 ;;		_lcd_ascii
   772 ;;		_lcd_clear
   773 ;;		_lcd_init
   774 ;;		_lcd_linea
   775 ;;		_setup
   776 ;;		_show
   777 ;;		_toggle_adc
   778 ;; This function is called by:
   779 ;;		Startup code after reset
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           
   784                           ;psect for function _main
   785  0202                     _main:
   786  0202                     l1761:	
   787                           ;incstack = 0
   788                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   789                           
   790                           
   791                           ;main_.c: 81:     setup();
   792  0202  120A  118A  2313  120A  118A  	fcall	_setup
   793                           
   794                           ;main_.c: 83:     lcd_clear();
   795  0207  120A  118A  2443  120A  118A  	fcall	_lcd_clear
   796                           
   797                           ;main_.c: 84:     lcd_init();
   798  020C  120A  118A  22DC  120A  118A  	fcall	_lcd_init
   799                           
   800                           ;main_.c: 85:  cmd(0x90);
   801  0211  3090               	movlw	144
   802  0212  120A  118A  2422  120A  118A  	fcall	_cmd
   803  0217                     l1763:
   804                           
   805                           ;main_.c: 86:     _delay((unsigned long)((1)*(4000000/4000.0)));
   806  0217  30C7               	movlw	199
   807  0218  1283               	bcf	3,5	;RP0=0, select bank0
   808  0219  1303               	bcf	3,6	;RP1=0, select bank0
   809  021A  00C5               	movwf	??_main
   810  021B                     u617:
   811  021B  2A1C               	nop2
   812  021C  0BC5               	decfsz	??_main,f
   813  021D  2A1B               	goto	u617
   814  021E  2A1F               	nop2
   815  021F                     l1765:
   816                           
   817                           ;main_.c: 87:     ADCON0bits.GO=1;
   818  021F  1283               	bcf	3,5	;RP0=0, select bank0
   819  0220  1303               	bcf	3,6	;RP1=0, select bank0
   820  0221  149F               	bsf	31,1	;volatile
   821  0222                     l1767:
   822                           
   823                           ;main_.c: 89:     {;main_.c: 91:         toggle_adc();
   824  0222  120A  118A  229D  120A  118A  	fcall	_toggle_adc
   825  0227                     l1769:
   826                           
   827                           ;main_.c: 95:         lcd_linea(1,1);
   828  0227  1283               	bcf	3,5	;RP0=0, select bank0
   829  0228  1303               	bcf	3,6	;RP1=0, select bank0
   830  0229  01A1               	clrf	lcd_linea@b
   831  022A  0AA1               	incf	lcd_linea@b,f
   832  022B  3001               	movlw	1
   833  022C  120A  118A  2375  120A  118A  	fcall	_lcd_linea
   834  0231                     l1771:
   835                           
   836                           ;main_.c: 96:         show(" S1   S2   S3 ");
   837  0231  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   838  0232  1283               	bcf	3,5	;RP0=0, select bank0
   839  0233  1303               	bcf	3,6	;RP1=0, select bank0
   840  0234  00C2               	movwf	show@s
   841  0235  3080               	movlw	128
   842  0236  00C3               	movwf	show@s+1
   843  0237  120A  118A  2346  120A  118A  	fcall	_show
   844  023C                     l1773:
   845                           
   846                           ;main_.c: 97:         lcd_linea(2,1);
   847  023C  1283               	bcf	3,5	;RP0=0, select bank0
   848  023D  1303               	bcf	3,6	;RP1=0, select bank0
   849  023E  01A1               	clrf	lcd_linea@b
   850  023F  0AA1               	incf	lcd_linea@b,f
   851  0240  3002               	movlw	2
   852  0241  120A  118A  2375  120A  118A  	fcall	_lcd_linea
   853  0246                     l1775:
   854                           
   855                           ;main_.c: 98:         show(lcd_ascii());
   856  0246  120A  118A  201B  120A  118A  	fcall	_lcd_ascii
   857  024B  1283               	bcf	3,5	;RP0=0, select bank0
   858  024C  1303               	bcf	3,6	;RP1=0, select bank0
   859  024D  00C5               	movwf	??_main
   860  024E  01C6               	clrf	??_main+1
   861  024F  0845               	movf	??_main,w
   862  0250  00C2               	movwf	show@s
   863  0251  0846               	movf	??_main+1,w
   864  0252  00C3               	movwf	show@s+1
   865  0253  120A  118A  2346  120A  118A  	fcall	_show
   866  0258  2A22               	goto	l1767
   867  0259  120A  118A  280E   	ljmp	start
   868  025C                     __end_of_main:
   869                           
   870                           	psect	text1
   871  029D                     __ptext1:	
   872 ;; *************** function _toggle_adc *****************
   873 ;; Defined at:
   874 ;;		line 151 in file "main_.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       3       0       0       0
   891 ;;      Totals:         0       3       0       0       0
   892 ;;Total ram usage:        3 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    2
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _toggle_adc
   904  029D                     _toggle_adc:
   905  029D                     l1383:	
   906                           ;incstack = 0
   907                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   908                           
   909                           
   910                           ;main_.c: 153:     if (ADCON0bits.GO==0)
   911  029D  1283               	bcf	3,5	;RP0=0, select bank0
   912  029E  1303               	bcf	3,6	;RP1=0, select bank0
   913  029F  189F               	btfsc	31,1	;volatile
   914  02A0  2AA2               	goto	u441
   915  02A1  2AA3               	goto	u440
   916  02A2                     u441:
   917  02A2  2ADB               	goto	l91
   918  02A3                     u440:
   919  02A3  2AC8               	goto	l1401
   920  02A4                     l1387:
   921                           
   922                           ;main_.c: 158:                 conversion1=ADRESH;
   923  02A4  081E               	movf	30,w	;volatile
   924  02A5  00A0               	movwf	??_toggle_adc
   925  02A6  0820               	movf	??_toggle_adc,w
   926  02A7  00C9               	movwf	_conversion1
   927                           
   928                           ;main_.c: 159:                 _delay((unsigned long)((500)*(4000000/4000000.0)));
   929  02A8  30A5               	movlw	165
   930  02A9  1283               	bcf	3,5	;RP0=0, select bank0
   931  02AA  1303               	bcf	3,6	;RP1=0, select bank0
   932  02AB  00A0               	movwf	??_toggle_adc
   933  02AC                     u627:
   934  02AC  0BA0               	decfsz	??_toggle_adc,f
   935  02AD  2AAC               	goto	u627
   936  02AE  2AAF               	nop2
   937  02AF                     l1389:
   938                           
   939                           ;main_.c: 160:                 ADCON0bits.CHS=1;
   940  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   941  02B0  1303               	bcf	3,6	;RP1=0, select bank0
   942  02B1  081F               	movf	31,w	;volatile
   943  02B2  39C3               	andlw	-61
   944  02B3  3804               	iorlw	4
   945  02B4  009F               	movwf	31	;volatile
   946  02B5                     l1391:
   947                           
   948                           ;main_.c: 161:                 ADCON0bits.GO=1;
   949  02B5  149F               	bsf	31,1	;volatile
   950                           
   951                           ;main_.c: 162:                 break;
   952  02B6  2ADB               	goto	l91
   953  02B7                     l1393:
   954                           
   955                           ;main_.c: 165:                 conversion2=ADRESH;
   956  02B7  081E               	movf	30,w	;volatile
   957  02B8  00A0               	movwf	??_toggle_adc
   958  02B9  0820               	movf	??_toggle_adc,w
   959  02BA  00C8               	movwf	_conversion2
   960                           
   961                           ;main_.c: 166:                 _delay((unsigned long)((500)*(4000000/4000000.0)));
   962  02BB  30A5               	movlw	165
   963  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   964  02BD  1303               	bcf	3,6	;RP1=0, select bank0
   965  02BE  00A0               	movwf	??_toggle_adc
   966  02BF                     u637:
   967  02BF  0BA0               	decfsz	??_toggle_adc,f
   968  02C0  2ABF               	goto	u637
   969  02C1  2AC2               	nop2
   970  02C2                     l1395:
   971                           
   972                           ;main_.c: 167:                 ADCON0bits.CHS=0;
   973  02C2  30C3               	movlw	-61
   974  02C3  1283               	bcf	3,5	;RP0=0, select bank0
   975  02C4  1303               	bcf	3,6	;RP1=0, select bank0
   976  02C5  059F               	andwf	31,f	;volatile
   977  02C6                     l1397:
   978                           
   979                           ;main_.c: 168:                 ADCON0bits.GO=1;
   980  02C6  149F               	bsf	31,1	;volatile
   981                           
   982                           ;main_.c: 169:                 break;
   983  02C7  2ADB               	goto	l91
   984  02C8                     l1401:
   985  02C8  0C1F               	rrf	31,w	;volatile
   986  02C9  00A0               	movwf	??_toggle_adc
   987  02CA  0C20               	rrf	??_toggle_adc,w
   988  02CB  390F               	andlw	15
   989  02CC  00A1               	movwf	??_toggle_adc+1
   990  02CD  01A2               	clrf	??_toggle_adc+2
   991                           
   992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   993                           ; Switch size 1, requested type "simple"
   994                           ; Number of cases is 1, Range of values is 0 to 0
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte            4     3 (average)
   998                           ; direct_byte           11     8 (fixed)
   999                           ; jumptable            260     6 (fixed)
  1000                           ;	Chosen strategy is simple_byte
  1001  02CE  0822               	movf	??_toggle_adc+2,w
  1002  02CF  3A00               	xorlw	0	; case 0
  1003  02D0  1903               	skipnz
  1004  02D1  2AD3               	goto	l1851
  1005  02D2  2ADB               	goto	l91
  1006  02D3                     l1851:
  1007                           
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 2, Range of values is 0 to 1
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            7     4 (average)
  1013                           ; direct_byte           14     8 (fixed)
  1014                           ; jumptable            260     6 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016  02D3  0821               	movf	??_toggle_adc+1,w
  1017  02D4  3A00               	xorlw	0	; case 0
  1018  02D5  1903               	skipnz
  1019  02D6  2AA4               	goto	l1387
  1020  02D7  3A01               	xorlw	1	; case 1
  1021  02D8  1903               	skipnz
  1022  02D9  2AB7               	goto	l1393
  1023  02DA  2ADB               	goto	l91
  1024  02DB                     l91:
  1025  02DB  0008               	return
  1026  02DC                     __end_of_toggle_adc:
  1027                           
  1028                           	psect	text2
  1029  0346                     __ptext2:	
  1030 ;; *************** function _show *****************
  1031 ;; Defined at:
  1032 ;;		line 72 in file "LCD.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  s               2   34[BANK0 ] PTR unsigned char 
  1035 ;;		 -> RAM(512), STR_1(15), 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       2       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          0       1       0       0       0
  1050 ;;      Totals:         0       3       0       0       0
  1051 ;;Total ram usage:        3 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    3
  1054 ;; This function calls:
  1055 ;;		_dat
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _show
  1063  0346                     _show:
  1064  0346                     l1719:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1067                           
  1068                           
  1069                           ;LCD.c: 72: void show(unsigned char *s);LCD.c: 73: {;LCD.c: 74:  while(*s) {
  1070  0346  2B64               	goto	l1727
  1071  0347                     l1721:
  1072                           
  1073                           ;LCD.c: 75:   dat(*s++);
  1074  0347  0843               	movf	show@s+1,w
  1075  0348  00FF               	movwf	btemp+1
  1076  0349  0842               	movf	show@s,w
  1077  034A  0084               	movwf	4
  1078  034B  120A  118A  23A3  120A  118A  	fcall	stringtab
  1079  0350  120A  118A  240F  120A  118A  	fcall	_dat
  1080  0355                     l1723:
  1081  0355  3001               	movlw	1
  1082  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0358  07C2               	addwf	show@s,f
  1085  0359  1803               	skipnc
  1086  035A  0AC3               	incf	show@s+1,f
  1087  035B  3000               	movlw	0
  1088  035C  07C3               	addwf	show@s+1,f
  1089  035D                     l1725:
  1090                           
  1091                           ;LCD.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1092  035D  300C               	movlw	12
  1093  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1094  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0360  00C4               	movwf	??_show
  1096  0361                     u647:
  1097  0361  0BC4               	decfsz	??_show,f
  1098  0362  2B61               	goto	u647
  1099  0363  0000               	nop
  1100  0364                     l1727:
  1101                           
  1102                           ;LCD.c: 74:  while(*s) {
  1103  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0366  0843               	movf	show@s+1,w
  1106  0367  00FF               	movwf	btemp+1
  1107  0368  0842               	movf	show@s,w
  1108  0369  0084               	movwf	4
  1109  036A  120A  118A  23A3  120A  118A  	fcall	stringtab
  1110  036F  3A00               	xorlw	0
  1111  0370  1D03               	skipz
  1112  0371  2B73               	goto	u601
  1113  0372  2B74               	goto	u600
  1114  0373                     u601:
  1115  0373  2B47               	goto	l1721
  1116  0374                     u600:
  1117  0374                     l147:
  1118  0374  0008               	return
  1119  0375                     __end_of_show:
  1120                           
  1121                           	psect	text3
  1122  040F                     __ptext3:	
  1123 ;; *************** function _dat *****************
  1124 ;; Defined at:
  1125 ;;		line 61 in file "LCD.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  b               1    wreg     unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  b               1    0[BANK0 ] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       1       0       0       0
  1141 ;;      Temps:          1       0       0       0       0
  1142 ;;      Totals:         1       1       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    2
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_show
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _dat
  1155  040F                     _dat:
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _dat: [wreg]
  1159                           ;dat@b stored from wreg
  1160  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0411  00A0               	movwf	dat@b
  1163  0412                     l1651:
  1164                           
  1165                           ;LCD.c: 61: void dat(unsigned char b);LCD.c: 62: {;LCD.c: 63:  PORTB=b;
  1166  0412  0820               	movf	dat@b,w
  1167  0413  0086               	movwf	6	;volatile
  1168  0414                     l1653:
  1169                           
  1170                           ;LCD.c: 64:  RD5=1;
  1171  0414  1688               	bsf	8,5	;volatile
  1172  0415                     l1655:
  1173                           
  1174                           ;LCD.c: 65:  RD6=0;
  1175  0415  1308               	bcf	8,6	;volatile
  1176  0416                     l1657:
  1177                           
  1178                           ;LCD.c: 66:  RD7=1;
  1179  0416  1788               	bsf	8,7	;volatile
  1180                           
  1181                           ;LCD.c: 67:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1182  0417  30C7               	movlw	199
  1183  0418  00F6               	movwf	??_dat
  1184  0419                     u657:
  1185  0419  2C1A               	nop2
  1186  041A  0BF6               	decfsz	??_dat,f
  1187  041B  2C19               	goto	u657
  1188  041C  2C1D               	nop2
  1189  041D  2C1E               	nop2
  1190  041E                     l1659:
  1191                           
  1192                           ;LCD.c: 68:  RD7=0;
  1193  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1194  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0420  1388               	bcf	8,7	;volatile
  1196  0421                     l141:
  1197  0421  0008               	return
  1198  0422                     __end_of_dat:
  1199                           
  1200                           	psect	text4
  1201  0313                     __ptext4:	
  1202 ;; *************** function _setup *****************
  1203 ;; Defined at:
  1204 ;;		line 105 in file "main_.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    3
  1225 ;; This function calls:
  1226 ;;		_adc_config
  1227 ;;		_uart_config
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _setup
  1235  0313                     _setup:
  1236  0313                     l983:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1239                           
  1240                           
  1241                           ;main_.c: 108:     ANSEL=0;
  1242  0313  1683               	bsf	3,5	;RP0=1, select bank3
  1243  0314  1703               	bsf	3,6	;RP1=1, select bank3
  1244  0315  0188               	clrf	8	;volatile
  1245                           
  1246                           ;main_.c: 109:     ANSELH=0;
  1247  0316  0189               	clrf	9	;volatile
  1248  0317                     l985:
  1249                           
  1250                           ;main_.c: 110:     ANSELbits.ANS0=1;
  1251  0317  1408               	bsf	8,0	;volatile
  1252  0318                     l987:
  1253                           
  1254                           ;main_.c: 111:     ANSELbits.ANS1=1;
  1255  0318  1488               	bsf	8,1	;volatile
  1256                           
  1257                           ;main_.c: 114:     TRISB=0;
  1258  0319  1683               	bsf	3,5	;RP0=1, select bank1
  1259  031A  1303               	bcf	3,6	;RP1=0, select bank1
  1260  031B  0186               	clrf	6	;volatile
  1261  031C                     l989:
  1262                           
  1263                           ;main_.c: 115:     TRISCbits.TRISC6=0;
  1264  031C  1307               	bcf	7,6	;volatile
  1265  031D                     l991:
  1266                           
  1267                           ;main_.c: 116:     TRISCbits.TRISC7=1;
  1268  031D  1787               	bsf	7,7	;volatile
  1269  031E                     l993:
  1270                           
  1271                           ;main_.c: 118:     TRISDbits.TRISD5=0;
  1272  031E  1288               	bcf	8,5	;volatile
  1273  031F                     l995:
  1274                           
  1275                           ;main_.c: 119:     TRISDbits.TRISD6=0;
  1276  031F  1308               	bcf	8,6	;volatile
  1277  0320                     l997:
  1278                           
  1279                           ;main_.c: 120:     TRISDbits.TRISD7=0;
  1280  0320  1388               	bcf	8,7	;volatile
  1281                           
  1282                           ;main_.c: 123:     PORTB=0;
  1283  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0323  0186               	clrf	6	;volatile
  1286                           
  1287                           ;main_.c: 124:     PORTD=0;
  1288  0324  0188               	clrf	8	;volatile
  1289  0325                     l999:
  1290                           
  1291                           ;main_.c: 127:     OSCCONbits.IRCF=0b110;
  1292  0325  1683               	bsf	3,5	;RP0=1, select bank1
  1293  0326  1303               	bcf	3,6	;RP1=0, select bank1
  1294  0327  080F               	movf	15,w	;volatile
  1295  0328  398F               	andlw	-113
  1296  0329  3860               	iorlw	96
  1297  032A  008F               	movwf	15	;volatile
  1298  032B                     l1001:
  1299                           
  1300                           ;main_.c: 128:     OSCCONbits.SCS=1;
  1301  032B  140F               	bsf	15,0	;volatile
  1302  032C                     l1003:
  1303                           
  1304                           ;main_.c: 131:     OPTION_REGbits.T0CS = 0;
  1305  032C  1281               	bcf	1,5	;volatile
  1306  032D                     l1005:
  1307                           
  1308                           ;main_.c: 132:     OPTION_REGbits.PSA = 0;
  1309  032D  1181               	bcf	1,3	;volatile
  1310  032E                     l1007:
  1311                           
  1312                           ;main_.c: 133:     OPTION_REGbits.PS = 0b111;
  1313  032E  3007               	movlw	7
  1314  032F  0481               	iorwf	1,f	;volatile
  1315  0330                     l1009:
  1316                           
  1317                           ;main_.c: 134:     TMR0 = 25;
  1318  0330  3019               	movlw	25
  1319  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0333  0081               	movwf	1	;volatile
  1322  0334                     l1011:
  1323                           
  1324                           ;main_.c: 136:     adc_config();
  1325  0334  120A  118A  23F9  120A  118A  	fcall	_adc_config
  1326  0339                     l1013:
  1327                           
  1328                           ;main_.c: 139:     uart_config();
  1329  0339  120A  118A  2435  120A  118A  	fcall	_uart_config
  1330  033E                     l1015:
  1331                           
  1332                           ;main_.c: 142:     INTCONbits.GIE=1;
  1333  033E  178B               	bsf	11,7	;volatile
  1334  033F                     l1017:
  1335                           
  1336                           ;main_.c: 143:     PIE1bits.RCIE=1;
  1337  033F  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0340  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0341  168C               	bsf	12,5	;volatile
  1340  0342                     l1019:
  1341                           
  1342                           ;main_.c: 144:     PIR1bits.RCIF=0;
  1343  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0344  128C               	bcf	12,5	;volatile
  1346  0345                     l83:
  1347  0345  0008               	return
  1348  0346                     __end_of_setup:
  1349                           
  1350                           	psect	text5
  1351  0435                     __ptext5:	
  1352 ;; *************** function _uart_config *****************
  1353 ;; Defined at:
  1354 ;;		line 19 in file "UART_CONFIG.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0
  1371 ;;      Totals:         0       0       0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    2
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_setup
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _uart_config
  1384  0435                     _uart_config:
  1385  0435                     l789:	
  1386                           ;incstack = 0
  1387                           ; Regs used in _uart_config: [wreg+status,2]
  1388                           
  1389                           
  1390                           ;UART_CONFIG.c: 23:     BAUDCTLbits.BRG16 = 1;
  1391  0435  1683               	bsf	3,5	;RP0=1, select bank3
  1392  0436  1703               	bsf	3,6	;RP1=1, select bank3
  1393  0437  1587               	bsf	7,3	;volatile
  1394  0438                     l791:
  1395                           
  1396                           ;UART_CONFIG.c: 24:     SPBRG = 103;
  1397  0438  3067               	movlw	103
  1398  0439  1683               	bsf	3,5	;RP0=1, select bank1
  1399  043A  1303               	bcf	3,6	;RP1=0, select bank1
  1400  043B  0099               	movwf	25	;volatile
  1401  043C                     l793:
  1402                           
  1403                           ;UART_CONFIG.c: 25:     SPBRGH = 0;
  1404  043C  019A               	clrf	26	;volatile
  1405  043D                     l795:
  1406                           
  1407                           ;UART_CONFIG.c: 27:     RCSTAbits.SPEN = 1;
  1408  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1409  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1410  043F  1798               	bsf	24,7	;volatile
  1411  0440                     l797:
  1412                           
  1413                           ;UART_CONFIG.c: 28:     RCSTAbits.RX9 = 0;
  1414  0440  1318               	bcf	24,6	;volatile
  1415  0441                     l799:
  1416                           
  1417                           ;UART_CONFIG.c: 30:     RCSTAbits.CREN = 1;
  1418  0441  1618               	bsf	24,4	;volatile
  1419  0442                     l179:
  1420  0442  0008               	return
  1421  0443                     __end_of_uart_config:
  1422                           
  1423                           	psect	text6
  1424  03F9                     __ptext6:	
  1425 ;; *************** function _adc_config *****************
  1426 ;; Defined at:
  1427 ;;		line 22 in file "ADC_CONFIG.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0
  1443 ;;      Temps:          1       0       0       0       0
  1444 ;;      Totals:         1       0       0       0       0
  1445 ;;Total ram usage:        1 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    2
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_setup
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _adc_config
  1457  03F9                     _adc_config:
  1458  03F9                     l781:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1461                           
  1462                           
  1463                           ;ADC_CONFIG.c: 25:     ADCON1bits.ADFM = 0 ;
  1464  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  1465  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  1466  03FB  139F               	bcf	31,7	;volatile
  1467                           
  1468                           ;ADC_CONFIG.c: 26:     ADCON1bits.VCFG0 = 0 ;
  1469  03FC  121F               	bcf	31,4	;volatile
  1470                           
  1471                           ;ADC_CONFIG.c: 27:     ADCON1bits.VCFG1 = 0 ;
  1472  03FD  129F               	bcf	31,5	;volatile
  1473  03FE                     l783:
  1474                           
  1475                           ;ADC_CONFIG.c: 29:     ADCON0bits.ADCS = 0b01;
  1476  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1477  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0400  081F               	movf	31,w	;volatile
  1479  0401  393F               	andlw	-193
  1480  0402  3840               	iorlw	64
  1481  0403  009F               	movwf	31	;volatile
  1482                           
  1483                           ;ADC_CONFIG.c: 30:     ADCON0bits.CHS = 0;
  1484  0404  30C3               	movlw	-61
  1485  0405  059F               	andwf	31,f	;volatile
  1486  0406                     l785:
  1487                           
  1488                           ;ADC_CONFIG.c: 31:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1489  0406  3010               	movlw	16
  1490  0407  00F6               	movwf	??_adc_config
  1491  0408                     u667:
  1492  0408  0BF6               	decfsz	??_adc_config,f
  1493  0409  2C08               	goto	u667
  1494  040A  0000               	nop
  1495  040B                     l787:
  1496                           
  1497                           ;ADC_CONFIG.c: 32:     ADCON0bits.ADON = 1 ;
  1498  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1499  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1500  040D  141F               	bsf	31,0	;volatile
  1501  040E                     l168:
  1502  040E  0008               	return
  1503  040F                     __end_of_adc_config:
  1504                           
  1505                           	psect	text7
  1506  0375                     __ptext7:	
  1507 ;; *************** function _lcd_linea *****************
  1508 ;; Defined at:
  1509 ;;		line 81 in file "LCD.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  a               1    wreg     unsigned char 
  1512 ;;  b               1    1[BANK0 ] unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  a               1    3[BANK0 ] unsigned char 
  1515 ;;  z               1    5[BANK0 ] unsigned char 
  1516 ;;  temp            1    4[BANK0 ] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       1       0       0       0
  1527 ;;      Locals:         0       3       0       0       0
  1528 ;;      Temps:          0       1       0       0       0
  1529 ;;      Totals:         0       5       0       0       0
  1530 ;;Total ram usage:        5 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		_cmd
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _lcd_linea
  1542  0375                     _lcd_linea:
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1546                           ;lcd_linea@a stored from wreg
  1547  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0377  00A3               	movwf	lcd_linea@a
  1550  0378                     l1703:
  1551                           
  1552                           ;LCD.c: 82:     char temp, z;;LCD.c: 83:     if (a == 1)
  1553  0378  0323               	decf	lcd_linea@a,w
  1554  0379  1D03               	btfss	3,2
  1555  037A  2B7C               	goto	u581
  1556  037B  2B7D               	goto	u580
  1557  037C                     u581:
  1558  037C  2B8D               	goto	l1711
  1559  037D                     u580:
  1560  037D                     l1705:
  1561                           
  1562                           ;LCD.c: 84:     {;LCD.c: 85:         temp = 0x80 + b - 1;
  1563  037D  0821               	movf	lcd_linea@b,w
  1564  037E  3E7F               	addlw	127
  1565  037F  00A2               	movwf	??_lcd_linea
  1566  0380  0822               	movf	??_lcd_linea,w
  1567  0381  00A4               	movwf	lcd_linea@temp
  1568  0382                     l1707:
  1569                           
  1570                           ;LCD.c: 86:         z = temp;
  1571  0382  0824               	movf	lcd_linea@temp,w
  1572  0383  00A2               	movwf	??_lcd_linea
  1573  0384  0822               	movf	??_lcd_linea,w
  1574  0385  00A5               	movwf	lcd_linea@z
  1575  0386                     l1709:
  1576                           
  1577                           ;LCD.c: 87:         cmd(z);
  1578  0386  0825               	movf	lcd_linea@z,w
  1579  0387  120A  118A  2422  120A  118A  	fcall	_cmd
  1580                           
  1581                           ;LCD.c: 89:     }
  1582  038C  2BA2               	goto	l153
  1583  038D                     l1711:
  1584  038D  3002               	movlw	2
  1585  038E  0623               	xorwf	lcd_linea@a,w
  1586  038F  1D03               	btfss	3,2
  1587  0390  2B92               	goto	u591
  1588  0391  2B93               	goto	u590
  1589  0392                     u591:
  1590  0392  2BA2               	goto	l153
  1591  0393                     u590:
  1592  0393                     l1713:
  1593                           
  1594                           ;LCD.c: 91:     {;LCD.c: 92:         temp = 0xC0 + b - 1;
  1595  0393  0821               	movf	lcd_linea@b,w
  1596  0394  3EBF               	addlw	191
  1597  0395  00A2               	movwf	??_lcd_linea
  1598  0396  0822               	movf	??_lcd_linea,w
  1599  0397  00A4               	movwf	lcd_linea@temp
  1600  0398                     l1715:
  1601                           
  1602                           ;LCD.c: 93:         z = temp;
  1603  0398  0824               	movf	lcd_linea@temp,w
  1604  0399  00A2               	movwf	??_lcd_linea
  1605  039A  0822               	movf	??_lcd_linea,w
  1606  039B  00A5               	movwf	lcd_linea@z
  1607  039C                     l1717:
  1608                           
  1609                           ;LCD.c: 94:         cmd(z);
  1610  039C  0825               	movf	lcd_linea@z,w
  1611  039D  120A  118A  2422  120A  118A  	fcall	_cmd
  1612  03A2                     l153:
  1613  03A2  0008               	return
  1614  03A3                     __end_of_lcd_linea:
  1615                           
  1616                           	psect	text8
  1617  02DC                     __ptext8:	
  1618 ;; *************** function _lcd_init *****************
  1619 ;; Defined at:
  1620 ;;		line 36 in file "LCD.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0
  1637 ;;      Totals:         0       0       0       0       0
  1638 ;;Total ram usage:        0 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    3
  1641 ;; This function calls:
  1642 ;;		_cmd
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _lcd_init
  1650  02DC                     _lcd_init:
  1651  02DC                     l1701:	
  1652                           ;incstack = 0
  1653                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1654                           
  1655                           
  1656                           ;LCD.c: 38:     cmd(0x30);
  1657  02DC  3030               	movlw	48
  1658  02DD  120A  118A  2422  120A  118A  	fcall	_cmd
  1659                           
  1660                           ;LCD.c: 39:  cmd(0x0C);
  1661  02E2  300C               	movlw	12
  1662  02E3  120A  118A  2422  120A  118A  	fcall	_cmd
  1663                           
  1664                           ;LCD.c: 40:  cmd(0x01);
  1665  02E8  3001               	movlw	1
  1666  02E9  120A  118A  2422  120A  118A  	fcall	_cmd
  1667                           
  1668                           ;LCD.c: 41:  cmd(0x06);
  1669  02EE  3006               	movlw	6
  1670  02EF  120A  118A  2422  120A  118A  	fcall	_cmd
  1671                           
  1672                           ;LCD.c: 42:  cmd(0x80);
  1673  02F4  3080               	movlw	128
  1674  02F5  120A  118A  2422  120A  118A  	fcall	_cmd
  1675                           
  1676                           ;LCD.c: 43:  cmd(0x38);
  1677  02FA  3038               	movlw	56
  1678  02FB  120A  118A  2422  120A  118A  	fcall	_cmd
  1679                           
  1680                           ;LCD.c: 44:  cmd(0x0c);
  1681  0300  300C               	movlw	12
  1682  0301  120A  118A  2422  120A  118A  	fcall	_cmd
  1683                           
  1684                           ;LCD.c: 45:  cmd(0x06);
  1685  0306  3006               	movlw	6
  1686  0307  120A  118A  2422  120A  118A  	fcall	_cmd
  1687                           
  1688                           ;LCD.c: 46:  cmd(0x80);
  1689  030C  3080               	movlw	128
  1690  030D  120A  118A  2422  120A  118A  	fcall	_cmd
  1691  0312                     l135:
  1692  0312  0008               	return
  1693  0313                     __end_of_lcd_init:
  1694                           
  1695                           	psect	text9
  1696  0443                     __ptext9:	
  1697 ;; *************** function _lcd_clear *****************
  1698 ;; Defined at:
  1699 ;;		line 29 in file "LCD.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    3
  1720 ;; This function calls:
  1721 ;;		_cmd
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _lcd_clear
  1729  0443                     _lcd_clear:
  1730  0443                     l1699:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1733                           
  1734                           
  1735                           ;LCD.c: 31:     cmd(0);
  1736  0443  3000               	movlw	0
  1737  0444  120A  118A  2422  120A  118A  	fcall	_cmd
  1738                           
  1739                           ;LCD.c: 32:     cmd(1);
  1740  0449  3001               	movlw	1
  1741  044A  120A  118A  2422  120A  118A  	fcall	_cmd
  1742  044F                     l132:
  1743  044F  0008               	return
  1744  0450                     __end_of_lcd_clear:
  1745                           
  1746                           	psect	text10
  1747  0422                     __ptext10:	
  1748 ;; *************** function _cmd *****************
  1749 ;; Defined at:
  1750 ;;		line 50 in file "LCD.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  a               1    wreg     unsigned char 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  a               1    0[BANK0 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1764 ;;      Params:         0       0       0       0       0
  1765 ;;      Locals:         0       1       0       0       0
  1766 ;;      Temps:          1       0       0       0       0
  1767 ;;      Totals:         1       1       0       0       0
  1768 ;;Total ram usage:        2 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    2
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;;		_lcd_clear
  1776 ;;		_lcd_init
  1777 ;;		_lcd_linea
  1778 ;;		_lcd_mov_derecha
  1779 ;;		_lcd_mov_izquierda
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _cmd
  1785  0422                     _cmd:
  1786                           
  1787                           ;incstack = 0
  1788                           ; Regs used in _cmd: [wreg]
  1789                           ;cmd@a stored from wreg
  1790  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0424  00A0               	movwf	cmd@a
  1793  0425                     l1563:
  1794                           
  1795                           ;LCD.c: 50: void cmd(unsigned char a);LCD.c: 51: {;LCD.c: 52:  PORTB=a;
  1796  0425  0820               	movf	cmd@a,w
  1797  0426  0086               	movwf	6	;volatile
  1798  0427                     l1565:
  1799                           
  1800                           ;LCD.c: 53:  RD5=0;
  1801  0427  1288               	bcf	8,5	;volatile
  1802  0428                     l1567:
  1803                           
  1804                           ;LCD.c: 54:  RD6=0;
  1805  0428  1308               	bcf	8,6	;volatile
  1806  0429                     l1569:
  1807                           
  1808                           ;LCD.c: 55:  RD7=1;
  1809  0429  1788               	bsf	8,7	;volatile
  1810                           
  1811                           ;LCD.c: 56:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1812  042A  30C7               	movlw	199
  1813  042B  00F6               	movwf	??_cmd
  1814  042C                     u677:
  1815  042C  2C2D               	nop2
  1816  042D  0BF6               	decfsz	??_cmd,f
  1817  042E  2C2C               	goto	u677
  1818  042F  2C30               	nop2
  1819  0430  2C31               	nop2
  1820  0431                     l1571:
  1821                           
  1822                           ;LCD.c: 57:  RD7=0;
  1823  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0433  1388               	bcf	8,7	;volatile
  1826  0434                     l138:
  1827  0434  0008               	return
  1828  0435                     __end_of_cmd:
  1829                           
  1830                           	psect	text11
  1831  001B                     __ptext11:	
  1832 ;; *************** function _lcd_ascii *****************
  1833 ;; Defined at:
  1834 ;;		line 229 in file "main_.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  random         16   18[BANK0 ] unsigned char [16]
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      unsigned char 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         0      16       0       0       0
  1850 ;;      Temps:          0       3       0       0       0
  1851 ;;      Totals:         0      19       0       0       0
  1852 ;;Total ram usage:       19 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    3
  1855 ;; This function calls:
  1856 ;;		___awdiv
  1857 ;;		___awmod
  1858 ;;		_datos_ascii
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _lcd_ascii
  1866  001B                     _lcd_ascii:
  1867  001B                     l1729:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1870                           
  1871                           
  1872                           ;main_.c: 231:     uint8_t random[16];;main_.c: 232:     random[0]=datos_ascii(((2*(conv
      +                          ersion1)/100)%10));
  1873  001B  300A               	movlw	10
  1874  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1875  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1876  001E  00A8               	movwf	___awmod@divisor
  1877  001F  3000               	movlw	0
  1878  0020  00A9               	movwf	___awmod@divisor+1
  1879  0021  3064               	movlw	100
  1880  0022  00A0               	movwf	___awdiv@divisor
  1881  0023  3000               	movlw	0
  1882  0024  00A1               	movwf	___awdiv@divisor+1
  1883  0025  0849               	movf	_conversion1,w
  1884  0026  00AF               	movwf	??_lcd_ascii
  1885  0027  01B0               	clrf	??_lcd_ascii+1
  1886  0028  1003               	clrc
  1887  0029  0D2F               	rlf	??_lcd_ascii,w
  1888  002A  00A2               	movwf	___awdiv@dividend
  1889  002B  0D30               	rlf	??_lcd_ascii+1,w
  1890  002C  00A3               	movwf	___awdiv@dividend+1
  1891  002D  120A  118A  213E  120A  118A  	fcall	___awdiv
  1892  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0034  0821               	movf	?___awdiv+1,w
  1895  0035  00AB               	movwf	___awmod@dividend+1
  1896  0036  0820               	movf	?___awdiv,w
  1897  0037  00AA               	movwf	___awmod@dividend
  1898  0038  120A  118A  21A7  120A  118A  	fcall	___awmod
  1899  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1900  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1901  003F  0828               	movf	?___awmod,w
  1902  0040  120A  118A  225C  120A  118A  	fcall	_datos_ascii
  1903  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0047  00B1               	movwf	??_lcd_ascii+2
  1906  0048  0831               	movf	??_lcd_ascii+2,w
  1907  0049  00B2               	movwf	lcd_ascii@random
  1908  004A                     l1731:
  1909                           
  1910                           ;main_.c: 233:     random[1]=0x2E;
  1911  004A  302E               	movlw	46
  1912  004B  00AF               	movwf	??_lcd_ascii
  1913  004C  082F               	movf	??_lcd_ascii,w
  1914  004D  00B3               	movwf	lcd_ascii@random+1
  1915  004E                     l1733:
  1916                           
  1917                           ;main_.c: 234:     random[2]=datos_ascii(((2*(conversion1)/100)%10));
  1918  004E  300A               	movlw	10
  1919  004F  00A8               	movwf	___awmod@divisor
  1920  0050  3000               	movlw	0
  1921  0051  00A9               	movwf	___awmod@divisor+1
  1922  0052  3064               	movlw	100
  1923  0053  00A0               	movwf	___awdiv@divisor
  1924  0054  3000               	movlw	0
  1925  0055  00A1               	movwf	___awdiv@divisor+1
  1926  0056  0849               	movf	_conversion1,w
  1927  0057  00AF               	movwf	??_lcd_ascii
  1928  0058  01B0               	clrf	??_lcd_ascii+1
  1929  0059  1003               	clrc
  1930  005A  0D2F               	rlf	??_lcd_ascii,w
  1931  005B  00A2               	movwf	___awdiv@dividend
  1932  005C  0D30               	rlf	??_lcd_ascii+1,w
  1933  005D  00A3               	movwf	___awdiv@dividend+1
  1934  005E  120A  118A  213E  120A  118A  	fcall	___awdiv
  1935  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0065  0821               	movf	?___awdiv+1,w
  1938  0066  00AB               	movwf	___awmod@dividend+1
  1939  0067  0820               	movf	?___awdiv,w
  1940  0068  00AA               	movwf	___awmod@dividend
  1941  0069  120A  118A  21A7  120A  118A  	fcall	___awmod
  1942  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1943  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0070  0828               	movf	?___awmod,w
  1945  0071  120A  118A  225C  120A  118A  	fcall	_datos_ascii
  1946  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0078  00B1               	movwf	??_lcd_ascii+2
  1949  0079  0831               	movf	??_lcd_ascii+2,w
  1950  007A  00B4               	movwf	lcd_ascii@random+2
  1951  007B                     l1735:
  1952                           
  1953                           ;main_.c: 235:     random[3]=datos_ascii((2*conversion1)%10);
  1954  007B  300A               	movlw	10
  1955  007C  00A8               	movwf	___awmod@divisor
  1956  007D  3000               	movlw	0
  1957  007E  00A9               	movwf	___awmod@divisor+1
  1958  007F  0849               	movf	_conversion1,w
  1959  0080  00AF               	movwf	??_lcd_ascii
  1960  0081  01B0               	clrf	??_lcd_ascii+1
  1961  0082  1003               	clrc
  1962  0083  0D2F               	rlf	??_lcd_ascii,w
  1963  0084  00AA               	movwf	___awmod@dividend
  1964  0085  0D30               	rlf	??_lcd_ascii+1,w
  1965  0086  00AB               	movwf	___awmod@dividend+1
  1966  0087  120A  118A  21A7  120A  118A  	fcall	___awmod
  1967  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1968  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1969  008E  0828               	movf	?___awmod,w
  1970  008F  120A  118A  225C  120A  118A  	fcall	_datos_ascii
  1971  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0096  00B1               	movwf	??_lcd_ascii+2
  1974  0097  0831               	movf	??_lcd_ascii+2,w
  1975  0098  00B5               	movwf	lcd_ascii@random+3
  1976  0099                     l1737:
  1977                           
  1978                           ;main_.c: 236:     random[4]=32;
  1979  0099  3020               	movlw	32
  1980  009A  00AF               	movwf	??_lcd_ascii
  1981  009B  082F               	movf	??_lcd_ascii,w
  1982  009C  00B6               	movwf	lcd_ascii@random+4
  1983                           
  1984                           ;main_.c: 237:     random[5]=datos_ascii(((2*(conversion2)/100)%10));
  1985  009D  300A               	movlw	10
  1986  009E  00A8               	movwf	___awmod@divisor
  1987  009F  3000               	movlw	0
  1988  00A0  00A9               	movwf	___awmod@divisor+1
  1989  00A1  3064               	movlw	100
  1990  00A2  00A0               	movwf	___awdiv@divisor
  1991  00A3  3000               	movlw	0
  1992  00A4  00A1               	movwf	___awdiv@divisor+1
  1993  00A5  0848               	movf	_conversion2,w
  1994  00A6  00AF               	movwf	??_lcd_ascii
  1995  00A7  01B0               	clrf	??_lcd_ascii+1
  1996  00A8  1003               	clrc
  1997  00A9  0D2F               	rlf	??_lcd_ascii,w
  1998  00AA  00A2               	movwf	___awdiv@dividend
  1999  00AB  0D30               	rlf	??_lcd_ascii+1,w
  2000  00AC  00A3               	movwf	___awdiv@dividend+1
  2001  00AD  120A  118A  213E  120A  118A  	fcall	___awdiv
  2002  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2003  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2004  00B4  0821               	movf	?___awdiv+1,w
  2005  00B5  00AB               	movwf	___awmod@dividend+1
  2006  00B6  0820               	movf	?___awdiv,w
  2007  00B7  00AA               	movwf	___awmod@dividend
  2008  00B8  120A  118A  21A7  120A  118A  	fcall	___awmod
  2009  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  2010  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  2011  00BF  0828               	movf	?___awmod,w
  2012  00C0  120A  118A  225C  120A  118A  	fcall	_datos_ascii
  2013  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  2014  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  2015  00C7  00B1               	movwf	??_lcd_ascii+2
  2016  00C8  0831               	movf	??_lcd_ascii+2,w
  2017  00C9  00B7               	movwf	lcd_ascii@random+5
  2018  00CA                     l1739:
  2019                           
  2020                           ;main_.c: 238:     random[6]=0x2E;
  2021  00CA  302E               	movlw	46
  2022  00CB  00AF               	movwf	??_lcd_ascii
  2023  00CC  082F               	movf	??_lcd_ascii,w
  2024  00CD  00B8               	movwf	lcd_ascii@random+6
  2025  00CE                     l1741:
  2026                           
  2027                           ;main_.c: 239:     random[7]=datos_ascii(((2*(conversion2)/100)%10));
  2028  00CE  300A               	movlw	10
  2029  00CF  00A8               	movwf	___awmod@divisor
  2030  00D0  3000               	movlw	0
  2031  00D1  00A9               	movwf	___awmod@divisor+1
  2032  00D2  3064               	movlw	100
  2033  00D3  00A0               	movwf	___awdiv@divisor
  2034  00D4  3000               	movlw	0
  2035  00D5  00A1               	movwf	___awdiv@divisor+1
  2036  00D6  0848               	movf	_conversion2,w
  2037  00D7  00AF               	movwf	??_lcd_ascii
  2038  00D8  01B0               	clrf	??_lcd_ascii+1
  2039  00D9  1003               	clrc
  2040  00DA  0D2F               	rlf	??_lcd_ascii,w
  2041  00DB  00A2               	movwf	___awdiv@dividend
  2042  00DC  0D30               	rlf	??_lcd_ascii+1,w
  2043  00DD  00A3               	movwf	___awdiv@dividend+1
  2044  00DE  120A  118A  213E  120A  118A  	fcall	___awdiv
  2045  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2046  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  2047  00E5  0821               	movf	?___awdiv+1,w
  2048  00E6  00AB               	movwf	___awmod@dividend+1
  2049  00E7  0820               	movf	?___awdiv,w
  2050  00E8  00AA               	movwf	___awmod@dividend
  2051  00E9  120A  118A  21A7  120A  118A  	fcall	___awmod
  2052  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2053  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2054  00F0  0828               	movf	?___awmod,w
  2055  00F1  120A  118A  225C  120A  118A  	fcall	_datos_ascii
  2056  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2057  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2058  00F8  00B1               	movwf	??_lcd_ascii+2
  2059  00F9  0831               	movf	??_lcd_ascii+2,w
  2060  00FA  00B9               	movwf	lcd_ascii@random+7
  2061  00FB                     l1743:
  2062                           
  2063                           ;main_.c: 240:     random[8]=datos_ascii((2*conversion2)%10);
  2064  00FB  300A               	movlw	10
  2065  00FC  00A8               	movwf	___awmod@divisor
  2066  00FD  3000               	movlw	0
  2067  00FE  00A9               	movwf	___awmod@divisor+1
  2068  00FF  0848               	movf	_conversion2,w
  2069  0100  00AF               	movwf	??_lcd_ascii
  2070  0101  01B0               	clrf	??_lcd_ascii+1
  2071  0102  1003               	clrc
  2072  0103  0D2F               	rlf	??_lcd_ascii,w
  2073  0104  00AA               	movwf	___awmod@dividend
  2074  0105  0D30               	rlf	??_lcd_ascii+1,w
  2075  0106  00AB               	movwf	___awmod@dividend+1
  2076  0107  120A  118A  21A7  120A  118A  	fcall	___awmod
  2077  010C  1283               	bcf	3,5	;RP0=0, select bank0
  2078  010D  1303               	bcf	3,6	;RP1=0, select bank0
  2079  010E  0828               	movf	?___awmod,w
  2080  010F  120A  118A  225C  120A  118A  	fcall	_datos_ascii
  2081  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0116  00B1               	movwf	??_lcd_ascii+2
  2084  0117  0831               	movf	??_lcd_ascii+2,w
  2085  0118  00BA               	movwf	lcd_ascii@random+8
  2086  0119                     l1745:
  2087                           
  2088                           ;main_.c: 241:     random[9]=32;
  2089  0119  3020               	movlw	32
  2090  011A  00AF               	movwf	??_lcd_ascii
  2091  011B  082F               	movf	??_lcd_ascii,w
  2092  011C  00BB               	movwf	lcd_ascii@random+9
  2093                           
  2094                           ;main_.c: 242:     random[10]=datos_ascii(cuenta_uart);
  2095  011D  0847               	movf	_cuenta_uart,w
  2096  011E  120A  118A  225C  120A  118A  	fcall	_datos_ascii
  2097  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0125  00AF               	movwf	??_lcd_ascii
  2100  0126  082F               	movf	??_lcd_ascii,w
  2101  0127  00BC               	movwf	lcd_ascii@random+10
  2102  0128                     l1747:
  2103                           
  2104                           ;main_.c: 243:     random[11]=32;
  2105  0128  3020               	movlw	32
  2106  0129  00AF               	movwf	??_lcd_ascii
  2107  012A  082F               	movf	??_lcd_ascii,w
  2108  012B  00BD               	movwf	lcd_ascii@random+11
  2109  012C                     l1749:
  2110                           
  2111                           ;main_.c: 244:     random[12]=32;
  2112  012C  3020               	movlw	32
  2113  012D  00AF               	movwf	??_lcd_ascii
  2114  012E  082F               	movf	??_lcd_ascii,w
  2115  012F  00BE               	movwf	lcd_ascii@random+12
  2116  0130                     l1751:
  2117                           
  2118                           ;main_.c: 245:     random[13]=32;
  2119  0130  3020               	movlw	32
  2120  0131  00AF               	movwf	??_lcd_ascii
  2121  0132  082F               	movf	??_lcd_ascii,w
  2122  0133  00BF               	movwf	lcd_ascii@random+13
  2123  0134                     l1753:
  2124                           
  2125                           ;main_.c: 246:     random[14]=32;
  2126  0134  3020               	movlw	32
  2127  0135  00AF               	movwf	??_lcd_ascii
  2128  0136  082F               	movf	??_lcd_ascii,w
  2129  0137  00C0               	movwf	lcd_ascii@random+14
  2130  0138                     l1755:
  2131                           
  2132                           ;main_.c: 247:     random[15]=32;
  2133  0138  3020               	movlw	32
  2134  0139  00AF               	movwf	??_lcd_ascii
  2135  013A  082F               	movf	??_lcd_ascii,w
  2136  013B  00C1               	movwf	lcd_ascii@random+15
  2137  013C                     l1757:
  2138                           
  2139                           ;main_.c: 248:     return random;
  2140  013C  3032               	movlw	(low lcd_ascii@random)& (0+255)
  2141  013D                     l110:
  2142  013D  0008               	return
  2143  013E                     __end_of_lcd_ascii:
  2144                           
  2145                           	psect	text12
  2146  025C                     __ptext12:	
  2147 ;; *************** function _datos_ascii *****************
  2148 ;; Defined at:
  2149 ;;		line 179 in file "main_.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  numero          1    wreg     unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  numero          1    6[COMMON] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      unsigned char 
  2156 ;; Registers used:
  2157 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         1       0       0       0       0
  2165 ;;      Temps:          0       2       0       0       0
  2166 ;;      Totals:         1       2       0       0       0
  2167 ;;Total ram usage:        3 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    2
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_lcd_ascii
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           
  2178                           ;psect for function _datos_ascii
  2179  025C                     _datos_ascii:
  2180                           
  2181                           ;incstack = 0
  2182                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2183                           ;datos_ascii@numero stored from wreg
  2184  025C  00F6               	movwf	datos_ascii@numero
  2185  025D                     l1573:
  2186                           
  2187                           ;main_.c: 179: unsigned char datos_ascii(uint8_t numero);main_.c: 180: {;main_.c: 181:  
      +                             switch(numero)
  2188  025D  2A72               	goto	l1643
  2189  025E                     l1575:
  2190                           
  2191                           ;main_.c: 184:             return 0x30;
  2192  025E  3030               	movlw	48
  2193  025F  2A9C               	goto	l96
  2194  0260                     l1587:
  2195                           
  2196                           ;main_.c: 191:             return 0x31;
  2197  0260  3031               	movlw	49
  2198  0261  2A9C               	goto	l96
  2199  0262                     l1593:
  2200                           
  2201                           ;main_.c: 195:             return 0x32;
  2202  0262  3032               	movlw	50
  2203  0263  2A9C               	goto	l96
  2204  0264                     l1599:
  2205                           
  2206                           ;main_.c: 199:             return 0x33;
  2207  0264  3033               	movlw	51
  2208  0265  2A9C               	goto	l96
  2209  0266                     l1605:
  2210                           
  2211                           ;main_.c: 203:             return 0x34;
  2212  0266  3034               	movlw	52
  2213  0267  2A9C               	goto	l96
  2214  0268                     l1611:
  2215                           
  2216                           ;main_.c: 207:             return 0x35;
  2217  0268  3035               	movlw	53
  2218  0269  2A9C               	goto	l96
  2219  026A                     l1617:
  2220                           
  2221                           ;main_.c: 211:             return 0x36;
  2222  026A  3036               	movlw	54
  2223  026B  2A9C               	goto	l96
  2224  026C                     l1623:
  2225                           
  2226                           ;main_.c: 215:             return 0x37;
  2227  026C  3037               	movlw	55
  2228  026D  2A9C               	goto	l96
  2229  026E                     l1629:
  2230                           
  2231                           ;main_.c: 219:             return 0x38;
  2232  026E  3038               	movlw	56
  2233  026F  2A9C               	goto	l96
  2234  0270                     l1635:
  2235                           
  2236                           ;main_.c: 223:             return 0x39;
  2237  0270  3039               	movlw	57
  2238  0271  2A9C               	goto	l96
  2239  0272                     l1643:
  2240  0272  0876               	movf	datos_ascii@numero,w
  2241  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0275  00A0               	movwf	??_datos_ascii
  2244  0276  01A1               	clrf	??_datos_ascii+1
  2245                           
  2246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2247                           ; Switch size 1, requested type "simple"
  2248                           ; Number of cases is 1, Range of values is 0 to 0
  2249                           ; switch strategies available:
  2250                           ; Name         Instructions Cycles
  2251                           ; simple_byte            4     3 (average)
  2252                           ; direct_byte           11     8 (fixed)
  2253                           ; jumptable            260     6 (fixed)
  2254                           ;	Chosen strategy is simple_byte
  2255  0277  0821               	movf	??_datos_ascii+1,w
  2256  0278  3A00               	xorlw	0	; case 0
  2257  0279  1903               	skipnz
  2258  027A  2A7C               	goto	l1853
  2259  027B  2A5E               	goto	l1575
  2260  027C                     l1853:
  2261                           
  2262                           ; Switch size 1, requested type "simple"
  2263                           ; Number of cases is 10, Range of values is 0 to 9
  2264                           ; switch strategies available:
  2265                           ; Name         Instructions Cycles
  2266                           ; simple_byte           31    16 (average)
  2267                           ; direct_byte           38     8 (fixed)
  2268                           ; jumptable            260     6 (fixed)
  2269                           ;	Chosen strategy is simple_byte
  2270  027C  0820               	movf	??_datos_ascii,w
  2271  027D  3A00               	xorlw	0	; case 0
  2272  027E  1903               	skipnz
  2273  027F  2A5E               	goto	l1575
  2274  0280  3A01               	xorlw	1	; case 1
  2275  0281  1903               	skipnz
  2276  0282  2A60               	goto	l1587
  2277  0283  3A03               	xorlw	3	; case 2
  2278  0284  1903               	skipnz
  2279  0285  2A62               	goto	l1593
  2280  0286  3A01               	xorlw	1	; case 3
  2281  0287  1903               	skipnz
  2282  0288  2A64               	goto	l1599
  2283  0289  3A07               	xorlw	7	; case 4
  2284  028A  1903               	skipnz
  2285  028B  2A66               	goto	l1605
  2286  028C  3A01               	xorlw	1	; case 5
  2287  028D  1903               	skipnz
  2288  028E  2A68               	goto	l1611
  2289  028F  3A03               	xorlw	3	; case 6
  2290  0290  1903               	skipnz
  2291  0291  2A6A               	goto	l1617
  2292  0292  3A01               	xorlw	1	; case 7
  2293  0293  1903               	skipnz
  2294  0294  2A6C               	goto	l1623
  2295  0295  3A0F               	xorlw	15	; case 8
  2296  0296  1903               	skipnz
  2297  0297  2A6E               	goto	l1629
  2298  0298  3A01               	xorlw	1	; case 9
  2299  0299  1903               	skipnz
  2300  029A  2A70               	goto	l1635
  2301  029B  2A5E               	goto	l1575
  2302  029C                     l96:
  2303  029C  0008               	return
  2304  029D                     __end_of_datos_ascii:
  2305                           
  2306                           	psect	text13
  2307  01A7                     __ptext13:	
  2308 ;; *************** function ___awmod *****************
  2309 ;; Defined at:
  2310 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  divisor         2    8[BANK0 ] int 
  2313 ;;  dividend        2   10[BANK0 ] int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  sign            1   14[BANK0 ] unsigned char 
  2316 ;;  counter         1   13[BANK0 ] unsigned char 
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  2    8[BANK0 ] int 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       4       0       0       0
  2327 ;;      Locals:         0       2       0       0       0
  2328 ;;      Temps:          0       1       0       0       0
  2329 ;;      Totals:         0       7       0       0       0
  2330 ;;Total ram usage:        7 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    2
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_lcd_ascii
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function ___awmod
  2342  01A7                     ___awmod:
  2343  01A7                     l1661:	
  2344                           ;incstack = 0
  2345                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2346                           
  2347  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2348  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2349  01A9  01AE               	clrf	___awmod@sign
  2350  01AA                     l1663:
  2351  01AA  1FAB               	btfss	___awmod@dividend+1,7
  2352  01AB  29AD               	goto	u491
  2353  01AC  29AE               	goto	u490
  2354  01AD                     u491:
  2355  01AD  29B5               	goto	l1669
  2356  01AE                     u490:
  2357  01AE                     l1665:
  2358  01AE  09AA               	comf	___awmod@dividend,f
  2359  01AF  09AB               	comf	___awmod@dividend+1,f
  2360  01B0  0AAA               	incf	___awmod@dividend,f
  2361  01B1  1903               	skipnz
  2362  01B2  0AAB               	incf	___awmod@dividend+1,f
  2363  01B3                     l1667:
  2364  01B3  01AE               	clrf	___awmod@sign
  2365  01B4  0AAE               	incf	___awmod@sign,f
  2366  01B5                     l1669:
  2367  01B5  1FA9               	btfss	___awmod@divisor+1,7
  2368  01B6  29B8               	goto	u501
  2369  01B7  29B9               	goto	u500
  2370  01B8                     u501:
  2371  01B8  29BE               	goto	l1673
  2372  01B9                     u500:
  2373  01B9                     l1671:
  2374  01B9  09A8               	comf	___awmod@divisor,f
  2375  01BA  09A9               	comf	___awmod@divisor+1,f
  2376  01BB  0AA8               	incf	___awmod@divisor,f
  2377  01BC  1903               	skipnz
  2378  01BD  0AA9               	incf	___awmod@divisor+1,f
  2379  01BE                     l1673:
  2380  01BE  0828               	movf	___awmod@divisor,w
  2381  01BF  0429               	iorwf	___awmod@divisor+1,w
  2382  01C0  1903               	btfsc	3,2
  2383  01C1  29C3               	goto	u511
  2384  01C2  29C4               	goto	u510
  2385  01C3                     u511:
  2386  01C3  29F3               	goto	l1691
  2387  01C4                     u510:
  2388  01C4                     l1675:
  2389  01C4  01AD               	clrf	___awmod@counter
  2390  01C5  0AAD               	incf	___awmod@counter,f
  2391  01C6  29D2               	goto	l1681
  2392  01C7                     l1677:
  2393  01C7  3001               	movlw	1
  2394  01C8                     u525:
  2395  01C8  1003               	clrc
  2396  01C9  0DA8               	rlf	___awmod@divisor,f
  2397  01CA  0DA9               	rlf	___awmod@divisor+1,f
  2398  01CB  3EFF               	addlw	-1
  2399  01CC  1D03               	skipz
  2400  01CD  29C8               	goto	u525
  2401  01CE                     l1679:
  2402  01CE  3001               	movlw	1
  2403  01CF  00AC               	movwf	??___awmod
  2404  01D0  082C               	movf	??___awmod,w
  2405  01D1  07AD               	addwf	___awmod@counter,f
  2406  01D2                     l1681:
  2407  01D2  1FA9               	btfss	___awmod@divisor+1,7
  2408  01D3  29D5               	goto	u531
  2409  01D4  29D6               	goto	u530
  2410  01D5                     u531:
  2411  01D5  29C7               	goto	l1677
  2412  01D6                     u530:
  2413  01D6                     l1683:
  2414  01D6  0829               	movf	___awmod@divisor+1,w
  2415  01D7  022B               	subwf	___awmod@dividend+1,w
  2416  01D8  1D03               	skipz
  2417  01D9  29DC               	goto	u545
  2418  01DA  0828               	movf	___awmod@divisor,w
  2419  01DB  022A               	subwf	___awmod@dividend,w
  2420  01DC                     u545:
  2421  01DC  1C03               	skipc
  2422  01DD  29DF               	goto	u541
  2423  01DE  29E0               	goto	u540
  2424  01DF                     u541:
  2425  01DF  29E6               	goto	l1687
  2426  01E0                     u540:
  2427  01E0                     l1685:
  2428  01E0  0828               	movf	___awmod@divisor,w
  2429  01E1  02AA               	subwf	___awmod@dividend,f
  2430  01E2  0829               	movf	___awmod@divisor+1,w
  2431  01E3  1C03               	skipc
  2432  01E4  03AB               	decf	___awmod@dividend+1,f
  2433  01E5  02AB               	subwf	___awmod@dividend+1,f
  2434  01E6                     l1687:
  2435  01E6  3001               	movlw	1
  2436  01E7                     u555:
  2437  01E7  1003               	clrc
  2438  01E8  0CA9               	rrf	___awmod@divisor+1,f
  2439  01E9  0CA8               	rrf	___awmod@divisor,f
  2440  01EA  3EFF               	addlw	-1
  2441  01EB  1D03               	skipz
  2442  01EC  29E7               	goto	u555
  2443  01ED                     l1689:
  2444  01ED  3001               	movlw	1
  2445  01EE  02AD               	subwf	___awmod@counter,f
  2446  01EF  1D03               	btfss	3,2
  2447  01F0  29F2               	goto	u561
  2448  01F1  29F3               	goto	u560
  2449  01F2                     u561:
  2450  01F2  29D6               	goto	l1683
  2451  01F3                     u560:
  2452  01F3                     l1691:
  2453  01F3  082E               	movf	___awmod@sign,w
  2454  01F4  1903               	btfsc	3,2
  2455  01F5  29F7               	goto	u571
  2456  01F6  29F8               	goto	u570
  2457  01F7                     u571:
  2458  01F7  29FD               	goto	l1695
  2459  01F8                     u570:
  2460  01F8                     l1693:
  2461  01F8  09AA               	comf	___awmod@dividend,f
  2462  01F9  09AB               	comf	___awmod@dividend+1,f
  2463  01FA  0AAA               	incf	___awmod@dividend,f
  2464  01FB  1903               	skipnz
  2465  01FC  0AAB               	incf	___awmod@dividend+1,f
  2466  01FD                     l1695:
  2467  01FD  082B               	movf	___awmod@dividend+1,w
  2468  01FE  00A9               	movwf	?___awmod+1
  2469  01FF  082A               	movf	___awmod@dividend,w
  2470  0200  00A8               	movwf	?___awmod
  2471  0201                     l431:
  2472  0201  0008               	return
  2473  0202                     __end_of___awmod:
  2474                           
  2475                           	psect	text14
  2476  013E                     __ptext14:	
  2477 ;; *************** function ___awdiv *****************
  2478 ;; Defined at:
  2479 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  divisor         2    0[BANK0 ] int 
  2482 ;;  dividend        2    2[BANK0 ] int 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  quotient        2    6[BANK0 ] int 
  2485 ;;  sign            1    5[BANK0 ] unsigned char 
  2486 ;;  counter         1    4[BANK0 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    0[BANK0 ] int 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       4       0       0       0
  2497 ;;      Locals:         0       4       0       0       0
  2498 ;;      Temps:          1       0       0       0       0
  2499 ;;      Totals:         1       8       0       0       0
  2500 ;;Total ram usage:        9 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    2
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_lcd_ascii
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function ___awdiv
  2512  013E                     ___awdiv:
  2513  013E                     l1283:	
  2514                           ;incstack = 0
  2515                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2516                           
  2517  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2518  013F  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0140  01A5               	clrf	___awdiv@sign
  2520  0141                     l1285:
  2521  0141  1FA1               	btfss	___awdiv@divisor+1,7
  2522  0142  2944               	goto	u251
  2523  0143  2945               	goto	u250
  2524  0144                     u251:
  2525  0144  294C               	goto	l1291
  2526  0145                     u250:
  2527  0145                     l1287:
  2528  0145  09A0               	comf	___awdiv@divisor,f
  2529  0146  09A1               	comf	___awdiv@divisor+1,f
  2530  0147  0AA0               	incf	___awdiv@divisor,f
  2531  0148  1903               	skipnz
  2532  0149  0AA1               	incf	___awdiv@divisor+1,f
  2533  014A                     l1289:
  2534  014A  01A5               	clrf	___awdiv@sign
  2535  014B  0AA5               	incf	___awdiv@sign,f
  2536  014C                     l1291:
  2537  014C  1FA3               	btfss	___awdiv@dividend+1,7
  2538  014D  294F               	goto	u261
  2539  014E  2950               	goto	u260
  2540  014F                     u261:
  2541  014F  2959               	goto	l1297
  2542  0150                     u260:
  2543  0150                     l1293:
  2544  0150  09A2               	comf	___awdiv@dividend,f
  2545  0151  09A3               	comf	___awdiv@dividend+1,f
  2546  0152  0AA2               	incf	___awdiv@dividend,f
  2547  0153  1903               	skipnz
  2548  0154  0AA3               	incf	___awdiv@dividend+1,f
  2549  0155                     l1295:
  2550  0155  3001               	movlw	1
  2551  0156  00F6               	movwf	??___awdiv
  2552  0157  0876               	movf	??___awdiv,w
  2553  0158  06A5               	xorwf	___awdiv@sign,f
  2554  0159                     l1297:
  2555  0159  01A6               	clrf	___awdiv@quotient
  2556  015A  01A7               	clrf	___awdiv@quotient+1
  2557  015B                     l1299:
  2558  015B  0820               	movf	___awdiv@divisor,w
  2559  015C  0421               	iorwf	___awdiv@divisor+1,w
  2560  015D  1903               	btfsc	3,2
  2561  015E  2960               	goto	u271
  2562  015F  2961               	goto	u270
  2563  0160                     u271:
  2564  0160  2998               	goto	l1319
  2565  0161                     u270:
  2566  0161                     l1301:
  2567  0161  01A4               	clrf	___awdiv@counter
  2568  0162  0AA4               	incf	___awdiv@counter,f
  2569  0163  296F               	goto	l1307
  2570  0164                     l1303:
  2571  0164  3001               	movlw	1
  2572  0165                     u285:
  2573  0165  1003               	clrc
  2574  0166  0DA0               	rlf	___awdiv@divisor,f
  2575  0167  0DA1               	rlf	___awdiv@divisor+1,f
  2576  0168  3EFF               	addlw	-1
  2577  0169  1D03               	skipz
  2578  016A  2965               	goto	u285
  2579  016B                     l1305:
  2580  016B  3001               	movlw	1
  2581  016C  00F6               	movwf	??___awdiv
  2582  016D  0876               	movf	??___awdiv,w
  2583  016E  07A4               	addwf	___awdiv@counter,f
  2584  016F                     l1307:
  2585  016F  1FA1               	btfss	___awdiv@divisor+1,7
  2586  0170  2972               	goto	u291
  2587  0171  2973               	goto	u290
  2588  0172                     u291:
  2589  0172  2964               	goto	l1303
  2590  0173                     u290:
  2591  0173                     l1309:
  2592  0173  3001               	movlw	1
  2593  0174                     u305:
  2594  0174  1003               	clrc
  2595  0175  0DA6               	rlf	___awdiv@quotient,f
  2596  0176  0DA7               	rlf	___awdiv@quotient+1,f
  2597  0177  3EFF               	addlw	-1
  2598  0178  1D03               	skipz
  2599  0179  2974               	goto	u305
  2600  017A  0821               	movf	___awdiv@divisor+1,w
  2601  017B  0223               	subwf	___awdiv@dividend+1,w
  2602  017C  1D03               	skipz
  2603  017D  2980               	goto	u315
  2604  017E  0820               	movf	___awdiv@divisor,w
  2605  017F  0222               	subwf	___awdiv@dividend,w
  2606  0180                     u315:
  2607  0180  1C03               	skipc
  2608  0181  2983               	goto	u311
  2609  0182  2984               	goto	u310
  2610  0183                     u311:
  2611  0183  298B               	goto	l1315
  2612  0184                     u310:
  2613  0184                     l1311:
  2614  0184  0820               	movf	___awdiv@divisor,w
  2615  0185  02A2               	subwf	___awdiv@dividend,f
  2616  0186  0821               	movf	___awdiv@divisor+1,w
  2617  0187  1C03               	skipc
  2618  0188  03A3               	decf	___awdiv@dividend+1,f
  2619  0189  02A3               	subwf	___awdiv@dividend+1,f
  2620  018A                     l1313:
  2621  018A  1426               	bsf	___awdiv@quotient,0
  2622  018B                     l1315:
  2623  018B  3001               	movlw	1
  2624  018C                     u325:
  2625  018C  1003               	clrc
  2626  018D  0CA1               	rrf	___awdiv@divisor+1,f
  2627  018E  0CA0               	rrf	___awdiv@divisor,f
  2628  018F  3EFF               	addlw	-1
  2629  0190  1D03               	skipz
  2630  0191  298C               	goto	u325
  2631  0192                     l1317:
  2632  0192  3001               	movlw	1
  2633  0193  02A4               	subwf	___awdiv@counter,f
  2634  0194  1D03               	btfss	3,2
  2635  0195  2997               	goto	u331
  2636  0196  2998               	goto	u330
  2637  0197                     u331:
  2638  0197  2973               	goto	l1309
  2639  0198                     u330:
  2640  0198                     l1319:
  2641  0198  0825               	movf	___awdiv@sign,w
  2642  0199  1903               	btfsc	3,2
  2643  019A  299C               	goto	u341
  2644  019B  299D               	goto	u340
  2645  019C                     u341:
  2646  019C  29A2               	goto	l1323
  2647  019D                     u340:
  2648  019D                     l1321:
  2649  019D  09A6               	comf	___awdiv@quotient,f
  2650  019E  09A7               	comf	___awdiv@quotient+1,f
  2651  019F  0AA6               	incf	___awdiv@quotient,f
  2652  01A0  1903               	skipnz
  2653  01A1  0AA7               	incf	___awdiv@quotient+1,f
  2654  01A2                     l1323:
  2655  01A2  0827               	movf	___awdiv@quotient+1,w
  2656  01A3  00A1               	movwf	?___awdiv+1
  2657  01A4  0826               	movf	___awdiv@quotient,w
  2658  01A5  00A0               	movwf	?___awdiv
  2659  01A6                     l418:
  2660  01A6  0008               	return
  2661  01A7                     __end_of___awdiv:
  2662                           
  2663                           	psect	text15
  2664  03E0                     __ptext15:	
  2665 ;; *************** function _isr *****************
  2666 ;; Defined at:
  2667 ;;		line 64 in file "main_.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0
  2683 ;;      Temps:          4       0       0       0       0
  2684 ;;      Totals:         4       0       0       0       0
  2685 ;;Total ram usage:        4 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		_recepcion_uart
  2690 ;; This function is called by:
  2691 ;;		Interrupt level 1
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _isr
  2697  03E0                     _isr:
  2698  03E0                     i1l1465:
  2699                           
  2700                           ;main_.c: 67:     if(PIR1bits.RCIF)
  2701  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2702  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2703  03E2  1E8C               	btfss	12,5	;volatile
  2704  03E3  2BE5               	goto	u48_21
  2705  03E4  2BE6               	goto	u48_20
  2706  03E5                     u48_21:
  2707  03E5  2BF0               	goto	i1l72
  2708  03E6                     u48_20:
  2709  03E6                     i1l1467:
  2710                           
  2711                           ;main_.c: 68:     {;main_.c: 69:         dato_recibido=RCREG;
  2712  03E6  081A               	movf	26,w	;volatile
  2713  03E7  00F2               	movwf	??_isr
  2714  03E8  0872               	movf	??_isr,w
  2715  03E9  00F7               	movwf	_dato_recibido
  2716  03EA                     i1l1469:
  2717                           
  2718                           ;main_.c: 70:         PIR1bits.RCIF=0;
  2719  03EA  128C               	bcf	12,5	;volatile
  2720  03EB                     i1l1471:
  2721                           
  2722                           ;main_.c: 71:         recepcion_uart();
  2723  03EB  120A  118A  23C2  120A  118A  	fcall	_recepcion_uart
  2724  03F0                     i1l72:
  2725  03F0  0875               	movf	??_isr+3,w
  2726  03F1  008A               	movwf	10
  2727  03F2  0874               	movf	??_isr+2,w
  2728  03F3  0084               	movwf	4
  2729  03F4  0E73               	swapf	??_isr+1,w
  2730  03F5  0083               	movwf	3
  2731  03F6  0EFE               	swapf	btemp,f
  2732  03F7  0E7E               	swapf	btemp,w
  2733  03F8  0009               	retfie
  2734  03F9                     __end_of_isr:
  2735                           
  2736                           	psect	intentry
  2737  0004                     __pintentry:	
  2738                           ;incstack = 0
  2739                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2740                           
  2741  0004                     interrupt_function:
  2742  007E                     saved_w	set	btemp
  2743  0004  00FE               	movwf	btemp
  2744  0005  0E03               	swapf	3,w
  2745  0006  00F3               	movwf	??_isr+1
  2746  0007  0804               	movf	4,w
  2747  0008  00F4               	movwf	??_isr+2
  2748  0009  080A               	movf	10,w
  2749  000A  00F5               	movwf	??_isr+3
  2750  000B  120A  118A  2BE0   	ljmp	_isr
  2751                           
  2752                           	psect	text16
  2753  03C2                     __ptext16:	
  2754 ;; *************** function _recepcion_uart *****************
  2755 ;; Defined at:
  2756 ;;		line 252 in file "main_.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0
  2772 ;;      Temps:          2       0       0       0       0
  2773 ;;      Totals:         2       0       0       0       0
  2774 ;;Total ram usage:        2 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_isr
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _recepcion_uart
  2785  03C2                     _recepcion_uart:
  2786  03C2                     i1l1365:	
  2787                           ;incstack = 0
  2788                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  2789                           
  2790                           
  2791                           ;main_.c: 254:     switch(dato_recibido)
  2792  03C2  2BCF               	goto	i1l1373
  2793  03C3                     i1l1367:
  2794                           
  2795                           ;main_.c: 257:             cuenta_uart++;
  2796  03C3  3001               	movlw	1
  2797  03C4  00F0               	movwf	??_recepcion_uart
  2798  03C5  0870               	movf	??_recepcion_uart,w
  2799  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2800  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2801  03C8  07C7               	addwf	_cuenta_uart,f
  2802                           
  2803                           ;main_.c: 258:             break;
  2804  03C9  2BDF               	goto	i1l117
  2805  03CA                     i1l1369:
  2806                           
  2807                           ;main_.c: 261:             cuenta_uart--;
  2808  03CA  3001               	movlw	1
  2809  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2810  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2811  03CD  02C7               	subwf	_cuenta_uart,f
  2812                           
  2813                           ;main_.c: 262:             break;
  2814  03CE  2BDF               	goto	i1l117
  2815  03CF                     i1l1373:
  2816  03CF  0877               	movf	_dato_recibido,w
  2817  03D0  00F0               	movwf	??_recepcion_uart
  2818  03D1  01F1               	clrf	??_recepcion_uart+1
  2819                           
  2820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2821                           ; Switch size 1, requested type "simple"
  2822                           ; Number of cases is 1, Range of values is 0 to 0
  2823                           ; switch strategies available:
  2824                           ; Name         Instructions Cycles
  2825                           ; simple_byte            4     3 (average)
  2826                           ; direct_byte           11     8 (fixed)
  2827                           ; jumptable            260     6 (fixed)
  2828                           ;	Chosen strategy is simple_byte
  2829  03D2  0871               	movf	??_recepcion_uart+1,w
  2830  03D3  3A00               	xorlw	0	; case 0
  2831  03D4  1903               	skipnz
  2832  03D5  2BD7               	goto	i1l1855
  2833  03D6  2BDF               	goto	i1l117
  2834  03D7                     i1l1855:
  2835                           
  2836                           ; Switch size 1, requested type "simple"
  2837                           ; Number of cases is 2, Range of values is 49 to 50
  2838                           ; switch strategies available:
  2839                           ; Name         Instructions Cycles
  2840                           ; simple_byte            7     4 (average)
  2841                           ; direct_byte           17    11 (fixed)
  2842                           ; jumptable            263     9 (fixed)
  2843                           ;	Chosen strategy is simple_byte
  2844  03D7  0870               	movf	??_recepcion_uart,w
  2845  03D8  3A31               	xorlw	49	; case 49
  2846  03D9  1903               	skipnz
  2847  03DA  2BC3               	goto	i1l1367
  2848  03DB  3A03               	xorlw	3	; case 50
  2849  03DC  1903               	skipnz
  2850  03DD  2BCA               	goto	i1l1369
  2851  03DE  2BDF               	goto	i1l117
  2852  03DF                     i1l117:
  2853  03DF  0008               	return
  2854  03E0                     __end_of_recepcion_uart:
  2855  007E                     btemp	set	126	;btemp
  2856  007E                     wtemp0	set	126
  2857                           
  2858                           	psect	config
  2859                           
  2860                           ;Config register CONFIG1 @ 0x2007
  2861                           ;	Oscillator Selection bits
  2862                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2863                           ;	Watchdog Timer Enable bit
  2864                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2865                           ;	Power-up Timer Enable bit
  2866                           ;	PWRTE = OFF, PWRT disabled
  2867                           ;	RE3/MCLR pin function select bit
  2868                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2869                           ;	Code Protection bit
  2870                           ;	CP = OFF, Program memory code protection is disabled
  2871                           ;	Data Code Protection bit
  2872                           ;	CPD = OFF, Data memory code protection is disabled
  2873                           ;	Brown Out Reset Selection bits
  2874                           ;	BOREN = OFF, BOR disabled
  2875                           ;	Internal External Switchover bit
  2876                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2877                           ;	Fail-Safe Clock Monitor Enabled bit
  2878                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2879                           ;	Low Voltage Programming Enable bit
  2880                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2881                           ;	In-Circuit Debugger Mode bit
  2882                           ;	DEBUG = 0x1, unprogrammed default
  2883  2007                     	org	8199
  2884  2007  20D4               	dw	8404
  2885                           
  2886                           ;Config register CONFIG2 @ 0x2008
  2887                           ;	Brown-out Reset Selection bit
  2888                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2889                           ;	Flash Program Memory Self Write Enable bits
  2890                           ;	WRT = OFF, Write protection off
  2891  2008                     	org	8200
  2892  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     39      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_cmd
    _show->_dat
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_clear->_cmd
    _lcd_ascii->___awdiv
    _lcd_ascii->_datos_ascii
    ___awmod->___awdiv

Critical Paths under _isr in COMMON

    _isr->_recepcion_uart

Critical Paths under _main in BANK0

    _main->_show
    _show->_lcd_ascii
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_clear->_cmd
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3872
                                             37 BANK0      2     2      0
                                _cmd
                          _lcd_ascii
                          _lcd_clear
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 3     1      2     267
                                             34 BANK0      3     1      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  2     2      0      22
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     471
                                              1 BANK0      5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      31
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      31
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0      31
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           19    19      0    3041
                                             15 BANK0     19    19      0
                            ___awdiv
                            ___awmod
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      31
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              8 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              6 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                     _recepcion_uart
 ---------------------------------------------------------------------------------
 (4) _recepcion_uart                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_ascii
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _datos_ascii
   _lcd_clear
     _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _adc_config
     _uart_config
   _show
     _dat
     _lcd_ascii (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)
   _recepcion_uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 29 04:30:28 2021

                      pc 0002                       l83 0345                       l91 02DB  
                     l96 029C             ___awdiv@sign 0025          ?_recepcion_uart 0070  
                     fsr 0004                      l110 013D                      l132 044F  
                    l141 0421                      l135 0312                      l153 03A2  
                    l138 0434                      l147 0374                      l431 0201  
                    l168 040E                      l418 01A6                      l179 0442  
                    l781 03F9                      l783 03FE                      l791 0438  
                    l785 0406                      l793 043C                      l787 040B  
                    l795 043D                      l797 0440                      l789 0435  
                    l799 0441                      l991 031D                      l983 0313  
                    l993 031E                      l985 0317                      l995 031F  
                    l987 0318                      l997 0320                      l989 031C  
                    l999 0325                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u310 0184                      u311 0183  
                    u305 0174                      u330 0198                      u250 0145  
                    u331 0197                      u315 0180                      u251 0144  
                    u340 019D                      u260 0150                      u500 01B9  
                    u341 019C                      u325 018C                      u261 014F  
                    u501 01B8                      u270 0161                      u510 01C4  
                    u271 0160                      u511 01C3                      u600 0374  
                    u440 02A3                      u601 0373                      u441 02A2  
                    u290 0173                      u530 01D6                      u291 0172  
                    u531 01D5                      u540 01E0                      u285 0165  
                    u541 01DF                      u525 01C8                      u560 01F3  
                    u561 01F2                      u545 01DC                      u617 021B  
                    u570 01F8                      u490 01AE                      u571 01F7  
                    u555 01E7                      u491 01AD                      u627 02AC  
                    u580 037D                      u581 037C                      u637 02BF  
                    u590 0393                      u591 0392                      u647 0361  
                    u657 0419                      u667 0408                      u677 042C  
                    _dat 040F                      _cmd 0422                      _isr 03E0  
                    fsr0 0004                      indf 0000             ___awmod@sign 002E  
                   l1001 032B                     l1011 0334                     l1003 032C  
                   l1013 0339                     l1005 032D                     l1015 033E  
                   l1007 032E                     l1017 033F                     l1009 0330  
                   l1019 0342                     l1301 0161                     l1311 0184  
                   l1303 0164                     l1321 019D                     l1313 018A  
                   l1305 016B                     l1401 02C8                     l1323 01A2  
                   l1315 018B                     l1307 016F                     l1317 0192  
                   l1309 0173                     ?_dat 0070                     l1319 0198  
                   ?_cmd 0070                     l1291 014C                     l1283 013E  
                   l1611 0268                     l1293 0150                     l1285 0141  
                   l1605 0266                     l1701 02DC                     l1295 0155  
                   l1287 0145                     l1623 026C                     l1711 038D  
                   l1703 0378                     l1391 02B5                     l1383 029D  
                   l1297 0159                     l1289 014A                     l1617 026A  
                   l1713 0393                     l1705 037D                     l1721 0347  
                   l1393 02B7                     l1299 015B                     l1635 0270  
                   l1643 0272                     l1731 004A                     l1571 0431  
                   l1563 0425                     l1715 0398                     l1707 0382  
                   l1651 0412                     l1723 0355                     l1395 02C2  
                   l1387 02A4                     l1661 01A7                     l1629 026E  
                   l1573 025D                     l1741 00CE                     l1733 004E  
                   l1565 0427                     l1717 039C                     l1709 0386  
                   l1653 0414                     l1725 035D                     l1397 02C6  
                   l1389 02AF                     l1671 01B9                     l1663 01AA  
                   l1575 025E                     l1751 0130                     l1743 00FB  
                   l1735 007B                     l1567 0428                     l1655 0415  
                   l1727 0364                     l1719 0346                     l1681 01D2  
                   l1673 01BE                     l1665 01AE                     l1593 0262  
                   l1753 0134                     l1745 0119                     l1737 0099  
                   l1729 001B                     l1569 0429                     l1657 0416  
                   l1761 0202                     l1683 01D6                     l1675 01C4  
                   l1691 01F3                     l1667 01B3                     l1587 0260  
                   l1755 0138                     l1747 0128                     l1739 00CA  
                   l1659 041E                     l1851 02D3                     l1771 0231  
                   l1763 0217                     l1693 01F8                     l1685 01E0  
                   l1677 01C7                     l1669 01B5                     l1853 027C  
                   l1757 013C                     l1749 012C                     l1773 023C  
                   l1765 021F                     l1695 01FD                     l1687 01E6  
                   l1679 01CE                     l1599 0264                     l1775 0246  
                   l1767 0222                     l1689 01ED                     l1769 0227  
                   l1699 0443                     ?_isr 0070                     STR_1 03B3  
                   i1l72 03F0                     _TMR0 0001                     dat@b 0020  
                   cmd@a 0020                     _main 0202                     _show 0346  
                   btemp 007E                     start 000E                    ??_dat 0076  
                  ??_cmd 0076                    ??_isr 0072                    ?_main 0070  
        __end_of___awdiv 01A7          __end_of___awmod 0202                    ?_show 0042  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l117 03DF  
        ___awdiv@counter 0024                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    u48_20 03E6  
                  u48_21 03E5                    _TRISB 0086                    _setup 0313  
                  pclath 000A                    show@s 0042            lcd_linea@temp 0024  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 025C             __end_of_show 0375                   ??_main 0045  
                 ??_show 0044     __size_of_datos_ascii 0041                   _ADRESH 001E  
       ___awdiv@dividend 0022                   ?_setup 0070                   _ANSELH 0189  
                 i1l1373 03CF                   i1l1365 03C2                   i1l1367 03C3  
                 i1l1471 03EB                   i1l1369 03CA                   i1l1465 03E0  
                 i1l1467 03E6                   i1l1469 03EA                   i1l1855 03D7  
                 _SPBRGH 009A         __end_of_lcd_init 0313          lcd_ascii@random 0032  
              ??___awdiv 0076                ??___awmod 002C         ___awdiv@quotient 0026  
        ___awmod@divisor 0028          ___awmod@counter 002D             ?_uart_config 0070  
                 saved_w 007E  __end_of__initialization 0017         ??_recepcion_uart 0070  
         __pcstackCOMMON 0070               _adc_config 03F9            __end_of_setup 0346  
         _OPTION_REGbits 0081       __size_of_lcd_clear 000D       __size_of_lcd_ascii 0123  
     __size_of_lcd_linea 002E                  ??_setup 0077               __pbssBANK0 0047  
             __pmaintext 0202               __pintentry 0004                ?_lcd_init 0070  
             __stringtab 03A3        __end_of_lcd_clear 0450        __end_of_lcd_ascii 013E  
      __end_of_lcd_linea 03A3              ?_adc_config 0070                  ___awdiv 013E  
                ___awmod 01A7                _ANSELbits 0188                  __ptext1 029D  
                __ptext2 0346                  __ptext3 040F                  __ptext4 0313  
                __ptext5 0435                  __ptext6 03F9                  __ptext7 0375  
                __ptext8 02DC                  __ptext9 0443             __size_of_dat 0013  
           __size_of_cmd 0013             __size_of_isr 0019         ___awmod@dividend 002A  
   __size_of_uart_config 000E               ??_lcd_init 0077     end_of_initialization 0017  
              _RCSTAbits 0018            ??_datos_ascii 0020               _toggle_adc 029D  
              _TRISCbits 0087                _TRISDbits 0088      __size_of_adc_config 0016  
             lcd_linea@a 0023               lcd_linea@b 0021               lcd_linea@z 0025  
            _BAUDCTLbits 0187      start_initialization 0011      __end_of_datos_ascii 029D  
            __end_of_dat 0422              __end_of_cmd 0435              __end_of_isr 03F9  
      datos_ascii@numero 0076              ?_toggle_adc 0070              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0037  
           ??_adc_config 0076                 ?___awdiv 0020                 ?___awmod 0028  
          _dato_recibido 0077                _lcd_clear 0443                _lcd_ascii 001B  
            _datos_ascii 025C                _lcd_linea 0375                __pstrings 03A3  
__size_of_recepcion_uart 001E           __size_of_setup 0033       __end_of_adc_config 040F  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
    __size_of_toggle_adc 003F               ?_lcd_clear 0070               ?_lcd_ascii 0070  
             ?_lcd_linea 0021               _ADCON0bits 001F              __stringbase 03B2  
             _ADCON1bits 009F            ??_uart_config 0076              _cuenta_uart 0047  
            _conversion1 0049              _conversion2 0048         __size_of___awdiv 0069  
       __size_of___awmod 005B       __end_of__stringtab 03B3                 __ptext10 0422  
               __ptext11 001B                 __ptext12 025C                 __ptext13 01A7  
               __ptext14 013E                 __ptext15 03E0                 __ptext16 03C2  
    __end_of_uart_config 0443                 _lcd_init 02DC            __size_of_main 005A  
          __size_of_show 002F              ??_lcd_clear 0077              ??_lcd_ascii 002F  
            ??_lcd_linea 0022           _recepcion_uart 03C2               _INTCONbits 000B  
           ??_toggle_adc 0020                 intlevel1 0000                stringcode 03AD  
             _OSCCONbits 008F       __end_of_toggle_adc 02DC   __end_of_recepcion_uart 03E0  
           ?_datos_ascii 0070              _uart_config 0435                 stringdir 03AD  
               stringtab 03A3  
